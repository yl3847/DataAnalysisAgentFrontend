{"ast":null,"code":"import { isFunction, isNumber, isObject } from '@antv/util';\nimport { parseSize } from './size';\n/**\n * Format value with multiple types into a function returns number.\n * @param defaultValue default value when value is invalid\n * @param value value to be formatted\n * @returns formatted result, a function returns number\n */\nexport function formatNumberFn(defaultValue, value) {\n  let resultFunc;\n  if (isFunction(value)) {\n    resultFunc = value;\n  } else if (isNumber(value)) {\n    // value is number\n    resultFunc = () => value;\n  } else {\n    // value is not number and function\n    resultFunc = () => defaultValue;\n  }\n  return resultFunc;\n}\n/**\n * Format size config with multiple types into a function returns number\n * @param defaultValue default value when value is invalid\n * @param value value to be formatted\n * @param resultIsNumber whether returns number\n * @returns formatted result, a function returns number\n */\nexport function formatSizeFn(defaultValue, value, resultIsNumber = true) {\n  if (!value && value !== 0) {\n    return d => {\n      const {\n        size\n      } = d.data || {};\n      if (size) {\n        if (Array.isArray(size)) return resultIsNumber ? Math.max(...size) || defaultValue : size;\n        if (isObject(size) && size.width && size.height) {\n          return resultIsNumber ? Math.max(size.width, size.height) || defaultValue : [size.width, size.height];\n        }\n        return size;\n      }\n      return defaultValue;\n    };\n  }\n  if (isFunction(value)) return value;\n  if (isNumber(value)) return () => value;\n  if (Array.isArray(value)) {\n    return () => {\n      if (resultIsNumber) return Math.max(...value) || defaultValue;\n      return value;\n    };\n  }\n  if (isObject(value) && value.width && value.height) {\n    return () => {\n      if (resultIsNumber) return Math.max(value.width, value.height) || defaultValue;\n      return [value.width, value.height];\n    };\n  }\n  return () => defaultValue;\n}\n/**\n * format the props nodeSize and nodeSpacing to a function\n * @param nodeSize\n * @param nodeSpacing\n * @returns\n */\nexport const formatNodeSizeToNumber = (nodeSize, nodeSpacing, defaultNodeSize = 10) => {\n  let nodeSizeFunc;\n  const nodeSpacingFunc = typeof nodeSpacing === 'function' ? nodeSpacing : () => nodeSpacing || 0;\n  if (!nodeSize) {\n    nodeSizeFunc = d => {\n      var _a, _b, _c;\n      if ((_a = d.data) === null || _a === void 0 ? void 0 : _a.bboxSize) return (_b = d.data) === null || _b === void 0 ? void 0 : _b.bboxSize;\n      if ((_c = d.data) === null || _c === void 0 ? void 0 : _c.size) {\n        const dataSize = d.data.size;\n        if (Array.isArray(dataSize)) return dataSize;\n        if (isObject(dataSize)) return [dataSize.width, dataSize.height];\n        return dataSize;\n      }\n      return defaultNodeSize;\n    };\n  } else if (Array.isArray(nodeSize)) {\n    nodeSizeFunc = d => nodeSize;\n  } else if (isFunction(nodeSize)) {\n    nodeSizeFunc = nodeSize;\n  } else {\n    nodeSizeFunc = d => nodeSize;\n  }\n  const func = d => {\n    const nodeSize = nodeSizeFunc(d);\n    const nodeSpacing = nodeSpacingFunc(d);\n    return Math.max(...parseSize(nodeSize)) + nodeSpacing;\n  };\n  return func;\n};","map":{"version":3,"names":["isFunction","isNumber","isObject","parseSize","formatNumberFn","defaultValue","value","resultFunc","formatSizeFn","resultIsNumber","d","size","data","Array","isArray","Math","max","width","height","formatNodeSizeToNumber","nodeSize","nodeSpacing","defaultNodeSize","nodeSizeFunc","nodeSpacingFunc","_a","bboxSize","_b","_c","dataSize","func"],"sources":["../../src/util/function.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}