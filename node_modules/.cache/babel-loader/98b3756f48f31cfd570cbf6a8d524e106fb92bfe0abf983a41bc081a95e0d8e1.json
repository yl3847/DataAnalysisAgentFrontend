{"ast":null,"code":"export function ema(values, alpha) {\n  if (alpha < 0 || alpha > 1) {\n    throw new Error('alpha must be between 0 and 1.');\n  }\n  if (values.length === 0) {\n    return [];\n  }\n  let last = values[0];\n  const smoothed = [];\n  for (const point of values) {\n    if (point === null || point === undefined) {\n      // 如果没有数据的话，使用最近的值\n      smoothed.push(point);\n      console.warn('EMA：The value is null or undefined', values);\n      continue;\n    }\n    if (last === null || last === undefined) {\n      last = point;\n    }\n    const smoothedVal = last * alpha + (1 - alpha) * point;\n    smoothed.push(smoothedVal);\n    last = smoothedVal;\n  }\n  return smoothed;\n}\n/**\n * https://en.wikipedia.org/wiki/Exponential_smoothing\n * @param options\n * @returns\n */\nexport const EMA = options => {\n  const {\n    field = 'y',\n    alpha = 0.6,\n    as = field\n  } = options;\n  return data => {\n    const values = data.map(d => {\n      return d[field];\n    });\n    const out = ema(values, alpha);\n    return data.map((d, i) => {\n      return Object.assign(Object.assign({}, d), {\n        [as]: out[i]\n      });\n    });\n  };\n};\nEMA.props = {};","map":{"version":3,"names":["ema","values","alpha","Error","length","last","smoothed","point","undefined","push","console","warn","smoothedVal","EMA","options","field","as","data","map","d","out","i","Object","assign","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/ema.ts"],"sourcesContent":["import { DataComponent as DC } from '../runtime';\nimport { EMADataTransform } from '../spec';\n\nexport function ema(values: number[], alpha: number): number[] {\n  if (alpha < 0 || alpha > 1) {\n    throw new Error('alpha must be between 0 and 1.');\n  }\n  if (values.length === 0) {\n    return [];\n  }\n\n  let last = values[0];\n  const smoothed: number[] = [];\n\n  for (const point of values) {\n    if (point === null || point === undefined) {\n      // 如果没有数据的话，使用最近的值\n      smoothed.push(point);\n      console.warn('EMA：The value is null or undefined', values);\n      continue;\n    }\n\n    if (last === null || last === undefined) {\n      last = point;\n    }\n\n    const smoothedVal = last * alpha + (1 - alpha) * point;\n    smoothed.push(smoothedVal);\n    last = smoothedVal;\n  }\n\n  return smoothed;\n}\n\nexport type EMAOptions = Omit<EMADataTransform, 'type'>;\n\n/**\n * https://en.wikipedia.org/wiki/Exponential_smoothing\n * @param options\n * @returns\n */\n\nexport const EMA: DC<EMAOptions> = (options) => {\n  const { field = 'y', alpha = 0.6, as = field } = options;\n\n  return (data) => {\n    const values = data.map((d) => {\n      return d[field];\n    });\n\n    const out = ema(values, alpha);\n\n    return data.map((d, i) => {\n      return {\n        ...d,\n        [as]: out[i],\n      };\n    });\n  };\n};\n\nEMA.props = {};\n"],"mappings":"AAGA,OAAM,SAAUA,GAAGA,CAACC,MAAgB,EAAEC,KAAa;EACjD,IAAIA,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAG,CAAC,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;;EAEnD,IAAIF,MAAM,CAACG,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,EAAE;;EAGX,IAAIC,IAAI,GAAGJ,MAAM,CAAC,CAAC,CAAC;EACpB,MAAMK,QAAQ,GAAa,EAAE;EAE7B,KAAK,MAAMC,KAAK,IAAIN,MAAM,EAAE;IAC1B,IAAIM,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKC,SAAS,EAAE;MACzC;MACAF,QAAQ,CAACG,IAAI,CAACF,KAAK,CAAC;MACpBG,OAAO,CAACC,IAAI,CAAC,oCAAoC,EAAEV,MAAM,CAAC;MAC1D;;IAGF,IAAII,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAKG,SAAS,EAAE;MACvCH,IAAI,GAAGE,KAAK;;IAGd,MAAMK,WAAW,GAAGP,IAAI,GAAGH,KAAK,GAAG,CAAC,CAAC,GAAGA,KAAK,IAAIK,KAAK;IACtDD,QAAQ,CAACG,IAAI,CAACG,WAAW,CAAC;IAC1BP,IAAI,GAAGO,WAAW;;EAGpB,OAAON,QAAQ;AACjB;AAIA;;;;;AAMA,OAAO,MAAMO,GAAG,GAAoBC,OAAO,IAAI;EAC7C,MAAM;IAAEC,KAAK,GAAG,GAAG;IAAEb,KAAK,GAAG,GAAG;IAAEc,EAAE,GAAGD;EAAK,CAAE,GAAGD,OAAO;EAExD,OAAQG,IAAI,IAAI;IACd,MAAMhB,MAAM,GAAGgB,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAI;MAC5B,OAAOA,CAAC,CAACJ,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMK,GAAG,GAAGpB,GAAG,CAACC,MAAM,EAAEC,KAAK,CAAC;IAE9B,OAAOe,IAAI,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEE,CAAC,KAAI;MACvB,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKJ,CAAC;QACJ,CAACH,EAAE,GAAGI,GAAG,CAACC,CAAC;MAAC;IAEhB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAEDR,GAAG,CAACW,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}