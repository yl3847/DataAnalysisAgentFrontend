{"ast":null,"code":"import { Path } from '@antv/g';\nimport { pointsToPath } from '../utils/path';\nimport { BrushSelect, getCursorPoint } from './brush-select';\n/**\n * <zh/> 套索选择交互\n *\n * <en/> Lasso select behavior\n * @remarks\n * <zh/> 用不规则多边形框选一组元素。\n *\n * <en/> Select a group of elements with an irregular polygon.\n */\nexport class LassoSelect extends BrushSelect {\n  /**\n   * Triggered when the mouse is pressed\n   * @param event - mouse event\n   * @internal\n   */\n  onPointerDown(event) {\n    if (!super.validate(event) || !super.isKeydown() || this.points) return;\n    const {\n      canvas\n    } = this.context;\n    this.pathShape = new Path({\n      id: 'g6-lasso-select',\n      style: this.options.style\n    });\n    canvas.appendChild(this.pathShape);\n    this.points = [getCursorPoint(event)];\n  }\n  /**\n   * Triggered when the mouse is moved\n   * @param event - mouse event\n   * @internal\n   */\n  onPointerMove(event) {\n    var _a;\n    if (!this.points) return;\n    const {\n      immediately,\n      mode\n    } = this.options;\n    this.points.push(getCursorPoint(event));\n    (_a = this.pathShape) === null || _a === void 0 ? void 0 : _a.setAttribute('d', pointsToPath(this.points));\n    if (immediately && mode === 'default' && this.points.length > 2) super.updateElementsStates(this.points);\n  }\n  /**\n   * Triggered when the mouse is released\n   * @internal\n   */\n  onPointerUp() {\n    if (!this.points) return;\n    if (this.points.length < 2) {\n      this.clearLasso();\n      return;\n    }\n    super.updateElementsStates(this.points);\n    this.clearLasso();\n  }\n  clearLasso() {\n    var _a;\n    (_a = this.pathShape) === null || _a === void 0 ? void 0 : _a.remove();\n    this.pathShape = undefined;\n    this.points = undefined;\n  }\n}","map":{"version":3,"names":["Path","pointsToPath","BrushSelect","getCursorPoint","LassoSelect","onPointerDown","event","validate","isKeydown","points","canvas","context","pathShape","id","style","options","appendChild","onPointerMove","immediately","mode","push","_a","setAttribute","length","updateElementsStates","onPointerUp","clearLasso","remove","undefined"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/behaviors/lasso-select.ts"],"sourcesContent":["import { Path } from '@antv/g';\nimport type { IPointerEvent, Point } from '../types';\nimport { pointsToPath } from '../utils/path';\nimport type { BrushSelectOptions } from './brush-select';\nimport { BrushSelect, getCursorPoint } from './brush-select';\n\n/**\n * <zh/> 套索选择交互配置项\n *\n * <en/> Lasso select behavior options\n */\nexport interface LassoSelectOptions extends BrushSelectOptions {}\n\n/**\n * <zh/> 套索选择交互\n *\n * <en/> Lasso select behavior\n * @remarks\n * <zh/> 用不规则多边形框选一组元素。\n *\n * <en/> Select a group of elements with an irregular polygon.\n */\nexport class LassoSelect extends BrushSelect {\n  private points?: Point[];\n  private pathShape?: Path;\n\n  /**\n   * Triggered when the mouse is pressed\n   * @param event - mouse event\n   * @internal\n   */\n  protected onPointerDown(event: IPointerEvent) {\n    if (!super.validate(event) || !super.isKeydown() || this.points) return;\n    const { canvas } = this.context;\n\n    this.pathShape = new Path({\n      id: 'g6-lasso-select',\n      style: this.options.style,\n    });\n\n    canvas.appendChild(this.pathShape);\n\n    this.points = [getCursorPoint(event)];\n  }\n\n  /**\n   * Triggered when the mouse is moved\n   * @param event - mouse event\n   * @internal\n   */\n  protected onPointerMove(event: IPointerEvent) {\n    if (!this.points) return;\n    const { immediately, mode } = this.options;\n\n    this.points.push(getCursorPoint(event));\n\n    this.pathShape?.setAttribute('d', pointsToPath(this.points));\n\n    if (immediately && mode === 'default' && this.points.length > 2) super.updateElementsStates(this.points);\n  }\n\n  /**\n   * Triggered when the mouse is released\n   * @internal\n   */\n  protected onPointerUp() {\n    if (!this.points) return;\n    if (this.points.length < 2) {\n      this.clearLasso();\n      return;\n    }\n    super.updateElementsStates(this.points);\n\n    this.clearLasso();\n  }\n\n  private clearLasso() {\n    this.pathShape?.remove();\n    this.pathShape = undefined;\n    this.points = undefined;\n  }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,SAASC,YAAY,QAAQ,eAAe;AAE5C,SAASC,WAAW,EAAEC,cAAc,QAAQ,gBAAgB;AAS5D;;;;;;;;;AASA,OAAM,MAAOC,WAAY,SAAQF,WAAW;EAI1C;;;;;EAKUG,aAAaA,CAACC,KAAoB;IAC1C,IAAI,CAAC,KAAK,CAACC,QAAQ,CAACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAACE,SAAS,EAAE,IAAI,IAAI,CAACC,MAAM,EAAE;IACjE,MAAM;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACC,OAAO;IAE/B,IAAI,CAACC,SAAS,GAAG,IAAIZ,IAAI,CAAC;MACxBa,EAAE,EAAE,iBAAiB;MACrBC,KAAK,EAAE,IAAI,CAACC,OAAO,CAACD;KACrB,CAAC;IAEFJ,MAAM,CAACM,WAAW,CAAC,IAAI,CAACJ,SAAS,CAAC;IAElC,IAAI,CAACH,MAAM,GAAG,CAACN,cAAc,CAACG,KAAK,CAAC,CAAC;EACvC;EAEA;;;;;EAKUW,aAAaA,CAACX,KAAoB;;IAC1C,IAAI,CAAC,IAAI,CAACG,MAAM,EAAE;IAClB,MAAM;MAAES,WAAW;MAAEC;IAAI,CAAE,GAAG,IAAI,CAACJ,OAAO;IAE1C,IAAI,CAACN,MAAM,CAACW,IAAI,CAACjB,cAAc,CAACG,KAAK,CAAC,CAAC;IAEvC,CAAAe,EAAA,OAAI,CAACT,SAAS,cAAAS,EAAA,uBAAAA,EAAA,CAAEC,YAAY,CAAC,GAAG,EAAErB,YAAY,CAAC,IAAI,CAACQ,MAAM,CAAC,CAAC;IAE5D,IAAIS,WAAW,IAAIC,IAAI,KAAK,SAAS,IAAI,IAAI,CAACV,MAAM,CAACc,MAAM,GAAG,CAAC,EAAE,KAAK,CAACC,oBAAoB,CAAC,IAAI,CAACf,MAAM,CAAC;EAC1G;EAEA;;;;EAIUgB,WAAWA,CAAA;IACnB,IAAI,CAAC,IAAI,CAAChB,MAAM,EAAE;IAClB,IAAI,IAAI,CAACA,MAAM,CAACc,MAAM,GAAG,CAAC,EAAE;MAC1B,IAAI,CAACG,UAAU,EAAE;MACjB;IACF;IACA,KAAK,CAACF,oBAAoB,CAAC,IAAI,CAACf,MAAM,CAAC;IAEvC,IAAI,CAACiB,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;;IAChB,CAAAL,EAAA,OAAI,CAACT,SAAS,cAAAS,EAAA,uBAAAA,EAAA,CAAEM,MAAM,EAAE;IACxB,IAAI,CAACf,SAAS,GAAGgB,SAAS;IAC1B,IAAI,CAACnB,MAAM,GAAGmB,SAAS;EACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}