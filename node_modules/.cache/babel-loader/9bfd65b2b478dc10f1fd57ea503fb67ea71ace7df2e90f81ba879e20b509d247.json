{"ast":null,"code":"'use strict';\n\nimport { scaleLinearExpansion as robustScale } from './robust-scale';\nimport { robustSubtract } from './robust-subtract';\nimport { linearExpansionSum as robustSum } from './robust-sum';\nimport { twoProduct } from './two-product';\nconst NUM_EXPAND = 5;\nconst EPSILON = 1.1102230246251565e-16;\nconst ERR_BOUND_3 = (3.0 + 16.0 * EPSILON) * EPSILON;\nconst ERR_BOUND_4 = (7.0 + 56.0 * EPSILON) * EPSILON;\nfunction orientation_3(sum, prod, scale, sub) {\n  return function orientation3Exact(m0, m1, m2) {\n    const p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])));\n    const n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]));\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation_4(sum, prod, scale, sub) {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    const p = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))));\n    const n = sum(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))));\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation_5(sum, prod, scale, sub) {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    const p = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m1[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), -m2[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m3[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), -m4[3]), sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]), scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m1[3])))), sum(sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m3[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), -m4[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]))), m0[3]))), sum(scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m1[3]), sum(scale(sum(scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m3[3])))));\n    const n = sum(sum(sum(scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]), sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]), scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]), scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]))), -m2[3])), sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), m3[3]), scale(sum(scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]))), -m4[3]))), sum(sum(scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]), sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]), scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]))), m0[3]), scale(sum(scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]), scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]))), -m1[3])), sum(scale(sum(scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]))), m2[3]), scale(sum(scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]), sum(scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]), scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]))), -m4[3]))));\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\nfunction orientation(n) {\n  const fn = n === 3 ? orientation_3 : n === 4 ? orientation_4 : orientation_5;\n  return fn(robustSum, twoProduct, robustScale, robustSubtract);\n}\nconst orientation3Exact = orientation(3);\nconst orientation4Exact = orientation(4);\nconst CACHED = [function orientation0() {\n  return 0;\n}, function orientation1() {\n  return 0;\n}, function orientation2(a, b) {\n  return b[0] - a[0];\n}, function orientation3(a, b, c) {\n  const l = (a[1] - c[1]) * (b[0] - c[0]);\n  const r = (a[0] - c[0]) * (b[1] - c[1]);\n  const det = l - r;\n  let s;\n  if (l > 0) {\n    if (r <= 0) {\n      return det;\n    } else {\n      s = l + r;\n    }\n  } else if (l < 0) {\n    if (r >= 0) {\n      return det;\n    } else {\n      s = -(l + r);\n    }\n  } else {\n    return det;\n  }\n  const tol = ERR_BOUND_3 * s;\n  if (det >= tol || det <= -tol) {\n    return det;\n  }\n  return orientation3Exact(a, b, c);\n}, function orientation4(a, b, c, d) {\n  const adx = a[0] - d[0];\n  const bdx = b[0] - d[0];\n  const cdx = c[0] - d[0];\n  const ady = a[1] - d[1];\n  const bdy = b[1] - d[1];\n  const cdy = c[1] - d[1];\n  const adz = a[2] - d[2];\n  const bdz = b[2] - d[2];\n  const cdz = c[2] - d[2];\n  const bdx_cdy = bdx * cdy;\n  const cdx_bdy = cdx * bdy;\n  const cdx_ady = cdx * ady;\n  const adx_cdy = adx * cdy;\n  const adx_bdy = adx * bdy;\n  const bdx_ady = bdx * ady;\n  const det = adz * (bdx_cdy - cdx_bdy) + bdz * (cdx_ady - adx_cdy) + cdz * (adx_bdy - bdx_ady);\n  const permanent = (Math.abs(bdx_cdy) + Math.abs(cdx_bdy)) * Math.abs(adz) + (Math.abs(cdx_ady) + Math.abs(adx_cdy)) * Math.abs(bdz) + (Math.abs(adx_bdy) + Math.abs(bdx_ady)) * Math.abs(cdz);\n  const tol = ERR_BOUND_4 * permanent;\n  if (det > tol || -det > tol) {\n    return det;\n  }\n  return orientation4Exact(a, b, c, d);\n}];\nfunction slowOrient(args) {\n  let proc = CACHED[args.length];\n  if (!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n  return proc.apply(undefined, ...args);\n}\nfunction proc(slow, o0, o1, o2, o3, o4, o5) {\n  return function getOrientation(...args) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(args[0], args[1]);\n      case 3:\n        return o3(args[0], args[1], args[2]);\n      case 4:\n        return o4(args[0], args[1], args[2], args[3]);\n      case 5:\n        return o5(args[0], args[1], args[2], args[3], args[4]);\n    }\n    return slow(args);\n  };\n}\nfunction generateOrientationProc() {\n  while (CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n  // @ts-ignore\n  const orientationProc = proc(undefined, slowOrient, ...CACHED);\n  for (let i = 0; i <= NUM_EXPAND; ++i) {\n    // @ts-ignore\n    orientationProc[i] = CACHED[i];\n  }\n  return orientationProc;\n}\nexport default generateOrientationProc();","map":{"version":3,"names":["scaleLinearExpansion","robustScale","robustSubtract","linearExpansionSum","robustSum","twoProduct","NUM_EXPAND","EPSILON","ERR_BOUND_3","ERR_BOUND_4","orientation_3","sum","prod","scale","sub","orientation3Exact","m0","m1","m2","p","n","d","length","orientation_4","orientation4Exact","m3","orientation_5","orientation5Exact","m4","orientation","fn","CACHED","orientation0","orientation1","orientation2","a","b","orientation3","c","l","r","det","s","tol","orientation4","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","bdx_cdy","cdx_bdy","cdx_ady","adx_cdy","adx_bdy","bdx_ady","permanent","Math","abs","slowOrient","args","proc","apply","undefined","slow","o0","o1","o2","o3","o4","o5","getOrientation","generateOrientationProc","push","orientationProc","i"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/hull/hull/robust-orientation.ts"],"sourcesContent":["'use strict';\n\nimport { scaleLinearExpansion as robustScale } from './robust-scale';\nimport { robustSubtract } from './robust-subtract';\nimport { linearExpansionSum as robustSum } from './robust-sum';\nimport { twoProduct } from './two-product';\n\ntype PointND = number[];\n\nconst NUM_EXPAND = 5;\nconst EPSILON = 1.1102230246251565e-16;\nconst ERR_BOUND_3 = (3.0 + 16.0 * EPSILON) * EPSILON;\nconst ERR_BOUND_4 = (7.0 + 56.0 * EPSILON) * EPSILON;\n\nfunction orientation_3(\n  sum: typeof robustSum,\n  prod: typeof twoProduct,\n  scale: typeof robustScale,\n  sub: typeof robustSubtract,\n): (m0: PointND, m1: PointND, m2: PointND) => number {\n  return function orientation3Exact(m0, m1, m2) {\n    const p = sum(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])));\n    const n = sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0]));\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation_4(\n  sum: typeof robustSum,\n  prod: typeof twoProduct,\n  scale: typeof robustScale,\n  sub: typeof robustSubtract,\n): (m0: PointND, m1: PointND, m2: PointND, m3: PointND) => number {\n  return function orientation4Exact(m0, m1, m2, m3) {\n    const p = sum(\n      sum(\n        scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]),\n        sum(\n          scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]),\n          scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]),\n        ),\n      ),\n      sum(\n        scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]),\n        sum(\n          scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]),\n          scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]),\n        ),\n      ),\n    );\n    const n = sum(\n      sum(\n        scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]),\n        sum(\n          scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]),\n          scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]),\n        ),\n      ),\n      sum(\n        scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]),\n        sum(\n          scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]),\n          scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]),\n        ),\n      ),\n    );\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation_5(\n  sum: typeof robustSum,\n  prod: typeof twoProduct,\n  scale: typeof robustScale,\n  sub: typeof robustSubtract,\n): (...args: PointND[]) => number {\n  return function orientation5Exact(m0, m1, m2, m3, m4) {\n    const p = sum(\n      sum(\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]),\n              sum(\n                scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]),\n                scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]),\n              ),\n            ),\n            m1[3],\n          ),\n          sum(\n            scale(\n              sum(\n                scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]),\n                sum(\n                  scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]),\n                  scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]),\n                ),\n              ),\n              -m2[3],\n            ),\n            scale(\n              sum(\n                scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]),\n                sum(\n                  scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]),\n                  scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]),\n                ),\n              ),\n              m3[3],\n            ),\n          ),\n        ),\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]),\n              sum(\n                scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]),\n                scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]),\n              ),\n            ),\n            -m4[3],\n          ),\n          sum(\n            scale(\n              sum(\n                scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m1[2]),\n                sum(\n                  scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m3[2]),\n                  scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m4[2]),\n                ),\n              ),\n              m0[3],\n            ),\n            scale(\n              sum(\n                scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]),\n                sum(\n                  scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]),\n                  scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]),\n                ),\n              ),\n              -m1[3],\n            ),\n          ),\n        ),\n      ),\n      sum(\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]),\n                scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]),\n              ),\n            ),\n            m3[3],\n          ),\n          sum(\n            scale(\n              sum(\n                scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]),\n                sum(\n                  scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]),\n                  scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]),\n                ),\n              ),\n              -m4[3],\n            ),\n            scale(\n              sum(\n                scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m1[2]),\n                sum(\n                  scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), -m2[2]),\n                  scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m3[2]),\n                ),\n              ),\n              m0[3],\n            ),\n          ),\n        ),\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]),\n                scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]),\n              ),\n            ),\n            -m1[3],\n          ),\n          sum(\n            scale(\n              sum(\n                scale(sum(prod(m1[1], m3[0]), prod(-m3[1], m1[0])), m0[2]),\n                sum(\n                  scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m1[2]),\n                  scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m3[2]),\n                ),\n              ),\n              m2[3],\n            ),\n            scale(\n              sum(\n                scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]),\n                sum(\n                  scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]),\n                  scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]),\n                ),\n              ),\n              -m3[3],\n            ),\n          ),\n        ),\n      ),\n    );\n    const n = sum(\n      sum(\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m2[2]),\n              sum(\n                scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), -m3[2]),\n                scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m4[2]),\n              ),\n            ),\n            m0[3],\n          ),\n          scale(\n            sum(\n              scale(sum(prod(m3[1], m4[0]), prod(-m4[1], m3[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m3[2]),\n                scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), m4[2]),\n              ),\n            ),\n            -m2[3],\n          ),\n        ),\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]),\n                scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]),\n              ),\n            ),\n            m3[3],\n          ),\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m3[0]), prod(-m3[1], m2[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m3[0]), prod(-m3[1], m0[0])), -m2[2]),\n                scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m3[2]),\n              ),\n            ),\n            -m4[3],\n          ),\n        ),\n      ),\n      sum(\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m1[2]),\n              sum(\n                scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), -m2[2]),\n                scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m4[2]),\n              ),\n            ),\n            m0[3],\n          ),\n          scale(\n            sum(\n              scale(sum(prod(m2[1], m4[0]), prod(-m4[1], m2[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m2[2]),\n                scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), m4[2]),\n              ),\n            ),\n            -m1[3],\n          ),\n        ),\n        sum(\n          scale(\n            sum(\n              scale(sum(prod(m1[1], m4[0]), prod(-m4[1], m1[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m4[0]), prod(-m4[1], m0[0])), -m1[2]),\n                scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m4[2]),\n              ),\n            ),\n            m2[3],\n          ),\n          scale(\n            sum(\n              scale(sum(prod(m1[1], m2[0]), prod(-m2[1], m1[0])), m0[2]),\n              sum(\n                scale(sum(prod(m0[1], m2[0]), prod(-m2[1], m0[0])), -m1[2]),\n                scale(sum(prod(m0[1], m1[0]), prod(-m1[1], m0[0])), m2[2]),\n              ),\n            ),\n            -m4[3],\n          ),\n        ),\n      ),\n    );\n    const d = sub(p, n);\n    return d[d.length - 1];\n  };\n}\n\nfunction orientation(n: number) {\n  const fn = n === 3 ? orientation_3 : n === 4 ? orientation_4 : orientation_5;\n  return fn(robustSum, twoProduct, robustScale, robustSubtract);\n}\n\nconst orientation3Exact = orientation(3);\nconst orientation4Exact = orientation(4);\n\nconst CACHED: Array<Function> = [\n  function orientation0() {\n    return 0;\n  },\n  function orientation1() {\n    return 0;\n  },\n  function orientation2(a: PointND, b: PointND) {\n    return b[0] - a[0];\n  },\n  function orientation3(a: PointND, b: PointND, c: PointND) {\n    const l = (a[1] - c[1]) * (b[0] - c[0]);\n    const r = (a[0] - c[0]) * (b[1] - c[1]);\n    const det = l - r;\n    let s: number;\n    if (l > 0) {\n      if (r <= 0) {\n        return det;\n      } else {\n        s = l + r;\n      }\n    } else if (l < 0) {\n      if (r >= 0) {\n        return det;\n      } else {\n        s = -(l + r);\n      }\n    } else {\n      return det;\n    }\n    const tol = ERR_BOUND_3 * s;\n    if (det >= tol || det <= -tol) {\n      return det;\n    }\n    return orientation3Exact(a, b, c);\n  },\n  function orientation4(a: PointND, b: PointND, c: PointND, d: PointND) {\n    const adx = a[0] - d[0];\n    const bdx = b[0] - d[0];\n    const cdx = c[0] - d[0];\n    const ady = a[1] - d[1];\n    const bdy = b[1] - d[1];\n    const cdy = c[1] - d[1];\n    const adz = a[2] - d[2];\n    const bdz = b[2] - d[2];\n    const cdz = c[2] - d[2];\n    const bdx_cdy = bdx * cdy;\n    const cdx_bdy = cdx * bdy;\n    const cdx_ady = cdx * ady;\n    const adx_cdy = adx * cdy;\n    const adx_bdy = adx * bdy;\n    const bdx_ady = bdx * ady;\n    const det = adz * (bdx_cdy - cdx_bdy) + bdz * (cdx_ady - adx_cdy) + cdz * (adx_bdy - bdx_ady);\n    const permanent =\n      (Math.abs(bdx_cdy) + Math.abs(cdx_bdy)) * Math.abs(adz) +\n      (Math.abs(cdx_ady) + Math.abs(adx_cdy)) * Math.abs(bdz) +\n      (Math.abs(adx_bdy) + Math.abs(bdx_ady)) * Math.abs(cdz);\n    const tol = ERR_BOUND_4 * permanent;\n    if (det > tol || -det > tol) {\n      return det;\n    }\n    return orientation4Exact(a, b, c, d);\n  },\n];\n\nfunction slowOrient(args: Array<PointND | PointND>): number {\n  let proc = CACHED[args.length];\n  if (!proc) {\n    proc = CACHED[args.length] = orientation(args.length);\n  }\n  return proc.apply(undefined, ...args);\n}\n\nfunction proc(\n  slow: typeof slowOrient,\n  o0: Function,\n  o1: Function,\n  o2: Function,\n  o3: Function,\n  o4: Function,\n  o5: Function,\n): (...args: Array<PointND | PointND>) => number {\n  return function getOrientation(...args: Array<PointND | PointND>) {\n    switch (args.length) {\n      case 0:\n      case 1:\n        return 0;\n      case 2:\n        return o2(args[0], args[1]);\n      case 3:\n        return o3(args[0], args[1], args[2]);\n      case 4:\n        return o4(args[0], args[1], args[2], args[3]);\n      case 5:\n        return o5(args[0], args[1], args[2], args[3], args[4]);\n    }\n\n    return slow(args);\n  };\n}\n\nfunction generateOrientationProc(): any {\n  while (CACHED.length <= NUM_EXPAND) {\n    CACHED.push(orientation(CACHED.length));\n  }\n  // @ts-ignore\n  const orientationProc = proc(undefined, slowOrient, ...CACHED);\n  for (let i = 0; i <= NUM_EXPAND; ++i) {\n    // @ts-ignore\n    orientationProc[i] = CACHED[i];\n  }\n  return orientationProc;\n}\n\nexport default generateOrientationProc();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}