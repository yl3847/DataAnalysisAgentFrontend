{"ast":null,"code":"import { CSS, PropertySyntax } from '@antv/g';\nimport { isTranspose, isPolar } from '../utils/coordinate';\nimport { getArcObject } from '../shape/utils';\n/**\n * Scale mark from nothing to desired shape in y direction.\n */\nexport const ScaleInY = (options, context) => {\n  // Small enough to hide or show very small part of mark,\n  // but bigger enough to not cause bug.\n  const ZERO = 0.0001;\n  const {\n    coordinate\n  } = context;\n  // the polar coordinate need\n  CSS.registerProperty({\n    name: 'scaleInYRadius',\n    inherits: false,\n    initialValue: '',\n    interpolable: true,\n    syntax: PropertySyntax.NUMBER\n  });\n  return (from, _, defaults) => {\n    const [shape] = from;\n    const PolarScaleInY = shape => {\n      const {\n        __data__,\n        style\n      } = shape;\n      const {\n        fillOpacity = 1,\n        strokeOpacity = 1,\n        opacity = 1\n      } = style;\n      const {\n        points,\n        y,\n        y1\n      } = __data__;\n      const arcObject = getArcObject(coordinate, points, [y, y1]);\n      const {\n        innerRadius,\n        outerRadius\n      } = arcObject;\n      const keyframes = [{\n        scaleInYRadius: innerRadius + ZERO,\n        fillOpacity: 0,\n        strokeOpacity: 0,\n        opacity: 0\n      }, {\n        scaleInYRadius: innerRadius + ZERO,\n        fillOpacity,\n        strokeOpacity,\n        opacity,\n        offset: 0.01\n      }, {\n        scaleInYRadius: outerRadius,\n        fillOpacity,\n        strokeOpacity,\n        opacity\n      }];\n      const animation = shape.animate(keyframes, Object.assign(Object.assign({}, defaults), options));\n      return animation;\n    };\n    const RectangularScaleInY = shape => {\n      const {\n        style\n      } = shape;\n      const {\n        transform: prefix = '',\n        fillOpacity = 1,\n        strokeOpacity = 1,\n        opacity = 1\n      } = style;\n      const [transformOrigin, transform] = isTranspose(coordinate) ? [`left top`, `scale(${ZERO}, 1)`] // left-top corner\n      : [`left bottom`, `scale(1, ${ZERO})`]; // left-bottom corner\n      // Using a short fadeIn transition to hide element with scale(0.001)\n      // which is still visible.\n      const keyframes = [{\n        transform: `${prefix} ${transform}`.trimStart(),\n        transformOrigin,\n        fillOpacity: 0,\n        strokeOpacity: 0,\n        opacity: 0\n      }, {\n        transform: `${prefix} ${transform}`.trimStart(),\n        transformOrigin,\n        fillOpacity,\n        strokeOpacity,\n        opacity,\n        offset: 0.01\n      }, {\n        transform: `${prefix} scale(1, 1)`.trimStart(),\n        transformOrigin,\n        fillOpacity,\n        strokeOpacity,\n        opacity\n      }];\n      const animation = shape.animate(keyframes, Object.assign(Object.assign({}, defaults), options));\n      return animation;\n    };\n    if (isPolar(coordinate)) {\n      return PolarScaleInY(shape);\n    } else {\n      return RectangularScaleInY(shape);\n    }\n  };\n};","map":{"version":3,"names":["CSS","PropertySyntax","isTranspose","isPolar","getArcObject","ScaleInY","options","context","ZERO","coordinate","registerProperty","name","inherits","initialValue","interpolable","syntax","NUMBER","from","_","defaults","shape","PolarScaleInY","__data__","style","fillOpacity","strokeOpacity","opacity","points","y","y1","arcObject","innerRadius","outerRadius","keyframes","scaleInYRadius","offset","animation","animate","Object","assign","RectangularScaleInY","transform","prefix","transformOrigin","trimStart"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/animation/scaleInY.ts"],"sourcesContent":["import { CSS, PropertySyntax, DisplayObject } from '@antv/g';\nimport { G2Element } from 'utils/selection';\nimport { AnimationComponent as AC } from '../runtime';\nimport { isTranspose, isPolar } from '../utils/coordinate';\nimport { getArcObject } from '../shape/utils';\nimport { Animation } from './types';\n\nexport type ScaleInYOptions = Animation;\n\n/**\n * Scale mark from nothing to desired shape in y direction.\n */\nexport const ScaleInY: AC<ScaleInYOptions> = (options, context) => {\n  // Small enough to hide or show very small part of mark,\n  // but bigger enough to not cause bug.\n  const ZERO = 0.0001;\n\n  const { coordinate } = context;\n\n  // the polar coordinate need\n  CSS.registerProperty({\n    name: 'scaleInYRadius',\n    inherits: false,\n    initialValue: '',\n    interpolable: true,\n    syntax: PropertySyntax.NUMBER,\n  });\n\n  return (from, _, defaults) => {\n    const [shape] = from;\n    const PolarScaleInY = (shape: DisplayObject) => {\n      const { __data__, style } = shape as G2Element;\n      const { fillOpacity = 1, strokeOpacity = 1, opacity = 1 } = style;\n      const { points, y, y1 } = __data__;\n      const arcObject = getArcObject(coordinate, points, [y, y1]);\n      const { innerRadius, outerRadius } = arcObject;\n\n      const keyframes = [\n        {\n          scaleInYRadius: innerRadius + ZERO,\n          fillOpacity: 0,\n          strokeOpacity: 0,\n          opacity: 0,\n        },\n        {\n          scaleInYRadius: innerRadius + ZERO,\n          fillOpacity,\n          strokeOpacity,\n          opacity,\n          offset: 0.01,\n        },\n        {\n          scaleInYRadius: outerRadius,\n          fillOpacity,\n          strokeOpacity,\n          opacity,\n        },\n      ];\n\n      const animation = shape.animate(keyframes, { ...defaults, ...options });\n      return animation;\n    };\n\n    const RectangularScaleInY = (shape: DisplayObject) => {\n      const { style } = shape as G2Element;\n      const {\n        transform: prefix = '',\n        fillOpacity = 1,\n        strokeOpacity = 1,\n        opacity = 1,\n      } = style;\n      const [transformOrigin, transform]: [string, string] = isTranspose(\n        coordinate,\n      )\n        ? [`left top`, `scale(${ZERO}, 1)`] // left-top corner\n        : [`left bottom`, `scale(1, ${ZERO})`]; // left-bottom corner\n\n      // Using a short fadeIn transition to hide element with scale(0.001)\n      // which is still visible.\n      const keyframes = [\n        {\n          transform: `${prefix} ${transform}`.trimStart(),\n          transformOrigin,\n          fillOpacity: 0,\n          strokeOpacity: 0,\n          opacity: 0,\n        },\n        {\n          transform: `${prefix} ${transform}`.trimStart(),\n          transformOrigin,\n          fillOpacity,\n          strokeOpacity,\n          opacity,\n          offset: 0.01,\n        },\n        {\n          transform: `${prefix} scale(1, 1)`.trimStart(),\n          transformOrigin,\n          fillOpacity,\n          strokeOpacity,\n          opacity,\n        },\n      ];\n\n      const animation = shape.animate(keyframes, { ...defaults, ...options });\n      return animation;\n    };\n\n    if (isPolar(coordinate)) {\n      return PolarScaleInY(shape);\n    } else {\n      return RectangularScaleInY(shape);\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,cAAc,QAAuB,SAAS;AAG5D,SAASC,WAAW,EAAEC,OAAO,QAAQ,qBAAqB;AAC1D,SAASC,YAAY,QAAQ,gBAAgB;AAK7C;;;AAGA,OAAO,MAAMC,QAAQ,GAAwBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EAChE;EACA;EACA,MAAMC,IAAI,GAAG,MAAM;EAEnB,MAAM;IAAEC;EAAU,CAAE,GAAGF,OAAO;EAE9B;EACAP,GAAG,CAACU,gBAAgB,CAAC;IACnBC,IAAI,EAAE,gBAAgB;IACtBC,QAAQ,EAAE,KAAK;IACfC,YAAY,EAAE,EAAE;IAChBC,YAAY,EAAE,IAAI;IAClBC,MAAM,EAAEd,cAAc,CAACe;GACxB,CAAC;EAEF,OAAO,CAACC,IAAI,EAAEC,CAAC,EAAEC,QAAQ,KAAI;IAC3B,MAAM,CAACC,KAAK,CAAC,GAAGH,IAAI;IACpB,MAAMI,aAAa,GAAID,KAAoB,IAAI;MAC7C,MAAM;QAAEE,QAAQ;QAAEC;MAAK,CAAE,GAAGH,KAAkB;MAC9C,MAAM;QAAEI,WAAW,GAAG,CAAC;QAAEC,aAAa,GAAG,CAAC;QAAEC,OAAO,GAAG;MAAC,CAAE,GAAGH,KAAK;MACjE,MAAM;QAAEI,MAAM;QAAEC,CAAC;QAAEC;MAAE,CAAE,GAAGP,QAAQ;MAClC,MAAMQ,SAAS,GAAG1B,YAAY,CAACK,UAAU,EAAEkB,MAAM,EAAE,CAACC,CAAC,EAAEC,EAAE,CAAC,CAAC;MAC3D,MAAM;QAAEE,WAAW;QAAEC;MAAW,CAAE,GAAGF,SAAS;MAE9C,MAAMG,SAAS,GAAG,CAChB;QACEC,cAAc,EAAEH,WAAW,GAAGvB,IAAI;QAClCgB,WAAW,EAAE,CAAC;QACdC,aAAa,EAAE,CAAC;QAChBC,OAAO,EAAE;OACV,EACD;QACEQ,cAAc,EAAEH,WAAW,GAAGvB,IAAI;QAClCgB,WAAW;QACXC,aAAa;QACbC,OAAO;QACPS,MAAM,EAAE;OACT,EACD;QACED,cAAc,EAAEF,WAAW;QAC3BR,WAAW;QACXC,aAAa;QACbC;OACD,CACF;MAED,MAAMU,SAAS,GAAGhB,KAAK,CAACiB,OAAO,CAACJ,SAAS,EAAAK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOpB,QAAQ,GAAKb,OAAO,EAAG;MACvE,OAAO8B,SAAS;IAClB,CAAC;IAED,MAAMI,mBAAmB,GAAIpB,KAAoB,IAAI;MACnD,MAAM;QAAEG;MAAK,CAAE,GAAGH,KAAkB;MACpC,MAAM;QACJqB,SAAS,EAAEC,MAAM,GAAG,EAAE;QACtBlB,WAAW,GAAG,CAAC;QACfC,aAAa,GAAG,CAAC;QACjBC,OAAO,GAAG;MAAC,CACZ,GAAGH,KAAK;MACT,MAAM,CAACoB,eAAe,EAAEF,SAAS,CAAC,GAAqBvC,WAAW,CAChEO,UAAU,CACX,GACG,CAAC,UAAU,EAAE,SAASD,IAAI,MAAM,CAAC,CAAC;MAAA,EAClC,CAAC,aAAa,EAAE,YAAYA,IAAI,GAAG,CAAC,CAAC,CAAC;MAE1C;MACA;MACA,MAAMyB,SAAS,GAAG,CAChB;QACEQ,SAAS,EAAE,GAAGC,MAAM,IAAID,SAAS,EAAE,CAACG,SAAS,EAAE;QAC/CD,eAAe;QACfnB,WAAW,EAAE,CAAC;QACdC,aAAa,EAAE,CAAC;QAChBC,OAAO,EAAE;OACV,EACD;QACEe,SAAS,EAAE,GAAGC,MAAM,IAAID,SAAS,EAAE,CAACG,SAAS,EAAE;QAC/CD,eAAe;QACfnB,WAAW;QACXC,aAAa;QACbC,OAAO;QACPS,MAAM,EAAE;OACT,EACD;QACEM,SAAS,EAAE,GAAGC,MAAM,cAAc,CAACE,SAAS,EAAE;QAC9CD,eAAe;QACfnB,WAAW;QACXC,aAAa;QACbC;OACD,CACF;MAED,MAAMU,SAAS,GAAGhB,KAAK,CAACiB,OAAO,CAACJ,SAAS,EAAAK,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOpB,QAAQ,GAAKb,OAAO,EAAG;MACvE,OAAO8B,SAAS;IAClB,CAAC;IAED,IAAIjC,OAAO,CAACM,UAAU,CAAC,EAAE;MACvB,OAAOY,aAAa,CAACD,KAAK,CAAC;KAC5B,MAAM;MACL,OAAOoB,mBAAmB,CAACpB,KAAK,CAAC;;EAErC,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}