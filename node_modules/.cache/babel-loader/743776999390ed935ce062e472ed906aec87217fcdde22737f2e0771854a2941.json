{"ast":null,"code":"import { SliderFilter } from './sliderFilter';\nexport const SCROLLBAR_CLASS_NAME = 'g2-scrollbar';\nexport function ScrollbarFilter(options = {}) {\n  return (context, _, emitter) => {\n    const {\n      view,\n      container\n    } = context;\n    const scrollbars = container.getElementsByClassName(SCROLLBAR_CLASS_NAME);\n    if (!scrollbars.length) return () => {};\n    const {\n      scale\n    } = view;\n    const {\n      x: scaleX,\n      y: scaleY\n    } = scale;\n    // The filtered domain, computed by the ratio attribute.\n    const initDomain = {\n      x: [...scaleX.getOptions().domain],\n      y: [...scaleY.getOptions().domain]\n    };\n    const interaction = SliderFilter(Object.assign({\n      initDomain,\n      className: SCROLLBAR_CLASS_NAME,\n      prefix: 'scrollbar',\n      hasState: true,\n      setValue: (component, values) => component.setValue(values[0]),\n      getInitValues: scrollbar => {\n        const values = scrollbar.slider.attributes.values;\n        if (values[0] !== 0) return values;\n      }\n    }, options));\n    return interaction(context, _, emitter);\n  };\n}","map":{"version":3,"names":["SliderFilter","SCROLLBAR_CLASS_NAME","ScrollbarFilter","options","context","_","emitter","view","container","scrollbars","getElementsByClassName","length","scale","x","scaleX","y","scaleY","initDomain","getOptions","domain","interaction","Object","assign","className","prefix","hasState","setValue","component","values","getInitValues","scrollbar","slider","attributes"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/interaction/scrollbarFilter.ts"],"sourcesContent":["import { SliderFilter } from './sliderFilter';\n\nexport const SCROLLBAR_CLASS_NAME = 'g2-scrollbar';\n\nexport function ScrollbarFilter(options: any = {}) {\n  return (context, _, emitter) => {\n    const { view, container } = context;\n    const scrollbars = container.getElementsByClassName(SCROLLBAR_CLASS_NAME);\n    if (!scrollbars.length) return () => {};\n    const { scale } = view;\n    const { x: scaleX, y: scaleY } = scale;\n\n    // The filtered domain, computed by the ratio attribute.\n    const initDomain = {\n      x: [...scaleX.getOptions().domain],\n      y: [...scaleY.getOptions().domain],\n    };\n\n    const interaction = SliderFilter({\n      initDomain,\n      className: SCROLLBAR_CLASS_NAME,\n      prefix: 'scrollbar',\n      hasState: true,\n      setValue: (component, values) => component.setValue(values[0]),\n      getInitValues: (scrollbar) => {\n        const values = scrollbar.slider.attributes.values;\n        if (values[0] !== 0) return values;\n      },\n      ...options,\n    });\n    return interaction(context, _, emitter);\n  };\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,gBAAgB;AAE7C,OAAO,MAAMC,oBAAoB,GAAG,cAAc;AAElD,OAAM,SAAUC,eAAeA,CAACC,OAAA,GAAe,EAAE;EAC/C,OAAO,CAACC,OAAO,EAAEC,CAAC,EAAEC,OAAO,KAAI;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAS,CAAE,GAAGJ,OAAO;IACnC,MAAMK,UAAU,GAAGD,SAAS,CAACE,sBAAsB,CAACT,oBAAoB,CAAC;IACzE,IAAI,CAACQ,UAAU,CAACE,MAAM,EAAE,OAAO,MAAK,CAAE,CAAC;IACvC,MAAM;MAAEC;IAAK,CAAE,GAAGL,IAAI;IACtB,MAAM;MAAEM,CAAC,EAAEC,MAAM;MAAEC,CAAC,EAAEC;IAAM,CAAE,GAAGJ,KAAK;IAEtC;IACA,MAAMK,UAAU,GAAG;MACjBJ,CAAC,EAAE,CAAC,GAAGC,MAAM,CAACI,UAAU,EAAE,CAACC,MAAM,CAAC;MAClCJ,CAAC,EAAE,CAAC,GAAGC,MAAM,CAACE,UAAU,EAAE,CAACC,MAAM;KAClC;IAED,MAAMC,WAAW,GAAGpB,YAAY,CAAAqB,MAAA,CAAAC,MAAA;MAC9BL,UAAU;MACVM,SAAS,EAAEtB,oBAAoB;MAC/BuB,MAAM,EAAE,WAAW;MACnBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAEA,CAACC,SAAS,EAAEC,MAAM,KAAKD,SAAS,CAACD,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;MAC9DC,aAAa,EAAGC,SAAS,IAAI;QAC3B,MAAMF,MAAM,GAAGE,SAAS,CAACC,MAAM,CAACC,UAAU,CAACJ,MAAM;QACjD,IAAIA,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,OAAOA,MAAM;MACpC;IAAC,GACEzB,OAAO,EACV;IACF,OAAOiB,WAAW,CAAChB,OAAO,EAAEC,CAAC,EAAEC,OAAO,CAAC;EACzC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}