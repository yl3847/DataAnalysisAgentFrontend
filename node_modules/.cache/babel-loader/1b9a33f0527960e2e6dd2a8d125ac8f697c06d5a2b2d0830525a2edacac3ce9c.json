{"ast":null,"code":"// need some basic operations on vectors, rather than adding a dependency,\n// just define here\nexport function zeros(x) {\n  const r = new Array(x);\n  for (let i = 0; i < x; ++i) {\n    r[i] = 0;\n  }\n  return r;\n}\nexport function zerosM(x, y) {\n  return zeros(x).map(() => zeros(y));\n}\nexport function dot(a, b) {\n  let ret = 0;\n  for (let i = 0; i < a.length; ++i) {\n    ret += a[i] * b[i];\n  }\n  return ret;\n}\nexport function norm2(a) {\n  return Math.sqrt(dot(a, a));\n}\nexport function scale(ret, value, c) {\n  for (let i = 0; i < value.length; ++i) {\n    ret[i] = value[i] * c;\n  }\n}\nexport function weightedSum(ret, w1, v1, w2, v2) {\n  for (let j = 0; j < ret.length; ++j) {\n    ret[j] = w1 * v1[j] + w2 * v2[j];\n  }\n}\nexport function gemv(output, A, x) {\n  for (let i = 0; i < output.length; ++i) {\n    output[i] = dot(A[i], x);\n  }\n}","map":{"version":3,"names":["zeros","x","r","Array","i","zerosM","y","map","dot","a","b","ret","length","norm2","Math","sqrt","scale","value","c","weightedSum","w1","v1","w2","v2","j","gemv","output","A"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/utils/venn/fmin/blas1.ts"],"sourcesContent":["// need some basic operations on vectors, rather than adding a dependency,\n// just define here\nexport function zeros(x) {\n  const r = new Array(x);\n  for (let i = 0; i < x; ++i) {\n    r[i] = 0;\n  }\n  return r;\n}\nexport function zerosM(x, y) {\n  return zeros(x).map(() => zeros(y));\n}\n\nexport function dot(a, b) {\n  let ret = 0;\n  for (let i = 0; i < a.length; ++i) {\n    ret += a[i] * b[i];\n  }\n  return ret;\n}\n\nexport function norm2(a) {\n  return Math.sqrt(dot(a, a));\n}\n\nexport function scale(ret, value, c?: any) {\n  for (let i = 0; i < value.length; ++i) {\n    ret[i] = value[i] * c;\n  }\n}\n\nexport function weightedSum(ret, w1, v1, w2, v2) {\n  for (let j = 0; j < ret.length; ++j) {\n    ret[j] = w1 * v1[j] + w2 * v2[j];\n  }\n}\n\nexport function gemv(output, A, x) {\n  for (let i = 0; i < output.length; ++i) {\n    output[i] = dot(A[i], x);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAM,SAAUA,KAAKA,CAACC,CAAC;EACrB,MAAMC,CAAC,GAAG,IAAIC,KAAK,CAACF,CAAC,CAAC;EACtB,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,EAAE,EAAEG,CAAC,EAAE;IAC1BF,CAAC,CAACE,CAAC,CAAC,GAAG,CAAC;;EAEV,OAAOF,CAAC;AACV;AACA,OAAM,SAAUG,MAAMA,CAACJ,CAAC,EAAEK,CAAC;EACzB,OAAON,KAAK,CAACC,CAAC,CAAC,CAACM,GAAG,CAAC,MAAMP,KAAK,CAACM,CAAC,CAAC,CAAC;AACrC;AAEA,OAAM,SAAUE,GAAGA,CAACC,CAAC,EAAEC,CAAC;EACtB,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,CAAC,CAACG,MAAM,EAAE,EAAER,CAAC,EAAE;IACjCO,GAAG,IAAIF,CAAC,CAACL,CAAC,CAAC,GAAGM,CAAC,CAACN,CAAC,CAAC;;EAEpB,OAAOO,GAAG;AACZ;AAEA,OAAM,SAAUE,KAAKA,CAACJ,CAAC;EACrB,OAAOK,IAAI,CAACC,IAAI,CAACP,GAAG,CAACC,CAAC,EAAEA,CAAC,CAAC,CAAC;AAC7B;AAEA,OAAM,SAAUO,KAAKA,CAACL,GAAG,EAAEM,KAAK,EAAEC,CAAO;EACvC,KAAK,IAAId,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,KAAK,CAACL,MAAM,EAAE,EAAER,CAAC,EAAE;IACrCO,GAAG,CAACP,CAAC,CAAC,GAAGa,KAAK,CAACb,CAAC,CAAC,GAAGc,CAAC;;AAEzB;AAEA,OAAM,SAAUC,WAAWA,CAACR,GAAG,EAAES,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,GAAG,CAACC,MAAM,EAAE,EAAEY,CAAC,EAAE;IACnCb,GAAG,CAACa,CAAC,CAAC,GAAGJ,EAAE,GAAGC,EAAE,CAACG,CAAC,CAAC,GAAGF,EAAE,GAAGC,EAAE,CAACC,CAAC,CAAC;;AAEpC;AAEA,OAAM,SAAUC,IAAIA,CAACC,MAAM,EAAEC,CAAC,EAAE1B,CAAC;EAC/B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGsB,MAAM,CAACd,MAAM,EAAE,EAAER,CAAC,EAAE;IACtCsB,MAAM,CAACtB,CAAC,CAAC,GAAGI,GAAG,CAACmB,CAAC,CAACvB,CAAC,CAAC,EAAEH,CAAC,CAAC;;AAE5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}