{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { HTML } from '@antv/g';\nimport { kebabCase } from '../utils/string';\nimport { subObject } from '../utils/helper';\nfunction dom(tag, children, style) {\n  return `<${tag} style=\"${Object.entries(style).map(([key, value]) => `${kebabCase(key)}:${value}`).join(';')}\">${children}</${tag}>`;\n}\nconst defaultTipStyle = {\n  backgroundColor: 'rgba(0,0,0,0.75)',\n  color: '#fff',\n  width: 'max-content',\n  padding: '1px 4px',\n  fontSize: '12px',\n  borderRadius: '2.5px',\n  boxShadow: '0 3px 6px -4px rgba(0,0,0,0.12), 0 6px 16px 0 rgba(0,0,0,0.08), 0 9px 28px 8px rgba(0,0,0,0.05)'\n};\nfunction isTipText(element) {\n  if (element.nodeName !== 'text') return false;\n  if (element.isOverflowing()) return true;\n  return false;\n}\nexport function Poptip(_a) {\n  var {\n      offsetX = 8,\n      offsetY = 8\n    } = _a,\n    style = __rest(_a, [\"offsetX\", \"offsetY\"]);\n  return context => {\n    const {\n      container\n    } = context;\n    const [x0, y0] = container.getBounds().min;\n    const tipStyle = subObject(style, 'tip');\n    const tips = new Set();\n    const pointerover = e => {\n      const {\n        target\n      } = e;\n      if (!isTipText(target)) {\n        e.stopPropagation();\n        return;\n      }\n      const {\n        offsetX: mouseX,\n        offsetY: mouseY\n      } = e;\n      const x = mouseX + offsetX - x0;\n      const y = mouseY + offsetY - y0;\n      if (target.tip) {\n        target.tip.style.x = x;\n        target.tip.style.y = y;\n        return;\n      }\n      const {\n        text\n      } = target.style;\n      const tipELement = new HTML({\n        className: 'poptip',\n        style: {\n          innerHTML: dom('div', text, Object.assign(Object.assign({}, defaultTipStyle), tipStyle)),\n          x,\n          y\n        }\n      });\n      container.appendChild(tipELement);\n      target.tip = tipELement;\n      tips.add(tipELement);\n    };\n    const pointerout = e => {\n      const {\n        target\n      } = e;\n      if (!isTipText(target)) {\n        e.stopPropagation();\n        return;\n      }\n      if (!target.tip) return;\n      target.tip.remove();\n      target.tip = null;\n      tips.delete(target.tip);\n    };\n    container.addEventListener('pointerover', pointerover);\n    container.addEventListener('pointerout', pointerout);\n    return () => {\n      container.removeEventListener('pointerover', pointerover);\n      container.removeEventListener('pointerout', pointerout);\n      tips.forEach(tip => tip.remove());\n    };\n  };\n}\nPoptip.props = {\n  reapplyWhenUpdate: true\n};","map":{"version":3,"names":["HTML","kebabCase","subObject","dom","tag","children","style","Object","entries","map","key","value","join","defaultTipStyle","backgroundColor","color","width","padding","fontSize","borderRadius","boxShadow","isTipText","element","nodeName","isOverflowing","Poptip","_a","offsetX","offsetY","__rest","context","container","x0","y0","getBounds","min","tipStyle","tips","Set","pointerover","e","target","stopPropagation","mouseX","mouseY","x","y","tip","text","tipELement","className","innerHTML","assign","appendChild","add","pointerout","remove","delete","addEventListener","removeEventListener","forEach","props","reapplyWhenUpdate"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/interaction/poptip.ts"],"sourcesContent":["import { DisplayObject, HTML } from '@antv/g';\nimport { kebabCase } from '../utils/string';\nimport { subObject } from '../utils/helper';\n\nfunction dom(tag, children, style) {\n  return `<${tag} style=\"${Object.entries(style)\n    .map(([key, value]) => `${kebabCase(key)}:${value}`)\n    .join(';')}\">${children}</${tag}>`;\n}\n\nconst defaultTipStyle = {\n  backgroundColor: 'rgba(0,0,0,0.75)',\n  color: '#fff',\n  width: 'max-content',\n  padding: '1px 4px',\n  fontSize: '12px',\n  borderRadius: '2.5px',\n  boxShadow:\n    '0 3px 6px -4px rgba(0,0,0,0.12), 0 6px 16px 0 rgba(0,0,0,0.08), 0 9px 28px 8px rgba(0,0,0,0.05)',\n};\n\nfunction isTipText(element) {\n  if (element.nodeName !== 'text') return false;\n  if (element.isOverflowing()) return true;\n  return false;\n}\n\nexport function Poptip({ offsetX = 8, offsetY = 8, ...style }) {\n  return (context) => {\n    const { container } = context;\n    const [x0, y0] = container.getBounds().min;\n    const tipStyle = subObject(style, 'tip');\n    const tips = new Set();\n\n    const pointerover = (e) => {\n      const { target } = e;\n      if (!isTipText(target)) {\n        e.stopPropagation();\n        return;\n      }\n      const { offsetX: mouseX, offsetY: mouseY } = e;\n      const x = mouseX + offsetX - x0;\n      const y = mouseY + offsetY - y0;\n      if (target.tip) {\n        target.tip.style.x = x;\n        target.tip.style.y = y;\n        return;\n      }\n      const { text } = target.style;\n      const tipELement = new HTML({\n        className: 'poptip',\n        style: {\n          innerHTML: dom('div', text, {\n            ...defaultTipStyle,\n            ...tipStyle,\n          }),\n          x,\n          y,\n        },\n      });\n      container.appendChild(tipELement);\n      target.tip = tipELement;\n      tips.add(tipELement);\n    };\n\n    const pointerout = (e) => {\n      const { target } = e;\n      if (!isTipText(target)) {\n        e.stopPropagation();\n        return;\n      }\n      if (!target.tip) return;\n      target.tip.remove();\n      target.tip = null;\n      tips.delete(target.tip);\n    };\n\n    container.addEventListener('pointerover', pointerover);\n    container.addEventListener('pointerout', pointerout);\n\n    return () => {\n      container.removeEventListener('pointerover', pointerover);\n      container.removeEventListener('pointerout', pointerout);\n      tips.forEach((tip) => (tip as DisplayObject).remove());\n    };\n  };\n}\n\nPoptip.props = {\n  reapplyWhenUpdate: true,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}