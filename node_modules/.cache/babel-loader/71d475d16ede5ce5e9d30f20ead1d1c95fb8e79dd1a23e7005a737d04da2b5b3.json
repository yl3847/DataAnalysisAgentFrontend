{"ast":null,"code":"import { Polygon as GPolygon } from '@antv/g';\nimport { getPolygonIntersectPoint } from '../../utils/point';\nimport { BaseNode } from '../nodes/base-node';\n/**\n * Abstract class for polygon nodes,i.e triangle, diamond, hexagon, etc.\n */\nexport class Polygon extends BaseNode {\n  constructor(options) {\n    super(options);\n  }\n  get parsedAttributes() {\n    return this.attributes;\n  }\n  drawKeyShape(attributes, container) {\n    return this.upsert('key', GPolygon, this.getKeyStyle(attributes), container);\n  }\n  getKeyStyle(attributes) {\n    const keyStyle = super.getKeyStyle(attributes);\n    return Object.assign(Object.assign({}, keyStyle), {\n      points: this.getPoints(attributes)\n    });\n  }\n  getIntersectPoint(point, useExtendedLine = false) {\n    var _a, _b;\n    const {\n      points\n    } = this.getShape('key').attributes;\n    const center = [+(((_a = this.attributes) === null || _a === void 0 ? void 0 : _a.x) || 0), +(((_b = this.attributes) === null || _b === void 0 ? void 0 : _b.y) || 0)];\n    return getPolygonIntersectPoint(point, center, points, true, useExtendedLine).point;\n  }\n}","map":{"version":3,"names":["Polygon","GPolygon","getPolygonIntersectPoint","BaseNode","constructor","options","parsedAttributes","attributes","drawKeyShape","container","upsert","getKeyStyle","keyStyle","Object","assign","points","getPoints","getIntersectPoint","point","useExtendedLine","getShape","center","_a","x","_b","y"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/shapes/polygon.ts"],"sourcesContent":["import type { DisplayObjectConfig, PolygonStyleProps as GPolygonStyleProps, Group } from '@antv/g';\nimport { Polygon as GPolygon } from '@antv/g';\nimport type { Point } from '../../types';\nimport { getPolygonIntersectPoint } from '../../utils/point';\nimport type { BaseNodeStyleProps } from '../nodes/base-node';\nimport { BaseNode } from '../nodes/base-node';\n\n/**\n * <zh/> 多边形节点样式配置项\n *\n * <en/> Polygon node style props\n */\nexport interface PolygonStyleProps extends BaseNodeStyleProps {\n  /**\n   * <zh/> 多边形的顶点坐标\n   *\n   * <en/> The vertex coordinates of the polygon\n   * @internal\n   */\n  points?: ([number, number] | [number, number, number])[];\n}\n\n/**\n * Abstract class for polygon nodes,i.e triangle, diamond, hexagon, etc.\n */\nexport abstract class Polygon<T extends PolygonStyleProps = PolygonStyleProps> extends BaseNode<T> {\n  constructor(options: DisplayObjectConfig<T>) {\n    super(options);\n  }\n\n  public get parsedAttributes() {\n    return this.attributes as unknown as Required<T>;\n  }\n\n  protected drawKeyShape(attributes: Required<T>, container: Group) {\n    return this.upsert('key', GPolygon, this.getKeyStyle(attributes), container);\n  }\n\n  protected getKeyStyle(attributes: Required<T>): GPolygonStyleProps {\n    const keyStyle = super.getKeyStyle(attributes);\n    return { ...keyStyle, points: this.getPoints(attributes) };\n  }\n\n  protected abstract getPoints(attributes: Required<T>): Point[];\n\n  public getIntersectPoint(point: Point, useExtendedLine = false): Point {\n    const { points } = this.getShape<GPolygon>('key').attributes;\n    const center: Point = [+(this.attributes?.x || 0), +(this.attributes?.y || 0)];\n    return getPolygonIntersectPoint(point, center, points!, true, useExtendedLine).point;\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,SAAS;AAE7C,SAASC,wBAAwB,QAAQ,mBAAmB;AAE5D,SAASC,QAAQ,QAAQ,oBAAoB;AAiB7C;;;AAGA,OAAM,MAAgBH,OAAyD,SAAQG,QAAW;EAChGC,YAAYC,OAA+B;IACzC,KAAK,CAACA,OAAO,CAAC;EAChB;EAEA,IAAWC,gBAAgBA,CAAA;IACzB,OAAO,IAAI,CAACC,UAAoC;EAClD;EAEUC,YAAYA,CAACD,UAAuB,EAAEE,SAAgB;IAC9D,OAAO,IAAI,CAACC,MAAM,CAAC,KAAK,EAAET,QAAQ,EAAE,IAAI,CAACU,WAAW,CAACJ,UAAU,CAAC,EAAEE,SAAS,CAAC;EAC9E;EAEUE,WAAWA,CAACJ,UAAuB;IAC3C,MAAMK,QAAQ,GAAG,KAAK,CAACD,WAAW,CAACJ,UAAU,CAAC;IAC9C,OAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYF,QAAQ;MAAEG,MAAM,EAAE,IAAI,CAACC,SAAS,CAACT,UAAU;IAAC;EAC1D;EAIOU,iBAAiBA,CAACC,KAAY,EAAEC,eAAe,GAAG,KAAK;;IAC5D,MAAM;MAAEJ;IAAM,CAAE,GAAG,IAAI,CAACK,QAAQ,CAAW,KAAK,CAAC,CAACb,UAAU;IAC5D,MAAMc,MAAM,GAAU,CAAC,EAAE,EAAAC,EAAA,OAAI,CAACf,UAAU,cAAAe,EAAA,uBAAAA,EAAA,CAAEC,CAAC,KAAI,CAAC,CAAC,EAAE,EAAE,EAAAC,EAAA,OAAI,CAACjB,UAAU,cAAAiB,EAAA,uBAAAA,EAAA,CAAEC,CAAC,KAAI,CAAC,CAAC,CAAC;IAC9E,OAAOvB,wBAAwB,CAACgB,KAAK,EAAEG,MAAM,EAAEN,MAAO,EAAE,IAAI,EAAEI,eAAe,CAAC,CAACD,KAAK;EACtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}