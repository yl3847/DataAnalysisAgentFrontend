{"ast":null,"code":"import { __assign, __read, __values } from \"tslib\";\nimport { select } from './selection';\n/**\n * 获得图形的x、y、width、height\n */\nexport function getShapeSpace(shape) {\n  var bounds = shape && shape.getRenderBounds();\n  if (!bounds) return {\n    width: 0,\n    height: 0\n  };\n  var max = bounds.getMax();\n  var min = bounds.getMin();\n  return {\n    width: max[0] - min[0],\n    height: max[1] - min[1]\n  };\n}\nexport function getLocalBBox(shape) {\n  var _a = shape.getLocalBounds(),\n    min = _a.min,\n    max = _a.max;\n  var _b = __read([min, max], 2),\n    _c = __read(_b[0], 2),\n    x1 = _c[0],\n    y1 = _c[1],\n    _d = __read(_b[1], 2),\n    x2 = _d[0],\n    y2 = _d[1];\n  return {\n    x: x1,\n    y: y1,\n    width: x2 - x1,\n    height: y2 - y1,\n    left: x1,\n    bottom: y2,\n    top: y1,\n    right: x2\n  };\n}\nexport function createTempText(group, attrs) {\n  var textNode = select(group).append('text').node();\n  textNode.attr(__assign(__assign({}, attrs), {\n    visibility: 'hidden'\n  }));\n  return textNode;\n}\nexport function isHorizontal(p1, p2) {\n  var _a = __read(p1, 2),\n    x1 = _a[0],\n    y1 = _a[1];\n  var _b = __read(p2, 2),\n    x2 = _b[0],\n    y2 = _b[1];\n  return x1 !== x2 && y1 === y2;\n}\nexport function isVertical(p1, p2) {\n  var _a = __read(p1, 2),\n    x1 = _a[0],\n    y1 = _a[1];\n  var _b = __read(p2, 2),\n    x2 = _b[0],\n    y2 = _b[1];\n  return x1 === x2 && y1 !== y2;\n}\nexport function copyAttributes(target, source) {\n  var e_1, _a;\n  var attributes = source.attributes;\n  try {\n    for (var _b = __values(Object.entries(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n        key = _d[0],\n        value = _d[1];\n      if (key !== 'id' && key !== 'className') target.attr(key, value);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n}","map":{"version":3,"names":["select","getShapeSpace","shape","bounds","getRenderBounds","width","height","max","getMax","min","getMin","getLocalBBox","_a","getLocalBounds","_b","__read","_c","x1","y1","_d","x2","y2","x","y","left","bottom","top","right","createTempText","group","attrs","textNode","append","node","attr","__assign","visibility","isHorizontal","p1","p2","isVertical","copyAttributes","target","source","attributes","__values","Object","entries","next","done","value","key"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/util/shape.ts"],"sourcesContent":["import type { DisplayObject, Text, TextStyleProps } from '../shapes';\nimport { Point } from '../types';\nimport { select } from './selection';\n\n/**\n * 获得图形的x、y、width、height\n */\nexport function getShapeSpace(shape: DisplayObject) {\n  const bounds = shape && shape.getRenderBounds();\n  if (!bounds)\n    return {\n      width: 0,\n      height: 0,\n    };\n  const max = bounds.getMax();\n  const min = bounds.getMin();\n  return {\n    width: max[0] - min[0],\n    height: max[1] - min[1],\n  };\n}\n\nexport function getLocalBBox(shape: DisplayObject) {\n  const { min, max } = shape.getLocalBounds();\n  const [[x1, y1], [x2, y2]] = [min, max];\n  return { x: x1, y: y1, width: x2 - x1, height: y2 - y1, left: x1, bottom: y2, top: y1, right: x2 };\n}\n\nexport function createTempText(group: DisplayObject, attrs: TextStyleProps): Text {\n  const textNode = select(group).append('text').node() as Text;\n  textNode.attr({ ...attrs, visibility: 'hidden' });\n\n  return textNode;\n}\n\nexport function isHorizontal(p1: Point, p2: Point): boolean {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n  return x1 !== x2 && y1 === y2;\n}\n\nexport function isVertical(p1: Point, p2: Point): boolean {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n  return x1 === x2 && y1 !== y2;\n}\n\nexport function copyAttributes(target: DisplayObject, source: DisplayObject) {\n  const { attributes } = source;\n  for (const [key, value] of Object.entries(attributes)) {\n    if (key !== 'id' && key !== 'className') target.attr(key, value);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}