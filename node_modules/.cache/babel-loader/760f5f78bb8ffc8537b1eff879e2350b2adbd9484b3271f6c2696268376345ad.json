{"ast":null,"code":"import { ExtensionCategory } from '../constants';\nimport { getExtension } from '../registry/get';\nimport { print } from './print';\n/**\n * <zh/> 获取主题配置\n *\n * <en/> Get theme options\n * @param options - <zh/> 图配置项 <en/> graph options\n * @returns <zh/> 主题配置 <en/> theme options\n */\nexport function themeOf(options) {\n  const {\n    theme\n  } = options;\n  if (!theme) return {};\n  const themeOptions = getExtension(ExtensionCategory.THEME, theme);\n  if (themeOptions) return themeOptions;\n  print.warn(`The theme of ${theme} is not registered.`);\n  return {};\n}","map":{"version":3,"names":["ExtensionCategory","getExtension","print","themeOf","options","theme","themeOptions","THEME","warn"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/theme.ts"],"sourcesContent":["import { ExtensionCategory } from '../constants';\nimport { getExtension } from '../registry/get';\nimport type { GraphOptions } from '../spec';\nimport { print } from './print';\n\n/**\n * <zh/> 获取主题配置\n *\n * <en/> Get theme options\n * @param options - <zh/> 图配置项 <en/> graph options\n * @returns <zh/> 主题配置 <en/> theme options\n */\nexport function themeOf(options: GraphOptions) {\n  const { theme } = options;\n  if (!theme) return {};\n\n  const themeOptions = getExtension(ExtensionCategory.THEME, theme);\n\n  if (themeOptions) return themeOptions;\n\n  print.warn(`The theme of ${theme} is not registered.`);\n  return {};\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,cAAc;AAChD,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,SAASC,KAAK,QAAQ,SAAS;AAE/B;;;;;;;AAOA,OAAM,SAAUC,OAAOA,CAACC,OAAqB;EAC3C,MAAM;IAAEC;EAAK,CAAE,GAAGD,OAAO;EACzB,IAAI,CAACC,KAAK,EAAE,OAAO,EAAE;EAErB,MAAMC,YAAY,GAAGL,YAAY,CAACD,iBAAiB,CAACO,KAAK,EAAEF,KAAK,CAAC;EAEjE,IAAIC,YAAY,EAAE,OAAOA,YAAY;EAErCJ,KAAK,CAACM,IAAI,CAAC,gBAAgBH,KAAK,qBAAqB,CAAC;EACtD,OAAO,EAAE;AACX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}