{"ast":null,"code":"import { Polar } from './polar';\nimport { Parallel } from './parallel';\n/**\n *  Radar = Parallel + Polar.\n */\nexport const Radar = options => {\n  const {\n    startAngle = -Math.PI / 2,\n    endAngle = Math.PI * 3 / 2,\n    innerRadius = 0,\n    outerRadius = 1\n  } = options;\n  return [...Parallel(), ...Polar({\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius\n  })];\n};\nRadar.props = {};","map":{"version":3,"names":["Polar","Parallel","Radar","options","startAngle","Math","PI","endAngle","innerRadius","outerRadius","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/coordinate/radar.ts"],"sourcesContent":["import { CoordinateComponent as CC } from '../runtime';\nimport { RadarCoordinate } from '../spec';\nimport { Polar } from './polar';\nimport { Parallel } from './parallel';\n\nexport type RadarOptions = RadarCoordinate;\n\n/**\n *  Radar = Parallel + Polar.\n */\nexport const Radar: CC<RadarOptions> = (options) => {\n  const {\n    startAngle = -Math.PI / 2,\n    endAngle = (Math.PI * 3) / 2,\n    innerRadius = 0,\n    outerRadius = 1,\n  } = options;\n  return [\n    ...Parallel(),\n    ...Polar({ startAngle, endAngle, innerRadius, outerRadius }),\n  ];\n};\n\nRadar.props = {};\n"],"mappings":"AAEA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,QAAQ,QAAQ,YAAY;AAIrC;;;AAGA,OAAO,MAAMC,KAAK,GAAsBC,OAAO,IAAI;EACjD,MAAM;IACJC,UAAU,GAAG,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC;IACzBC,QAAQ,GAAIF,IAAI,CAACC,EAAE,GAAG,CAAC,GAAI,CAAC;IAC5BE,WAAW,GAAG,CAAC;IACfC,WAAW,GAAG;EAAC,CAChB,GAAGN,OAAO;EACX,OAAO,CACL,GAAGF,QAAQ,EAAE,EACb,GAAGD,KAAK,CAAC;IAAEI,UAAU;IAAEG,QAAQ;IAAEC,WAAW;IAAEC;EAAW,CAAE,CAAC,CAC7D;AACH,CAAC;AAEDP,KAAK,CAACQ,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}