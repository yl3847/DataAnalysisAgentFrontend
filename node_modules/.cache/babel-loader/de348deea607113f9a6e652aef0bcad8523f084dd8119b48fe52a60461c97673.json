{"ast":null,"code":"import { memoize } from 'lodash';\nimport { measureTextSize } from './measure-text';\nexport const getLinearTextNodeStyle = memoize((text, minWidth, maxWidth, depth = 0) => {\n  const font = {\n    fontWeight: depth === 0 ? 600 : 400,\n    fontSize: depth === 0 ? 24 : 16\n  };\n  const offset = depth === 0 ? [64, 30] : [12, 12];\n  const size = measureTextSize(text, offset, font, minWidth, maxWidth);\n  return {\n    font,\n    size\n  };\n});\nexport const getBoxedTextNodeStyle = memoize((text, minWidth, maxWidth, depth = 0) => {\n  const font = {\n    fontWeight: depth === 0 || depth === 1 ? 600 : 400,\n    fontSize: depth === 0 ? 24 : 16\n  };\n  const offset = depth === 0 ? [64, 30] : [36, 24];\n  const size = measureTextSize(text, offset, font, minWidth, maxWidth);\n  return {\n    font,\n    size\n  };\n});","map":{"version":3,"names":["memoize","measureTextSize","getLinearTextNodeStyle","text","minWidth","maxWidth","depth","font","fontWeight","fontSize","offset","size","getBoxedTextNodeStyle"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/core/utils/tree.js"],"sourcesContent":["import { memoize } from 'lodash';\nimport { measureTextSize } from './measure-text';\nexport const getLinearTextNodeStyle = memoize((text, minWidth, maxWidth, depth = 0) => {\n    const font = {\n        fontWeight: depth === 0 ? 600 : 400,\n        fontSize: depth === 0 ? 24 : 16,\n    };\n    const offset = depth === 0 ? [64, 30] : [12, 12];\n    const size = measureTextSize(text, offset, font, minWidth, maxWidth);\n    return { font, size };\n});\nexport const getBoxedTextNodeStyle = memoize((text, minWidth, maxWidth, depth = 0) => {\n    const font = {\n        fontWeight: depth === 0 || depth === 1 ? 600 : 400,\n        fontSize: depth === 0 ? 24 : 16,\n    };\n    const offset = depth === 0 ? [64, 30] : [36, 24];\n    const size = measureTextSize(text, offset, font, minWidth, maxWidth);\n    return { font, size };\n});\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,eAAe,QAAQ,gBAAgB;AAChD,OAAO,MAAMC,sBAAsB,GAAGF,OAAO,CAAC,CAACG,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,GAAG,CAAC,KAAK;EACnF,MAAMC,IAAI,GAAG;IACTC,UAAU,EAAEF,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;IACnCG,QAAQ,EAAEH,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG;EACjC,CAAC;EACD,MAAMI,MAAM,GAAGJ,KAAK,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;EAChD,MAAMK,IAAI,GAAGV,eAAe,CAACE,IAAI,EAAEO,MAAM,EAAEH,IAAI,EAAEH,QAAQ,EAAEC,QAAQ,CAAC;EACpE,OAAO;IAAEE,IAAI;IAAEI;EAAK,CAAC;AACzB,CAAC,CAAC;AACF,OAAO,MAAMC,qBAAqB,GAAGZ,OAAO,CAAC,CAACG,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,GAAG,CAAC,KAAK;EAClF,MAAMC,IAAI,GAAG;IACTC,UAAU,EAAEF,KAAK,KAAK,CAAC,IAAIA,KAAK,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG;IAClDG,QAAQ,EAAEH,KAAK,KAAK,CAAC,GAAG,EAAE,GAAG;EACjC,CAAC;EACD,MAAMI,MAAM,GAAGJ,KAAK,KAAK,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;EAChD,MAAMK,IAAI,GAAGV,eAAe,CAACE,IAAI,EAAEO,MAAM,EAAEH,IAAI,EAAEH,QAAQ,EAAEC,QAAQ,CAAC;EACpE,OAAO;IAAEE,IAAI;IAAEI;EAAK,CAAC;AACzB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}