{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { subTooltip, maybeAnimation } from '../utils/mark';\nimport { Arc } from '../data/arc';\nimport { field, initializeData } from './utils';\nconst DEFAULT_LAYOUT_OPTIONS = {\n  y: 0,\n  thickness: 0.05,\n  marginRatio: 0.1,\n  id: node => node.key,\n  source: edge => edge.source,\n  target: edge => edge.target,\n  sourceWeight: edge => edge.value || 1,\n  targetWeight: edge => edge.value || 1,\n  sortBy: null // optional, id | weight | frequency | {function}\n};\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'polygon',\n    x: 'x',\n    y: 'y'\n  },\n  scale: {\n    x: {\n      type: 'identity'\n    },\n    y: {\n      type: 'identity'\n    }\n  },\n  style: {\n    opacity: 1,\n    fillOpacity: 1,\n    lineWidth: 1\n  }\n};\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'ribbon',\n    x: 'x',\n    y: 'y'\n  },\n  style: {\n    opacity: 0.5,\n    lineWidth: 1\n  }\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  position: 'outside',\n  fontSize: 10\n};\nexport const Chord = (options, context) => {\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {}\n  } = options;\n  // Initialize data, generating nodes by link if is not specified.\n  const {\n    nodes,\n    links\n  } = initializeData(data, encode);\n  // Extract encode for node and link.\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const {\n    key: nodeKey = d => d.key,\n    color = nodeKey\n  } = nodeEncode;\n  const {\n    linkEncodeColor = d => d.source\n  } = linkEncode;\n  const {\n      nodeWidthRatio = DEFAULT_LAYOUT_OPTIONS.thickness,\n      nodePaddingRatio = DEFAULT_LAYOUT_OPTIONS.marginRatio\n    } = layout,\n    restLayout = __rest(layout, [\"nodeWidthRatio\", \"nodePaddingRatio\"]);\n  const {\n    nodes: nodeData,\n    edges: linkData\n  } = Arc(Object.assign(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), {\n    id: field(nodeKey),\n    thickness: nodeWidthRatio,\n    marginRatio: nodePaddingRatio\n  }), restLayout), {\n    weight: true\n  }))({\n    nodes,\n    edges: links\n  });\n  // Extract label style and apply defaults.\n  const _a = subObject(style, 'label'),\n    {\n      text = nodeKey\n    } = _a,\n    labelStyle = __rest(_a, [\"text\"]);\n  const nodeTooltip = subTooltip(tooltip, 'node', {\n    title: '',\n    items: [d => ({\n      name: d.key,\n      value: d.value\n    })]\n  }, true);\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [d => ({\n      name: `${d.source} -> ${d.target}`,\n      value: d.value\n    })]\n  });\n  const {\n    height,\n    width\n  } = context;\n  const minimumLen = Math.min(height, width);\n  return [deepMix({}, DEFAULT_LINK_OPTIONS, {\n    data: linkData,\n    encode: Object.assign(Object.assign({}, linkEncode), {\n      color: linkEncodeColor\n    }),\n    labels: linkLabels,\n    style: Object.assign({\n      fill: linkEncodeColor ? undefined : '#aaa'\n    }, subObject(style, 'link')),\n    tooltip: linkTooltip,\n    animate: maybeAnimation(animate, 'link')\n  }), deepMix({}, DEFAULT_NODE_OPTIONS, {\n    data: nodeData,\n    encode: Object.assign(Object.assign({}, nodeEncode), {\n      color\n    }),\n    scale,\n    style: subObject(style, 'node'),\n    coordinate: {\n      type: 'polar',\n      // Leave enough rendering space for the label.\n      outerRadius: (minimumLen - 20) / minimumLen,\n      startAngle: -Math.PI * 2,\n      endAngle: 0\n    },\n    labels: [Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), {\n      text\n    }), labelStyle), ...nodeLabels],\n    tooltip: nodeTooltip,\n    animate: maybeAnimation(animate, 'node'),\n    axis: false\n  })];\n};\nChord.props = {};","map":{"version":3,"names":["deepMix","subObject","subTooltip","maybeAnimation","Arc","field","initializeData","DEFAULT_LAYOUT_OPTIONS","y","thickness","marginRatio","id","node","key","source","edge","target","sourceWeight","value","targetWeight","sortBy","DEFAULT_NODE_OPTIONS","type","axis","legend","encode","shape","x","scale","style","opacity","fillOpacity","lineWidth","DEFAULT_LINK_OPTIONS","DEFAULT_LABEL_OPTIONS","position","fontSize","Chord","options","context","data","layout","nodeLabels","linkLabels","animate","tooltip","nodes","links","nodeEncode","linkEncode","nodeKey","d","color","linkEncodeColor","nodeWidthRatio","nodePaddingRatio","restLayout","__rest","nodeData","edges","linkData","Object","assign","weight","_a","text","labelStyle","nodeTooltip","title","items","name","linkTooltip","height","width","minimumLen","Math","min","labels","fill","undefined","coordinate","outerRadius","startAngle","PI","endAngle","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/chord.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { CompositeMarkComponent as CC, MarkOptions } from '../runtime';\nimport { ChordMark } from '../spec';\nimport { subObject } from '../utils/helper';\nimport { subTooltip, maybeAnimation } from '../utils/mark';\nimport { Arc } from '../data/arc';\nimport { ArcOptions } from '../data/utils/arc/types';\nimport { field, initializeData } from './utils';\n\nconst DEFAULT_LAYOUT_OPTIONS: ArcOptions = {\n  y: 0,\n  thickness: 0.05, // width of the node, (0, 1)\n  marginRatio: 0.1, // margin ratio, [0, 1)\n  id: (node) => node.key,\n  source: (edge) => edge.source,\n  target: (edge) => edge.target,\n  sourceWeight: (edge) => edge.value || 1,\n  targetWeight: (edge) => edge.value || 1,\n  sortBy: null, // optional, id | weight | frequency | {function}\n};\n\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'polygon',\n    x: 'x',\n    y: 'y',\n  },\n  scale: {\n    x: { type: 'identity' },\n    y: { type: 'identity' },\n  },\n  style: {\n    opacity: 1,\n    fillOpacity: 1,\n    lineWidth: 1,\n  },\n};\n\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'ribbon',\n    x: 'x',\n    y: 'y',\n  },\n  style: {\n    opacity: 0.5,\n    lineWidth: 1,\n  },\n};\n\nconst DEFAULT_LABEL_OPTIONS = {\n  position: 'outside',\n  fontSize: 10,\n};\n\nexport type ChordOptions = Omit<ChordMark, 'type'>;\n\nexport const Chord: CC<ChordOptions> = (options, context) => {\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {},\n  } = options;\n\n  // Initialize data, generating nodes by link if is not specified.\n  const { nodes, links } = initializeData(data, encode);\n\n  // Extract encode for node and link.\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const { key: nodeKey = (d) => d.key, color = nodeKey } = nodeEncode;\n  const { linkEncodeColor = (d) => d.source } = linkEncode;\n  const {\n    nodeWidthRatio = DEFAULT_LAYOUT_OPTIONS.thickness,\n    nodePaddingRatio = DEFAULT_LAYOUT_OPTIONS.marginRatio,\n    ...restLayout\n  } = layout;\n\n  const { nodes: nodeData, edges: linkData } = Arc({\n    ...DEFAULT_LAYOUT_OPTIONS,\n    id: field(nodeKey),\n    thickness: nodeWidthRatio,\n    marginRatio: nodePaddingRatio,\n    ...restLayout,\n    weight: true,\n  })({ nodes, edges: links });\n\n  // Extract label style and apply defaults.\n  const { text = nodeKey, ...labelStyle } = subObject(style, 'label');\n\n  const nodeTooltip = subTooltip(\n    tooltip,\n    'node',\n    {\n      title: '',\n      items: [(d) => ({ name: d.key, value: d.value })],\n    },\n    true,\n  );\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [(d) => ({ name: `${d.source} -> ${d.target}`, value: d.value })],\n  });\n\n  const { height, width } = context;\n\n  const minimumLen = Math.min(height, width);\n\n  return [\n    deepMix({}, DEFAULT_LINK_OPTIONS, {\n      data: linkData,\n      encode: { ...linkEncode, color: linkEncodeColor },\n      labels: linkLabels,\n      style: {\n        fill: linkEncodeColor ? undefined : '#aaa',\n        ...subObject(style, 'link'),\n      },\n      tooltip: linkTooltip,\n      animate: maybeAnimation(animate, 'link'),\n    }),\n    deepMix({}, DEFAULT_NODE_OPTIONS, {\n      data: nodeData,\n      encode: { ...nodeEncode, color },\n      scale,\n      style: subObject(style, 'node'),\n      coordinate: {\n        type: 'polar',\n        // Leave enough rendering space for the label.\n        outerRadius: (minimumLen - 20) / minimumLen,\n        startAngle: -Math.PI * 2,\n        endAngle: 0,\n      },\n      labels: [\n        {\n          ...DEFAULT_LABEL_OPTIONS,\n          text,\n          ...labelStyle,\n        },\n        ...nodeLabels,\n      ],\n      tooltip: nodeTooltip,\n      animate: maybeAnimation(animate, 'node'),\n      axis: false,\n    }),\n  ] as MarkOptions[];\n};\n\nChord.props = {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}