{"ast":null,"code":"import { ICON_SIZE_RATIO } from '../../constants/element';\nimport { getHexagonPoints } from '../../utils/element';\nimport { Polygon } from '../shapes/polygon';\n/**\n * <zh/> 六边形节点\n *\n * <en/> Hexagon node\n */\nexport class Hexagon extends Polygon {\n  constructor(options) {\n    super(options);\n  }\n  getOuterR(attributes) {\n    return attributes.outerR || Math.min(...this.getSize(attributes)) / 2;\n  }\n  getPoints(attributes) {\n    return getHexagonPoints(this.getOuterR(attributes));\n  }\n  getIconStyle(attributes) {\n    const style = super.getIconStyle(attributes);\n    const size = this.getOuterR(attributes) * ICON_SIZE_RATIO;\n    return style ? Object.assign({\n      width: size,\n      height: size\n    }, style) : false;\n  }\n}","map":{"version":3,"names":["ICON_SIZE_RATIO","getHexagonPoints","Polygon","Hexagon","constructor","options","getOuterR","attributes","outerR","Math","min","getSize","getPoints","getIconStyle","style","size","Object","assign","width","height"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/nodes/hexagon.ts"],"sourcesContent":["import type { DisplayObjectConfig } from '@antv/g';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport type { Point } from '../../types';\nimport { getHexagonPoints } from '../../utils/element';\nimport type { IconStyleProps, PolygonStyleProps } from '../shapes';\nimport { Polygon } from '../shapes/polygon';\n\n/**\n * <zh/> 六边形节点样式配置项\n *\n * <en/> Hexagon node style props\n */\nexport interface HexagonStyleProps extends PolygonStyleProps {\n  /**\n   * <zh/> 外半径，默认为宽高的最小值的一半\n   *\n   * <en/> outer radius, default is half of the minimum value of width and height\n   */\n  outerR?: number;\n}\n\n/**\n * <zh/> 六边形节点\n *\n * <en/> Hexagon node\n */\nexport class Hexagon extends Polygon<HexagonStyleProps> {\n  constructor(options: DisplayObjectConfig<HexagonStyleProps>) {\n    super(options);\n  }\n\n  private getOuterR(attributes: Required<HexagonStyleProps>): number {\n    return attributes.outerR || Math.min(...this.getSize(attributes)) / 2;\n  }\n\n  protected getPoints(attributes: Required<HexagonStyleProps>): Point[] {\n    return getHexagonPoints(this.getOuterR(attributes));\n  }\n\n  protected getIconStyle(attributes: Required<HexagonStyleProps>): false | IconStyleProps {\n    const style = super.getIconStyle(attributes);\n    const size = this.getOuterR(attributes) * ICON_SIZE_RATIO;\n    return style ? ({ width: size, height: size, ...style } as IconStyleProps) : false;\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,yBAAyB;AAEzD,SAASC,gBAAgB,QAAQ,qBAAqB;AAEtD,SAASC,OAAO,QAAQ,mBAAmB;AAgB3C;;;;;AAKA,OAAM,MAAOC,OAAQ,SAAQD,OAA0B;EACrDE,YAAYC,OAA+C;IACzD,KAAK,CAACA,OAAO,CAAC;EAChB;EAEQC,SAASA,CAACC,UAAuC;IACvD,OAAOA,UAAU,CAACC,MAAM,IAAIC,IAAI,CAACC,GAAG,CAAC,GAAG,IAAI,CAACC,OAAO,CAACJ,UAAU,CAAC,CAAC,GAAG,CAAC;EACvE;EAEUK,SAASA,CAACL,UAAuC;IACzD,OAAON,gBAAgB,CAAC,IAAI,CAACK,SAAS,CAACC,UAAU,CAAC,CAAC;EACrD;EAEUM,YAAYA,CAACN,UAAuC;IAC5D,MAAMO,KAAK,GAAG,KAAK,CAACD,YAAY,CAACN,UAAU,CAAC;IAC5C,MAAMQ,IAAI,GAAG,IAAI,CAACT,SAAS,CAACC,UAAU,CAAC,GAAGP,eAAe;IACzD,OAAOc,KAAK,GAAIE,MAAA,CAAAC,MAAA;MAAEC,KAAK,EAAEH,IAAI;MAAEI,MAAM,EAAEJ;IAAI,GAAKD,KAAK,CAAqB,GAAG,KAAK;EACpF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}