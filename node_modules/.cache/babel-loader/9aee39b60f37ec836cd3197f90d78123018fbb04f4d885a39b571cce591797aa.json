{"ast":null,"code":"/**\n * <zh/> 解析 padding\n *\n * <en/> parse padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 标准 padding | <en/> standard padding\n */\nexport function parsePadding(padding = 0) {\n  if (Array.isArray(padding)) {\n    const [top = 0, right = top, bottom = top, left = right] = padding;\n    return [top, right, bottom, left];\n  }\n  return [padding, padding, padding, padding];\n}\n/**\n * <zh/> 获取在垂直方向上的 padding\n *\n * <en/> get vertical padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 垂直方向上的 padding | <en/> vertical padding\n */\nexport function getVerticalPadding(padding = 0) {\n  const parsedPadding = parsePadding(padding);\n  return parsedPadding[0] + parsedPadding[2];\n}\n/**\n * <zh/> 获取在水平方向上的 padding\n *\n * <en/> get horizontal padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 水平方向上的 padding | <en/> horizontal padding\n */\nexport function getHorizontalPadding(padding = 0) {\n  const parsedPadding = parsePadding(padding);\n  return parsedPadding[1] + parsedPadding[3];\n}","map":{"version":3,"names":["parsePadding","padding","Array","isArray","top","right","bottom","left","getVerticalPadding","parsedPadding","getHorizontalPadding"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/padding.ts"],"sourcesContent":["import type { Padding, STDPadding } from '../types/padding';\n\n/**\n * <zh/> 解析 padding\n *\n * <en/> parse padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 标准 padding | <en/> standard padding\n */\nexport function parsePadding(padding: Padding = 0): STDPadding {\n  if (Array.isArray(padding)) {\n    const [top = 0, right = top, bottom = top, left = right] = padding;\n    return [top, right, bottom, left];\n  }\n  return [padding, padding, padding, padding];\n}\n\n/**\n * <zh/> 获取在垂直方向上的 padding\n *\n * <en/> get vertical padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 垂直方向上的 padding | <en/> vertical padding\n */\nexport function getVerticalPadding(padding: Padding = 0): number {\n  const parsedPadding = parsePadding(padding);\n  return parsedPadding[0] + parsedPadding[2];\n}\n\n/**\n * <zh/> 获取在水平方向上的 padding\n *\n * <en/> get horizontal padding\n * @param padding - <zh/> padding | <en/> padding\n * @returns <zh/> 水平方向上的 padding | <en/> horizontal padding\n */\nexport function getHorizontalPadding(padding: Padding = 0): number {\n  const parsedPadding = parsePadding(padding);\n  return parsedPadding[1] + parsedPadding[3];\n}\n"],"mappings":"AAEA;;;;;;;AAOA,OAAM,SAAUA,YAAYA,CAACC,OAAA,GAAmB,CAAC;EAC/C,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IAC1B,MAAM,CAACG,GAAG,GAAG,CAAC,EAAEC,KAAK,GAAGD,GAAG,EAAEE,MAAM,GAAGF,GAAG,EAAEG,IAAI,GAAGF,KAAK,CAAC,GAAGJ,OAAO;IAClE,OAAO,CAACG,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAEC,IAAI,CAAC;EACnC;EACA,OAAO,CAACN,OAAO,EAAEA,OAAO,EAAEA,OAAO,EAAEA,OAAO,CAAC;AAC7C;AAEA;;;;;;;AAOA,OAAM,SAAUO,kBAAkBA,CAACP,OAAA,GAAmB,CAAC;EACrD,MAAMQ,aAAa,GAAGT,YAAY,CAACC,OAAO,CAAC;EAC3C,OAAOQ,aAAa,CAAC,CAAC,CAAC,GAAGA,aAAa,CAAC,CAAC,CAAC;AAC5C;AAEA;;;;;;;AAOA,OAAM,SAAUC,oBAAoBA,CAACT,OAAA,GAAmB,CAAC;EACvD,MAAMQ,aAAa,GAAGT,YAAY,CAACC,OAAO,CAAC;EAC3C,OAAOQ,aAAa,CAAC,CAAC,CAAC,GAAGA,aAAa,CAAC,CAAC,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}