{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { allCoordinateLayout } from '../../adaptor';\nimport { flow, transformOptions, map, set, get, isArray, includes, isNumber, mergeWithArrayCoverage, isNil, isString } from '../../utils';\n// 默认颜色\nexport var DEFAULT_COLORS = ['#f0efff', '#5B8FF9', '#3D76DD'];\n/**\n * 转化为扁平化数据\n * 1、[{ measures: [1,2], title: 'x' }, ...] -> [{ measures: 1, title: 'x', index: 0 }, { measures: 2, title: 'x', index: 1 },...]\n * 2、[{ measures: 1, title: 'x' }, { measures: [2,3], title: 'x' }] ->\n * [{ measures: 1, title: 'x', index: 0 }, { measures: 2, title: 'x', index: 0 }, { measures: 3, title: 'x', index: 1 },...]\n * @param data 数据\n * @param field 通道\n * @param xField x 分类通道\n * @param isSort 是否排序（降序）\n * @returns [扁平化的数据, 最大数据量]\n */\nfunction getTransformData(data, field, xField, isSort) {\n  if (isSort === void 0) {\n    isSort = true;\n  }\n  var maxSize = 0;\n  var isArrayData = false;\n  var transformData = map(data, function (d) {\n    var _a, _b;\n    var fieldData = get(d, [field]);\n    // null undefined 以及 Number(string) 为 NaN 的 都去除数据\n    if (isNil(fieldData)) return [];\n    if (isString(fieldData)) {\n      var numberData = Number(fieldData);\n      if (isNaN(numberData)) return [];\n      return _a = {}, _a[xField] = d[xField], _a[field] = numberData, _a;\n    }\n    // 主要组成为数组的形式\n    if (isArray(fieldData)) {\n      isArrayData = true;\n      maxSize = Math.max(maxSize, fieldData.length);\n      return map(isSort ? fieldData.sort(function (a, b) {\n        return b - a;\n      }) : fieldData, function (value, index) {\n        var _a;\n        return _a = {}, _a[xField] = d[xField], _a[field] = value, _a.index = index, _a;\n      });\n    }\n    // 存在则 min 值为 1\n    maxSize = Math.max(1, maxSize);\n    return _b = {}, _b[xField] = d[xField], _b[field] = fieldData, _b;\n  }).flat();\n  // 当存在更多分类时，单一的 measures 从 'measures' 的分类，变更为 'measures_0' 的分类\n  if (isArrayData) {\n    return [transformData.map(function (item) {\n      return __assign({\n        index: 0\n      }, item);\n    }), maxSize];\n  }\n  return [transformData, maxSize];\n}\n/**\n * 按照最大数据量转化为颜色数组\n * @param maxSize 最大数据量\n * @param color 颜色\n * @returns string[]\n */\nfunction getFieldColor(maxSize, color) {\n  return new Array(maxSize).fill('').map(function (d, i) {\n    return isArray(color) ? color[i % color.length] : color;\n  });\n}\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  /**\n   * 图表差异化处理\n   */\n  var init = function (params) {\n    var options = params.options;\n    var color = options.color,\n      _a = options.rangeField,\n      rangeField = _a === void 0 ? 'ranges' : _a,\n      _b = options.measureField,\n      measureField = _b === void 0 ? 'measures' : _b,\n      _c = options.targetField,\n      targetField = _c === void 0 ? 'targets' : _c,\n      _d = options.xField,\n      xField = _d === void 0 ? 'title' : _d,\n      mapField = options.mapField,\n      data = options.data;\n    // 数据进行拍平\n    var _e = getTransformData(data, rangeField, xField),\n      rangesData = _e[0],\n      rangesMaxSize = _e[1];\n    var _f = getTransformData(data, measureField, xField, false),\n      measuresData = _f[0],\n      measuresMaxSize = _f[1];\n    var _g = getTransformData(data, targetField, xField, false),\n      targetsData = _g[0],\n      targetsMaxSize = _g[1];\n    // 获取颜色\n    var rangesColor = get(color, [rangeField], DEFAULT_COLORS[0]);\n    var measuresColor = get(color, [measureField], DEFAULT_COLORS[1]);\n    var targetsColor = get(color, [targetField], DEFAULT_COLORS[2]);\n    // 获取 scale.color 颜色分类\n    var colors = [getFieldColor(rangesMaxSize, rangesColor), getFieldColor(measuresMaxSize, measuresColor), getFieldColor(targetsMaxSize, targetsColor)].flat();\n    options.children = map(options.children, function (c, i) {\n      var datas = [rangesData, measuresData, targetsData][i];\n      var yField = [rangeField, measureField, targetField][i];\n      return __assign(__assign({}, c), {\n        data: datas,\n        encode: __assign(__assign({}, c.encode || {}), {\n          x: xField,\n          y: yField,\n          color: function (d) {\n            var index = d.index;\n            var mapString = isNumber(index) ? \"\".concat(yField, \"_\").concat(index) : yField;\n            return mapField ? get(mapField, [yField, index], mapString) : mapString;\n          }\n        })\n      });\n    });\n    set(options, 'scale.color.range', colors);\n    // legend itemMarker 的形状\n    options.legend.color.itemMarker = function (d) {\n      if (mapField && includes(mapField === null || mapField === void 0 ? void 0 : mapField[targetField], d)) {\n        return 'line';\n      }\n      return (d === null || d === void 0 ? void 0 : d.replace(/\\_\\d$/, '')) === targetField ? 'line' : 'square';\n    };\n    return params;\n  };\n  /**\n   * 水平｜竖直 方向target配置适配\n   * @param params Params\n   * @returns params Params\n   */\n  var layoutAdaptor = function (params) {\n    var _a = params.options.transpose,\n      transpose = _a === void 0 ? true : _a;\n    if (!transpose) {\n      set(params, 'options.children[2].shapeField', 'hyphen');\n    }\n    return params;\n  };\n  /**\n   * range、measure、target 配置适配\n   * @param params Params\n   * @returns params Params\n   */\n  var cfgAdaptor = function (params) {\n    var options = params.options;\n    var _a = options.range,\n      range = _a === void 0 ? {} : _a,\n      _b = options.measure,\n      measure = _b === void 0 ? {} : _b,\n      _c = options.target,\n      target = _c === void 0 ? {} : _c,\n      children = options.children;\n    options.children = [range, measure, target].map(function (c, i) {\n      return mergeWithArrayCoverage(children[i], c);\n    });\n    return params;\n  };\n  return flow(init, layoutAdaptor, cfgAdaptor, allCoordinateLayout, transformOptions)(params);\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","allCoordinateLayout","flow","transformOptions","map","set","get","isArray","includes","isNumber","mergeWithArrayCoverage","isNil","isString","DEFAULT_COLORS","getTransformData","data","field","xField","isSort","maxSize","isArrayData","transformData","d","_a","_b","fieldData","numberData","Number","isNaN","Math","max","sort","a","b","value","index","flat","item","getFieldColor","color","Array","fill","adaptor","params","init","options","rangeField","measureField","_c","targetField","_d","mapField","_e","rangesData","rangesMaxSize","_f","measuresData","measuresMaxSize","_g","targetsData","targetsMaxSize","rangesColor","measuresColor","targetsColor","colors","children","c","datas","yField","encode","x","y","mapString","concat","legend","itemMarker","replace","layoutAdaptor","transpose","cfgAdaptor","range","measure","target"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/plots/bullet/adaptor.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { allCoordinateLayout } from '../../adaptor';\nimport { flow, transformOptions, map, set, get, isArray, includes, isNumber, mergeWithArrayCoverage, isNil, isString, } from '../../utils';\n// 默认颜色\nexport var DEFAULT_COLORS = ['#f0efff', '#5B8FF9', '#3D76DD'];\n/**\n * 转化为扁平化数据\n * 1、[{ measures: [1,2], title: 'x' }, ...] -> [{ measures: 1, title: 'x', index: 0 }, { measures: 2, title: 'x', index: 1 },...]\n * 2、[{ measures: 1, title: 'x' }, { measures: [2,3], title: 'x' }] ->\n * [{ measures: 1, title: 'x', index: 0 }, { measures: 2, title: 'x', index: 0 }, { measures: 3, title: 'x', index: 1 },...]\n * @param data 数据\n * @param field 通道\n * @param xField x 分类通道\n * @param isSort 是否排序（降序）\n * @returns [扁平化的数据, 最大数据量]\n */\nfunction getTransformData(data, field, xField, isSort) {\n    if (isSort === void 0) { isSort = true; }\n    var maxSize = 0;\n    var isArrayData = false;\n    var transformData = map(data, function (d) {\n        var _a, _b;\n        var fieldData = get(d, [field]);\n        // null undefined 以及 Number(string) 为 NaN 的 都去除数据\n        if (isNil(fieldData))\n            return [];\n        if (isString(fieldData)) {\n            var numberData = Number(fieldData);\n            if (isNaN(numberData))\n                return [];\n            return _a = {}, _a[xField] = d[xField], _a[field] = numberData, _a;\n        }\n        // 主要组成为数组的形式\n        if (isArray(fieldData)) {\n            isArrayData = true;\n            maxSize = Math.max(maxSize, fieldData.length);\n            return map(isSort ? fieldData.sort(function (a, b) { return b - a; }) : fieldData, function (value, index) {\n                var _a;\n                return (_a = {},\n                    _a[xField] = d[xField],\n                    _a[field] = value,\n                    _a.index = index,\n                    _a);\n            });\n        }\n        // 存在则 min 值为 1\n        maxSize = Math.max(1, maxSize);\n        return _b = {}, _b[xField] = d[xField], _b[field] = fieldData, _b;\n    }).flat();\n    // 当存在更多分类时，单一的 measures 从 'measures' 的分类，变更为 'measures_0' 的分类\n    if (isArrayData) {\n        return [\n            transformData.map(function (item) { return (__assign({ index: 0 }, item)); }),\n            maxSize,\n        ];\n    }\n    return [transformData, maxSize];\n}\n/**\n * 按照最大数据量转化为颜色数组\n * @param maxSize 最大数据量\n * @param color 颜色\n * @returns string[]\n */\nfunction getFieldColor(maxSize, color) {\n    return new Array(maxSize).fill('').map(function (d, i) { return (isArray(color) ? color[i % color.length] : color); });\n}\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n    /**\n     * 图表差异化处理\n     */\n    var init = function (params) {\n        var options = params.options;\n        var color = options.color, _a = options.rangeField, rangeField = _a === void 0 ? 'ranges' : _a, _b = options.measureField, measureField = _b === void 0 ? 'measures' : _b, _c = options.targetField, targetField = _c === void 0 ? 'targets' : _c, _d = options.xField, xField = _d === void 0 ? 'title' : _d, mapField = options.mapField, data = options.data;\n        // 数据进行拍平\n        var _e = getTransformData(data, rangeField, xField), rangesData = _e[0], rangesMaxSize = _e[1];\n        var _f = getTransformData(data, measureField, xField, false), measuresData = _f[0], measuresMaxSize = _f[1];\n        var _g = getTransformData(data, targetField, xField, false), targetsData = _g[0], targetsMaxSize = _g[1];\n        // 获取颜色\n        var rangesColor = get(color, [rangeField], DEFAULT_COLORS[0]);\n        var measuresColor = get(color, [measureField], DEFAULT_COLORS[1]);\n        var targetsColor = get(color, [targetField], DEFAULT_COLORS[2]);\n        // 获取 scale.color 颜色分类\n        var colors = [\n            getFieldColor(rangesMaxSize, rangesColor),\n            getFieldColor(measuresMaxSize, measuresColor),\n            getFieldColor(targetsMaxSize, targetsColor),\n        ].flat();\n        options.children = map(options.children, function (c, i) {\n            var datas = [rangesData, measuresData, targetsData][i];\n            var yField = [rangeField, measureField, targetField][i];\n            return __assign(__assign({}, c), { data: datas, encode: __assign(__assign({}, (c.encode || {})), { x: xField, y: yField, color: function (d) {\n                        var index = d.index;\n                        var mapString = isNumber(index) ? \"\".concat(yField, \"_\").concat(index) : yField;\n                        return mapField ? get(mapField, [yField, index], mapString) : mapString;\n                    } }) });\n        });\n        set(options, 'scale.color.range', colors);\n        // legend itemMarker 的形状\n        options.legend.color.itemMarker = function (d) {\n            if (mapField && includes(mapField === null || mapField === void 0 ? void 0 : mapField[targetField], d)) {\n                return 'line';\n            }\n            return (d === null || d === void 0 ? void 0 : d.replace(/\\_\\d$/, '')) === targetField ? 'line' : 'square';\n        };\n        return params;\n    };\n    /**\n     * 水平｜竖直 方向target配置适配\n     * @param params Params\n     * @returns params Params\n     */\n    var layoutAdaptor = function (params) {\n        var _a = params.options.transpose, transpose = _a === void 0 ? true : _a;\n        if (!transpose) {\n            set(params, 'options.children[2].shapeField', 'hyphen');\n        }\n        return params;\n    };\n    /**\n     * range、measure、target 配置适配\n     * @param params Params\n     * @returns params Params\n     */\n    var cfgAdaptor = function (params) {\n        var options = params.options;\n        var _a = options.range, range = _a === void 0 ? {} : _a, _b = options.measure, measure = _b === void 0 ? {} : _b, _c = options.target, target = _c === void 0 ? {} : _c, children = options.children;\n        options.children = [range, measure, target].map(function (c, i) { return mergeWithArrayCoverage(children[i], c); });\n        return params;\n    };\n    return flow(init, layoutAdaptor, cfgAdaptor, allCoordinateLayout, transformOptions)(params);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}