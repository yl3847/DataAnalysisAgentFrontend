{"ast":null,"code":"import React, { forwardRef, useMemo } from 'react';\nimport { BaseGraph } from '../../core/base-graph';\nimport { COMMON_OPTIONS } from '../../core/constants';\nimport { formatTreeData } from '../../core/utils/data';\nimport { mergeOptions } from '../../core/utils/options';\nimport { DEFAULT_OPTIONS, getMindMapOptions } from './options';\nexport const MindMap = forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  const options = useMemo(() => {\n    const {\n      data,\n      type = 'default',\n      nodeMinWidth,\n      nodeMaxWidth,\n      direction = 'alternate',\n      labelField,\n      defaultExpandLevel,\n      ...restProps\n    } = props;\n    const options = mergeOptions(COMMON_OPTIONS, DEFAULT_OPTIONS, {\n      data: formatTreeData(data, defaultExpandLevel)\n    }, getMindMapOptions({\n      type,\n      nodeMinWidth,\n      nodeMaxWidth,\n      direction,\n      labelField\n    }), restProps);\n    return options;\n  }, [props]);\n  return React.createElement(BaseGraph, {\n    ...options,\n    ref: ref\n  }, children);\n});","map":{"version":3,"names":["React","forwardRef","useMemo","BaseGraph","COMMON_OPTIONS","formatTreeData","mergeOptions","DEFAULT_OPTIONS","getMindMapOptions","MindMap","children","props","ref","options","data","type","nodeMinWidth","nodeMaxWidth","direction","labelField","defaultExpandLevel","restProps","createElement"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/components/mind-map/index.js"],"sourcesContent":["import React, { forwardRef, useMemo, } from 'react';\nimport { BaseGraph } from '../../core/base-graph';\nimport { COMMON_OPTIONS } from '../../core/constants';\nimport { formatTreeData } from '../../core/utils/data';\nimport { mergeOptions } from '../../core/utils/options';\nimport { DEFAULT_OPTIONS, getMindMapOptions } from './options';\nexport const MindMap = forwardRef(({ children, ...props }, ref) => {\n    const options = useMemo(() => {\n        const { data, type = 'default', nodeMinWidth, nodeMaxWidth, direction = 'alternate', labelField, defaultExpandLevel, ...restProps } = props;\n        const options = mergeOptions(COMMON_OPTIONS, DEFAULT_OPTIONS, { data: formatTreeData(data, defaultExpandLevel) }, getMindMapOptions({ type, nodeMinWidth, nodeMaxWidth, direction, labelField }), restProps);\n        return options;\n    }, [props]);\n    return (React.createElement(BaseGraph, { ...options, ref: ref }, children));\n});\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAS,OAAO;AACnD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,WAAW;AAC9D,OAAO,MAAMC,OAAO,GAAGR,UAAU,CAAC,CAAC;EAAES,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAK;EAC/D,MAAMC,OAAO,GAAGX,OAAO,CAAC,MAAM;IAC1B,MAAM;MAAEY,IAAI;MAAEC,IAAI,GAAG,SAAS;MAAEC,YAAY;MAAEC,YAAY;MAAEC,SAAS,GAAG,WAAW;MAAEC,UAAU;MAAEC,kBAAkB;MAAE,GAAGC;IAAU,CAAC,GAAGV,KAAK;IAC3I,MAAME,OAAO,GAAGP,YAAY,CAACF,cAAc,EAAEG,eAAe,EAAE;MAAEO,IAAI,EAAET,cAAc,CAACS,IAAI,EAAEM,kBAAkB;IAAE,CAAC,EAAEZ,iBAAiB,CAAC;MAAEO,IAAI;MAAEC,YAAY;MAAEC,YAAY;MAAEC,SAAS;MAAEC;IAAW,CAAC,CAAC,EAAEE,SAAS,CAAC;IAC5M,OAAOR,OAAO;EAClB,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;EACX,OAAQX,KAAK,CAACsB,aAAa,CAACnB,SAAS,EAAE;IAAE,GAAGU,OAAO;IAAED,GAAG,EAAEA;EAAI,CAAC,EAAEF,QAAQ,CAAC;AAC9E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}