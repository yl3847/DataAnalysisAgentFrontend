{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { isFunction } from '@antv/util';\nimport { degToRad, getCallbackValue, normalize, vertical } from '../../../util';\nexport function getCallbackStyle(style, params) {\n  return Object.fromEntries(Object.entries(style).map(function (_a) {\n    var _b = __read(_a, 2),\n      key = _b[0],\n      val = _b[1];\n    return [key, getCallbackValue(val, params)];\n  }));\n}\nexport function baseDependencies(attr) {\n  if (attr.type === 'linear') {\n    var startPos = attr.startPos,\n      endPos = attr.endPos;\n    return __spreadArray(__spreadArray([], __read(startPos), false), __read(endPos), false);\n  }\n  var startAngle = attr.startAngle,\n    endAngle = attr.endAngle,\n    center = attr.center,\n    radius = attr.radius;\n  return __spreadArray(__spreadArray([startAngle, endAngle], __read(center), false), [radius], false);\n}\nexport function filterExec(data, filter) {\n  return !!filter && isFunction(filter) ? data.filter(filter) : data;\n}\n/** ---- to avoid cycle dependency */\nexport function getLineAngle(value, attr) {\n  var startAngle = attr.startAngle,\n    endAngle = attr.endAngle;\n  return (endAngle - startAngle) * value + startAngle;\n}\nexport function getLineTangentVector(value, attr) {\n  if (attr.type === 'linear') {\n    var _a = __read(attr.startPos, 2),\n      startX = _a[0],\n      startY = _a[1],\n      _b = __read(attr.endPos, 2),\n      endX = _b[0],\n      endY = _b[1];\n    var _c = __read([endX - startX, endY - startY], 2),\n      dx = _c[0],\n      dy = _c[1];\n    return normalize([dx, dy]);\n  }\n  var angle = degToRad(getLineAngle(value, attr));\n  return [-Math.sin(angle), Math.cos(angle)];\n}\nexport function getDirectionVector(value, direction, attr) {\n  var tangentVector = getLineTangentVector(value, attr);\n  return vertical(tangentVector, direction !== 'positive');\n}\nexport function getLabelVector(value, attr) {\n  return getDirectionVector(value, attr.labelDirection, attr);\n}","map":{"version":3,"names":["isFunction","degToRad","getCallbackValue","normalize","vertical","getCallbackStyle","style","params","Object","fromEntries","entries","map","_a","_b","__read","key","val","baseDependencies","attr","type","startPos","endPos","__spreadArray","startAngle","endAngle","center","radius","filterExec","data","filter","getLineAngle","value","getLineTangentVector","startX","startY","endX","endY","_c","dx","dy","angle","Math","sin","cos","getDirectionVector","direction","tangentVector","getLabelVector","labelDirection"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/axis/guides/utils.ts"],"sourcesContent":["import { isFunction } from '@antv/util';\nimport type { CallableObject, Vector2 } from '../../../types';\nimport { degToRad, getCallbackValue, normalize, vertical } from '../../../util';\nimport type {\n  AxisDatumCP,\n  AxisStyleProps,\n  Direction,\n  RequiredArcAxisStyleProps,\n  RequiredAxisStyleProps,\n} from '../types';\n\nexport function getCallbackStyle<T extends { [keys: string]: any }, P extends Array<any> = []>(\n  style: CallableObject<T, AxisDatumCP<P>>,\n  params: AxisDatumCP<P>\n) {\n  return Object.fromEntries(\n    Object.entries(style).map(([key, val]) => {\n      return [key, getCallbackValue(val as any, params)];\n    })\n  );\n}\n\nexport function baseDependencies(attr: Required<AxisStyleProps>): any[] {\n  if (attr.type === 'linear') {\n    const { startPos, endPos } = attr;\n    return [...startPos, ...endPos];\n  }\n  const { startAngle, endAngle, center, radius } = attr;\n  return [startAngle, endAngle, ...center, radius];\n}\n\nexport function filterExec<T>(data: T[], filter?: (...args: any) => boolean): T[] {\n  return !!filter && isFunction(filter) ? data.filter(filter) : data;\n}\n\n/** ---- to avoid cycle dependency */\n\nexport function getLineAngle(value: number, attr: RequiredArcAxisStyleProps) {\n  const { startAngle, endAngle } = attr;\n  return (endAngle - startAngle) * value + startAngle;\n}\n\nexport function getLineTangentVector(value: number, attr: RequiredAxisStyleProps) {\n  if (attr.type === 'linear') {\n    const {\n      startPos: [startX, startY],\n      endPos: [endX, endY],\n    } = attr;\n    const [dx, dy] = [endX - startX, endY - startY];\n    return normalize([dx, dy]);\n  }\n  const angle = degToRad(getLineAngle(value, attr));\n  return [-Math.sin(angle), Math.cos(angle)] as Vector2;\n}\n\nexport function getDirectionVector(value: number, direction: Direction, attr: RequiredAxisStyleProps): Vector2 {\n  const tangentVector = getLineTangentVector(value, attr);\n  return vertical(tangentVector, direction !== 'positive') as Vector2;\n}\n\nexport function getLabelVector(value: number, attr: Required<AxisStyleProps>) {\n  return getDirectionVector(value, attr.labelDirection, attr);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}