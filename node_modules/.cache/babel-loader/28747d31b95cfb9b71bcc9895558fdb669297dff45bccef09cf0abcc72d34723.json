{"ast":null,"code":"import { isBetween } from './math';\n/**\n * <zh/> 解析位置\n *\n * <en/> Parse position\n * @param placement - <zh/> 位置 | <en/> placement\n * @returns <zh/> 相对位置 | <en/> relative placement\n */\nexport function parsePlacement(placement) {\n  if (Array.isArray(placement)) {\n    return isBetween(placement[0], 0, 1) && isBetween(placement[1], 0, 1) ? placement : [0.5, 0.5];\n  }\n  const direction = placement.split('-');\n  const x = direction.includes('left') ? 0 : direction.includes('right') ? 1 : 0.5;\n  const y = direction.includes('top') ? 0 : direction.includes('bottom') ? 1 : 0.5;\n  return [x, y];\n}","map":{"version":3,"names":["isBetween","parsePlacement","placement","Array","isArray","direction","split","x","includes","y"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/placement.ts"],"sourcesContent":["import type { Placement, RelativePlacement } from '../types';\nimport { isBetween } from './math';\n\n/**\n * <zh/> 解析位置\n *\n * <en/> Parse position\n * @param placement - <zh/> 位置 | <en/> placement\n * @returns <zh/> 相对位置 | <en/> relative placement\n */\nexport function parsePlacement(placement: Placement): RelativePlacement {\n  if (Array.isArray(placement)) {\n    return isBetween(placement[0], 0, 1) && isBetween(placement[1], 0, 1) ? placement : [0.5, 0.5];\n  }\n  const direction = placement.split('-');\n  const x = direction.includes('left') ? 0 : direction.includes('right') ? 1 : 0.5;\n  const y = direction.includes('top') ? 0 : direction.includes('bottom') ? 1 : 0.5;\n  return [x, y];\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,QAAQ;AAElC;;;;;;;AAOA,OAAM,SAAUC,cAAcA,CAACC,SAAoB;EACjD,IAAIC,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC5B,OAAOF,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAIF,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAGA,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;EAChG;EACA,MAAMG,SAAS,GAAGH,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC;EACtC,MAAMC,CAAC,GAAGF,SAAS,CAACG,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,GAAGH,SAAS,CAACG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG;EAChF,MAAMC,CAAC,GAAGJ,SAAS,CAACG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGH,SAAS,CAACG,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG;EAChF,OAAO,CAACD,CAAC,EAAEE,CAAC,CAAC;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}