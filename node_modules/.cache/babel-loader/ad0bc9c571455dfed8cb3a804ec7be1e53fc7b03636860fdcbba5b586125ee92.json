{"ast":null,"code":"import { flow, isArray, set, transformOptions } from '../../utils';\nimport { DefaultTransformKey } from './type';\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  /**\n   * 图表差异化处理\n   */\n  var init = function (params) {\n    var options = params.options;\n    var data = options.data,\n      setsField = options.setsField,\n      sizeField = options.sizeField;\n    if (isArray(data)) {\n      set(options, 'data', {\n        type: 'inline',\n        value: data,\n        transform: [{\n          type: 'venn',\n          sets: setsField,\n          size: sizeField,\n          as: [DefaultTransformKey.color, DefaultTransformKey.d]\n        }]\n      });\n      set(options, 'colorField', DefaultTransformKey.color);\n      set(options, ['children', '0', 'encode', 'd'], DefaultTransformKey.d);\n    }\n    return params;\n  };\n  return flow(init, transformOptions)(params);\n}","map":{"version":3,"names":["flow","isArray","set","transformOptions","DefaultTransformKey","adaptor","params","init","options","data","setsField","sizeField","type","value","transform","sets","size","as","color","d"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/plots/venn/adaptor.js"],"sourcesContent":["import { flow, isArray, set, transformOptions } from '../../utils';\nimport { DefaultTransformKey } from './type';\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n    /**\n     * 图表差异化处理\n     */\n    var init = function (params) {\n        var options = params.options;\n        var data = options.data, setsField = options.setsField, sizeField = options.sizeField;\n        if (isArray(data)) {\n            set(options, 'data', {\n                type: 'inline',\n                value: data,\n                transform: [\n                    {\n                        type: 'venn',\n                        sets: setsField,\n                        size: sizeField,\n                        as: [DefaultTransformKey.color, DefaultTransformKey.d],\n                    },\n                ],\n            });\n            set(options, 'colorField', DefaultTransformKey.color);\n            set(options, ['children', '0', 'encode', 'd'], DefaultTransformKey.d);\n        }\n        return params;\n    };\n    return flow(init, transformOptions)(params);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAEC,gBAAgB,QAAQ,aAAa;AAClE,SAASC,mBAAmB,QAAQ,QAAQ;AAC5C;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,MAAM,EAAE;EAC5B;AACJ;AACA;EACI,IAAIC,IAAI,GAAG,SAAAA,CAAUD,MAAM,EAAE;IACzB,IAAIE,OAAO,GAAGF,MAAM,CAACE,OAAO;IAC5B,IAAIC,IAAI,GAAGD,OAAO,CAACC,IAAI;MAAEC,SAAS,GAAGF,OAAO,CAACE,SAAS;MAAEC,SAAS,GAAGH,OAAO,CAACG,SAAS;IACrF,IAAIV,OAAO,CAACQ,IAAI,CAAC,EAAE;MACfP,GAAG,CAACM,OAAO,EAAE,MAAM,EAAE;QACjBI,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAEJ,IAAI;QACXK,SAAS,EAAE,CACP;UACIF,IAAI,EAAE,MAAM;UACZG,IAAI,EAAEL,SAAS;UACfM,IAAI,EAAEL,SAAS;UACfM,EAAE,EAAE,CAACb,mBAAmB,CAACc,KAAK,EAAEd,mBAAmB,CAACe,CAAC;QACzD,CAAC;MAET,CAAC,CAAC;MACFjB,GAAG,CAACM,OAAO,EAAE,YAAY,EAAEJ,mBAAmB,CAACc,KAAK,CAAC;MACrDhB,GAAG,CAACM,OAAO,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAEJ,mBAAmB,CAACe,CAAC,CAAC;IACzE;IACA,OAAOb,MAAM;EACjB,CAAC;EACD,OAAON,IAAI,CAACO,IAAI,EAAEJ,gBAAgB,CAAC,CAACG,MAAM,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}