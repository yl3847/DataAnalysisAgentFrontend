{"ast":null,"code":"import { InternMap } from '../utils';\nimport { Ordinal, defaultUnknown } from './ordinal';\nfunction normalize(array) {\n  const min = Math.min(...array);\n  return array.map(d => d / min);\n}\nfunction splice(array, n) {\n  const sn = array.length;\n  const diff = n - sn;\n  return diff > 0 ? [...array, ...new Array(diff).fill(1)] : diff < 0 ? array.slice(0, n) : array;\n}\nfunction pretty(n) {\n  return Math.round(n * 1e12) / 1e12;\n}\n/**\n * 基于 band 基础配置获取存在 flex band 的状态\n */\nfunction computeFlexBandState(options) {\n  // 如果 flex 比 domain 少，那么就补全\n  // 如果 flex 比 domain 多，就截取\n  const {\n    domain,\n    range,\n    paddingOuter,\n    paddingInner,\n    flex: F,\n    round,\n    align\n  } = options;\n  const n = domain.length;\n  const flex = splice(F, n);\n  // 根据下面的等式可以计算出所有 step 的总和\n  // stepSum = step1 + step2 ... + stepN;\n  // stepAverage = stepSum / n;\n  // PO = stepAverage * paddingOuter;\n  // PI = stepAverage * paddingInner;\n  // width = PO * 2 + stepSum - PI;\n  const [start, end] = range;\n  const width = end - start;\n  const ratio = 2 / n * paddingOuter + 1 - 1 / n * paddingInner;\n  const stepSum = width / ratio;\n  // stepSum = (b1 + PI) + (b2 + PI) ... + (bN + PI)\n  // = bandSum + PI * n;\n  const PI = stepSum * paddingInner / n;\n  const bandWidthSum = stepSum - n * PI;\n  // 计算出最小的 bandWidth\n  const normalizedFlex = normalize(flex);\n  const flexSum = normalizedFlex.reduce((sum, value) => sum + value);\n  const minBandWidth = bandWidthSum / flexSum;\n  // 计算每个 bandWidth 和 step，并且用定义域内的值索引\n  const valueBandWidth = new InternMap(domain.map((d, i) => {\n    const bandWidth = normalizedFlex[i] * minBandWidth;\n    return [d, round ? Math.floor(bandWidth) : bandWidth];\n  }));\n  const valueStep = new InternMap(domain.map((d, i) => {\n    const bandWidth = normalizedFlex[i] * minBandWidth;\n    const step = bandWidth + PI;\n    return [d, round ? Math.floor(step) : step];\n  }));\n  // 计算起始位置的偏移量\n  // 因为 step 可能被 round 了，重新计算所有的 step 的总和\n  const finalStepSum = Array.from(valueStep.values()).reduce((sum, value) => sum + value);\n  const outerPaddingSum = width - (finalStepSum - finalStepSum / n * paddingInner);\n  const offset = outerPaddingSum * align;\n  // 计算 adjustedRange，也就是 domain 中每个值映射之后的值\n  const bandStart = start + offset;\n  let prev = round ? Math.round(bandStart) : bandStart;\n  const adjustedRange = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    // 简单处理精度问题\n    adjustedRange[i] = pretty(prev);\n    const value = domain[i];\n    prev += valueStep.get(value);\n  }\n  return {\n    valueBandWidth,\n    valueStep,\n    adjustedRange\n  };\n}\n/**\n * 基于 band 基础配置获取 band 的状态\n */\nfunction computeBandState(options) {\n  var _a;\n  const {\n    domain\n  } = options;\n  const n = domain.length;\n  if (n === 0) {\n    return {\n      valueBandWidth: undefined,\n      valueStep: undefined,\n      adjustedRange: []\n    };\n  }\n  const hasFlex = !!((_a = options.flex) === null || _a === void 0 ? void 0 : _a.length);\n  if (hasFlex) {\n    return computeFlexBandState(options);\n  }\n  const {\n    range,\n    paddingOuter,\n    paddingInner,\n    round,\n    align\n  } = options;\n  let step;\n  let bandWidth;\n  let rangeStart = range[0];\n  const rangeEnd = range[1];\n  // range 的计算方式如下：\n  // = stop - start\n  // = (n * step(n 个 step) )\n  // + (2 * step * paddingOuter(两边的 padding))\n  // - (1 * step * paddingInner(多出的一个 inner))\n  const deltaRange = rangeEnd - rangeStart;\n  const outerTotal = paddingOuter * 2;\n  const innerTotal = n - paddingInner;\n  step = deltaRange / Math.max(1, outerTotal + innerTotal);\n  // 优化成整数\n  if (round) {\n    step = Math.floor(step);\n  }\n  // 基于 align 实现偏移\n  rangeStart += (deltaRange - step * (n - paddingInner)) * align;\n  // 一个 step 的组成如下：\n  // step = bandWidth + step * paddingInner，\n  // 则 bandWidth = step - step * (paddingInner)\n  bandWidth = step * (1 - paddingInner);\n  if (round) {\n    rangeStart = Math.round(rangeStart);\n    bandWidth = Math.round(bandWidth);\n  }\n  // 转化后的 range\n  const adjustedRange = new Array(n).fill(0).map((_, i) => rangeStart + i * step);\n  return {\n    valueStep: step,\n    valueBandWidth: bandWidth,\n    adjustedRange\n  };\n}\n/**\n * Band 比例尺\n *\n * 一种特殊的 ordinal scale，区别在于值域的范围是连续的。\n * 使用的场景例如柱状图，可以用来定位各个柱子水平方向距离原点开始绘制的距离、各柱子之间的间距\n *\n * 由于部分选项较为抽象，见下图描述：\n *\n * BN = bandWidthN\n * SN = stepN\n * domain = [A, B]\n *\n * 约束关系如下\n * width = PO + B1 + PI + B2 + PI ... + BN + PO;\n * PO = (S1 + S2 + ... SN) / N * paddingOuter\n * PI = (S1 + S2 + ... SN) / N * paddingInner\n * BN / BN-1 = flex[n] / flex[n-1]\n *\n * |<------------------------------------------- range ------------------------------------------->|\n * |             |                   |             |                   |             |             |\n * |<-----PO---->|<------B1--------->|<-----PI---->|<-------B2-------->|<----PI----->|<-----PO---->|\n * |             | ***************** |             | ***************** |             |             |\n * |             | ******* A ******* |             | ******* B ******* |             |             |\n * |             | ***************** |             | ***************** |             |             |\n * |             |<--------------S1--------------->| <--------------S2-------------->|                                              |\n * |-----------------------------------------------------------------------------------------------|\n *\n */\nexport class Band extends Ordinal {\n  // 覆盖默认配置\n  getDefaultOptions() {\n    return {\n      domain: [],\n      range: [0, 1],\n      align: 0.5,\n      round: false,\n      paddingInner: 0,\n      paddingOuter: 0,\n      padding: 0,\n      unknown: defaultUnknown,\n      flex: []\n    };\n  }\n  // 显示指定 options 的类型为 OrdinalOptions，从而推断出 O 的类型\n  constructor(options) {\n    super(options);\n  }\n  clone() {\n    return new Band(this.options);\n  }\n  getStep(x) {\n    if (this.valueStep === undefined) return 1;\n    // 没有 flex 的情况时, valueStep 是 number 类型\n    if (typeof this.valueStep === 'number') {\n      return this.valueStep;\n    }\n    // 对于 flex 都为 1 的情况，x 不是必须要传入的\n    // 这种情况所有的条的 step 都相等，所以返回第一个就好\n    if (x === undefined) return Array.from(this.valueStep.values())[0];\n    return this.valueStep.get(x);\n  }\n  getBandWidth(x) {\n    if (this.valueBandWidth === undefined) return 1;\n    // 没有 flex, valueBandWidth 是 number 类型\n    if (typeof this.valueBandWidth === 'number') {\n      return this.valueBandWidth;\n    }\n    // 对于 flex 都为 1 的情况，x 不是必须要传入的\n    // 这种情况所有的条的 bandWidth 都相等，所以返回第一个\n    if (x === undefined) return Array.from(this.valueBandWidth.values())[0];\n    return this.valueBandWidth.get(x);\n  }\n  getRange() {\n    return this.adjustedRange;\n  }\n  getPaddingInner() {\n    const {\n      padding,\n      paddingInner\n    } = this.options;\n    return padding > 0 ? padding : paddingInner;\n  }\n  getPaddingOuter() {\n    const {\n      padding,\n      paddingOuter\n    } = this.options;\n    return padding > 0 ? padding : paddingOuter;\n  }\n  rescale() {\n    super.rescale();\n    // 当用户配置了opt.padding 且非 0 时，我们覆盖已经设置的 paddingInner paddingOuter\n    // 我们约定 padding 的优先级较 paddingInner 和 paddingOuter 高\n    const {\n      align,\n      domain,\n      range,\n      round,\n      flex\n    } = this.options;\n    const {\n      adjustedRange,\n      valueBandWidth,\n      valueStep\n    } = computeBandState({\n      align,\n      range,\n      round,\n      flex,\n      paddingInner: this.getPaddingInner(),\n      paddingOuter: this.getPaddingOuter(),\n      domain\n    });\n    // 更新必要的属性\n    this.valueStep = valueStep;\n    this.valueBandWidth = valueBandWidth;\n    this.adjustedRange = adjustedRange;\n  }\n}","map":{"version":3,"names":["InternMap","Ordinal","defaultUnknown","normalize","array","min","Math","map","d","splice","n","sn","length","diff","Array","fill","slice","pretty","round","computeFlexBandState","options","domain","range","paddingOuter","paddingInner","flex","F","align","start","end","width","ratio","stepSum","PI","bandWidthSum","normalizedFlex","flexSum","reduce","sum","value","minBandWidth","valueBandWidth","i","bandWidth","floor","valueStep","step","finalStepSum","from","values","outerPaddingSum","offset","bandStart","prev","adjustedRange","get","computeBandState","undefined","hasFlex","_a","rangeStart","rangeEnd","deltaRange","outerTotal","innerTotal","max","_","Band","getDefaultOptions","padding","unknown","constructor","clone","getStep","x","getBandWidth","getRange","getPaddingInner","getPaddingOuter","rescale"],"sources":["scales/band.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}