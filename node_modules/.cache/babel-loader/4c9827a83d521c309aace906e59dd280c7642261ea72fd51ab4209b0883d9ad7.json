{"ast":null,"code":"import { pick } from '@antv/util';\nimport { CommonEvent } from '../../constants';\nimport { Circle } from '../../elements';\nimport { arrayDiff } from '../../utils/diff';\nimport { idOf } from '../../utils/id';\nimport { parsePoint, toPointObject } from '../../utils/point';\nimport { positionOf } from '../../utils/position';\nimport { distance } from '../../utils/vector';\nimport { BasePlugin } from '../base-plugin';\nconst defaultLensStyle = {\n  fill: '#ccc',\n  fillOpacity: 0.1,\n  lineWidth: 2,\n  stroke: '#000',\n  strokeOpacity: 0.8,\n  labelFontSize: 12\n};\nconst R_DELTA = 0.05;\nconst D_DELTA = 0.1;\n/**\n * <zh/> 鱼眼放大镜\n *\n * <en/> Fisheye Distortion\n * @remarks\n * <zh/> Fisheye 鱼眼放大镜是为 focus+context 的探索场景设计的，它能够保证在放大关注区域的同时，保证上下文以及上下文与关注中心的关系不丢失。\n *\n * <en/> Fisheye is designed for focus+context exploration, it keeps the context and the relationships between context and the focus while magnifying the focus area.\n */\nexport class Fisheye extends BasePlugin {\n  constructor(context, options) {\n    super(context, Object.assign({}, Fisheye.defaultOptions, options));\n    this.r = this.options.r;\n    this.d = this.options.d;\n    this.onCreateFisheye = event => {\n      if (this.options.trigger === 'drag' && this.isLensOn) return;\n      const origin = parsePoint(event.canvas);\n      this.onMagnify(origin);\n    };\n    this.onMagnify = origin => {\n      if (origin.some(isNaN)) return;\n      this.renderLens(origin);\n      this.renderFocusElements();\n    };\n    this.renderLens = origin => {\n      const style = Object.assign({}, defaultLensStyle, this.options.style);\n      if (!this.isLensOn) {\n        this.lens = new Circle({\n          style\n        });\n        this.canvas.appendChild(this.lens);\n      }\n      Object.assign(style, toPointObject(origin), {\n        size: this.r * 2,\n        label: this.options.showDPercent,\n        labelText: this.getDPercent()\n      });\n      this.lens.update(style);\n    };\n    this.getDPercent = () => {\n      const {\n        minD,\n        maxD\n      } = this.options;\n      const percent = Math.round((this.d - minD) / (maxD - minD) * 100);\n      return `${percent}%`;\n    };\n    this.prevMagnifiedStyleMap = new Map();\n    this.prevOriginStyleMap = new Map();\n    this.renderFocusElements = () => {\n      if (!this.isLensOn) return;\n      const {\n        graph\n      } = this.context;\n      const origin = this.lens.getCenter();\n      const molecularParam = (this.d + 1) * this.r;\n      const magnifiedStyleMap = new Map();\n      const originStyleMap = new Map();\n      const nodeData = graph.getNodeData();\n      nodeData.forEach(datum => {\n        const position = positionOf(datum);\n        const distanceToOrigin = distance(position, origin);\n        if (distanceToOrigin > this.r) return;\n        const magnifiedDistance = molecularParam * distanceToOrigin / (this.d * distanceToOrigin + this.r);\n        const [nodeX, nodeY] = position;\n        const [originX, originY] = origin;\n        const cos = (nodeX - originX) / distanceToOrigin;\n        const sin = (nodeY - originY) / distanceToOrigin;\n        const newPoint = [originX + magnifiedDistance * cos, originY + magnifiedDistance * sin];\n        const nodeId = idOf(datum);\n        const style = this.getNodeStyle(datum);\n        const originStyle = pick(graph.getElementRenderStyle(nodeId), Object.keys(style));\n        magnifiedStyleMap.set(nodeId, Object.assign(Object.assign({}, toPointObject(newPoint)), style));\n        originStyleMap.set(nodeId, Object.assign(Object.assign({}, toPointObject(position)), originStyle));\n      });\n      this.updateStyle(magnifiedStyleMap, originStyleMap);\n    };\n    this.getNodeStyle = datum => {\n      const {\n        nodeStyle\n      } = this.options;\n      return typeof nodeStyle === 'function' ? nodeStyle(datum) : nodeStyle;\n    };\n    this.updateStyle = (magnifiedStyleMap, originStyleMap) => {\n      const {\n        graph,\n        element\n      } = this.context;\n      const {\n        enter,\n        exit,\n        keep\n      } = arrayDiff(Array.from(this.prevMagnifiedStyleMap.keys()), Array.from(magnifiedStyleMap.keys()), d => d);\n      const relatedEdges = new Set();\n      const update = (nodeId, style) => {\n        const node = element.getElement(nodeId);\n        node === null || node === void 0 ? void 0 : node.update(style);\n        graph.getRelatedEdgesData(nodeId).forEach(datum => {\n          relatedEdges.add(idOf(datum));\n        });\n      };\n      [...enter, ...keep].forEach(nodeId => {\n        update(nodeId, magnifiedStyleMap.get(nodeId));\n      });\n      exit.forEach(nodeId => {\n        update(nodeId, this.prevOriginStyleMap.get(nodeId));\n        this.prevOriginStyleMap.delete(nodeId);\n      });\n      relatedEdges.forEach(edgeId => {\n        const edge = element.getElement(edgeId);\n        edge === null || edge === void 0 ? void 0 : edge.update({});\n      });\n      this.prevMagnifiedStyleMap = magnifiedStyleMap;\n      originStyleMap.forEach((style, nodeId) => {\n        if (!this.prevOriginStyleMap.has(nodeId)) {\n          this.prevOriginStyleMap.set(nodeId, style);\n        }\n      });\n    };\n    this.isWheelValid = event => {\n      if (this.options.preventDefault) event.preventDefault();\n      if (!this.isLensOn) return false;\n      const {\n        clientX,\n        clientY\n      } = event;\n      const scaleOrigin = this.context.graph.getCanvasByClient([clientX, clientY]);\n      const origin = this.lens.getCenter();\n      if (distance(scaleOrigin, origin) > this.r) return false;\n      return true;\n    };\n    this.scaleR = positive => {\n      const {\n        maxR,\n        minR\n      } = this.options;\n      const ratio = positive ? 1 / (1 - R_DELTA) : 1 - R_DELTA;\n      const canvasR = Math.min(...this.context.canvas.getSize()) / 2;\n      this.r = Math.max(minR || 0, Math.min(maxR || canvasR, this.r * ratio));\n    };\n    this.scaleD = positive => {\n      const {\n        maxD,\n        minD\n      } = this.options;\n      const newD = positive ? this.d + D_DELTA : this.d - D_DELTA;\n      this.d = Math.max(minD, Math.min(maxD, newD));\n    };\n    this.scaleRByWheel = event => {\n      if (!this.isWheelValid(event)) return;\n      const {\n        deltaX,\n        deltaY\n      } = event;\n      this.scaleR(deltaX + deltaY > 0);\n      const origin = this.lens.getCenter();\n      this.onMagnify(origin);\n    };\n    this.scaleDByWheel = event => {\n      if (!this.isWheelValid(event)) return;\n      const {\n        deltaX,\n        deltaY\n      } = event;\n      this.scaleD(deltaX + deltaY > 0);\n      const origin = this.lens.getCenter();\n      this.onMagnify(origin);\n    };\n    this.isDragValid = event => {\n      if (this.options.preventDefault) event.preventDefault();\n      if (!this.isLensOn) return false;\n      const dragOrigin = parsePoint(event.canvas);\n      const origin = this.lens.getCenter();\n      if (distance(dragOrigin, origin) > this.r) return false;\n      return true;\n    };\n    this.isLensDragging = false;\n    this.onDragStart = event => {\n      if (!this.isDragValid(event)) return;\n      this.isLensDragging = true;\n    };\n    this.onDrag = event => {\n      if (!this.isLensDragging) return;\n      const dragOrigin = parsePoint(event.canvas);\n      this.onMagnify(dragOrigin);\n    };\n    this.onDragEnd = () => {\n      this.isLensDragging = false;\n    };\n    this.scaleRByDrag = event => {\n      if (!this.isLensDragging) return;\n      const {\n        dx,\n        dy\n      } = event;\n      this.scaleR(dx - dy > 0);\n      const origin = this.lens.getCenter();\n      this.onMagnify(origin);\n    };\n    this.scaleDByDrag = event => {\n      if (!this.isLensDragging) return;\n      const {\n        dx,\n        dy\n      } = event;\n      this.scaleD(dx - dy > 0);\n      const origin = this.lens.getCenter();\n      this.onMagnify(origin);\n    };\n    this.bindEvents();\n  }\n  get canvas() {\n    return this.context.canvas.getLayer('transient');\n  }\n  get isLensOn() {\n    return this.lens && !this.lens.destroyed;\n  }\n  get graphDom() {\n    return this.context.graph.getCanvas().getContextService().getDomElement();\n  }\n  bindEvents() {\n    var _a;\n    const {\n      graph\n    } = this.context;\n    const {\n      trigger,\n      scaleRBy,\n      scaleDBy\n    } = this.options;\n    const canvas = graph.getCanvas().getLayer();\n    if (['click', 'drag'].includes(trigger)) {\n      canvas.addEventListener(CommonEvent.CLICK, this.onCreateFisheye);\n    }\n    if (trigger === 'pointermove') {\n      canvas.addEventListener(CommonEvent.POINTER_MOVE, this.onCreateFisheye);\n    }\n    if (trigger === 'drag' || scaleRBy === 'drag' || scaleDBy === 'drag') {\n      canvas.addEventListener(CommonEvent.DRAG_START, this.onDragStart);\n      canvas.addEventListener(CommonEvent.DRAG_END, this.onDragEnd);\n      const dragFunc = trigger === 'drag' ? this.onDrag : scaleRBy === 'drag' ? this.scaleRByDrag : this.scaleDByDrag;\n      canvas.addEventListener(CommonEvent.DRAG, dragFunc);\n    }\n    if (scaleRBy === 'wheel' || scaleDBy === 'wheel') {\n      const wheelFunc = scaleRBy === 'wheel' ? this.scaleRByWheel : this.scaleDByWheel;\n      (_a = this.graphDom) === null || _a === void 0 ? void 0 : _a.addEventListener(CommonEvent.WHEEL, wheelFunc, {\n        passive: false\n      });\n    }\n  }\n  unbindEvents() {\n    var _a;\n    const {\n      graph\n    } = this.context;\n    const {\n      trigger,\n      scaleRBy,\n      scaleDBy\n    } = this.options;\n    const canvas = graph.getCanvas().getLayer();\n    if (['click', 'drag'].includes(trigger)) {\n      canvas.removeEventListener(CommonEvent.CLICK, this.onCreateFisheye);\n    }\n    if (trigger === 'pointermove') {\n      canvas.removeEventListener(CommonEvent.POINTER_MOVE, this.onCreateFisheye);\n    }\n    if (trigger === 'drag' || scaleRBy === 'drag' || scaleDBy === 'drag') {\n      canvas.removeEventListener(CommonEvent.DRAG_START, this.onDragStart);\n      canvas.removeEventListener(CommonEvent.DRAG_END, this.onDragEnd);\n      const dragFunc = trigger === 'drag' ? this.onDrag : scaleRBy === 'drag' ? this.scaleRByDrag : this.scaleDByDrag;\n      canvas.removeEventListener(CommonEvent.DRAG, dragFunc);\n    }\n    if (scaleRBy === 'wheel' || scaleDBy === 'wheel') {\n      const wheelFunc = scaleRBy === 'wheel' ? this.scaleRByWheel : this.scaleDByWheel;\n      (_a = this.graphDom) === null || _a === void 0 ? void 0 : _a.removeEventListener(CommonEvent.WHEEL, wheelFunc);\n    }\n  }\n  update(options) {\n    var _a, _b;\n    this.unbindEvents();\n    super.update(options);\n    this.r = (_a = options.r) !== null && _a !== void 0 ? _a : this.r;\n    this.d = (_b = options.d) !== null && _b !== void 0 ? _b : this.d;\n    this.bindEvents();\n  }\n  destroy() {\n    var _a;\n    this.unbindEvents();\n    if (this.isLensOn) {\n      (_a = this.lens) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n    this.prevMagnifiedStyleMap.clear();\n    this.prevOriginStyleMap.clear();\n    super.destroy();\n  }\n}\nFisheye.defaultOptions = {\n  trigger: 'pointermove',\n  r: 120,\n  d: 1.5,\n  maxD: 5,\n  minD: 0,\n  showDPercent: true,\n  style: {},\n  nodeStyle: {\n    label: true\n  },\n  preventDefault: true\n};","map":{"version":3,"names":["pick","CommonEvent","Circle","arrayDiff","idOf","parsePoint","toPointObject","positionOf","distance","BasePlugin","defaultLensStyle","fill","fillOpacity","lineWidth","stroke","strokeOpacity","labelFontSize","R_DELTA","D_DELTA","Fisheye","constructor","context","options","Object","assign","defaultOptions","r","d","onCreateFisheye","event","trigger","isLensOn","origin","canvas","onMagnify","some","isNaN","renderLens","renderFocusElements","style","lens","appendChild","size","label","showDPercent","labelText","getDPercent","update","minD","maxD","percent","Math","round","prevMagnifiedStyleMap","Map","prevOriginStyleMap","graph","getCenter","molecularParam","magnifiedStyleMap","originStyleMap","nodeData","getNodeData","forEach","datum","position","distanceToOrigin","magnifiedDistance","nodeX","nodeY","originX","originY","cos","sin","newPoint","nodeId","getNodeStyle","originStyle","getElementRenderStyle","keys","set","updateStyle","nodeStyle","element","enter","exit","keep","Array","from","relatedEdges","Set","node","getElement","getRelatedEdgesData","add","get","delete","edgeId","edge","has","isWheelValid","preventDefault","clientX","clientY","scaleOrigin","getCanvasByClient","scaleR","positive","maxR","minR","ratio","canvasR","min","getSize","max","scaleD","newD","scaleRByWheel","deltaX","deltaY","scaleDByWheel","isDragValid","dragOrigin","isLensDragging","onDragStart","onDrag","onDragEnd","scaleRByDrag","dx","dy","scaleDByDrag","bindEvents","getLayer","destroyed","graphDom","getCanvas","getContextService","getDomElement","scaleRBy","scaleDBy","includes","addEventListener","CLICK","POINTER_MOVE","DRAG_START","DRAG_END","dragFunc","DRAG","wheelFunc","_a","WHEEL","passive","unbindEvents","removeEventListener","_b","destroy","clear"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/fisheye/index.ts"],"sourcesContent":["import { pick } from '@antv/util';\nimport { CommonEvent } from '../../constants';\nimport type { CircleStyleProps } from '../../elements';\nimport { Circle } from '../../elements';\nimport type { RuntimeContext } from '../../runtime/types';\nimport type { NodeData } from '../../spec';\nimport type { NodeStyle } from '../../spec/element/node';\nimport type { ID, IDragEvent, IPointerEvent, Node, Point, PointObject } from '../../types';\nimport { arrayDiff } from '../../utils/diff';\nimport { idOf } from '../../utils/id';\nimport { parsePoint, toPointObject } from '../../utils/point';\nimport { positionOf } from '../../utils/position';\nimport { distance } from '../../utils/vector';\nimport type { BasePluginOptions } from '../base-plugin';\nimport { BasePlugin } from '../base-plugin';\n\n/**\n * <zh/> 鱼眼放大镜插件配置项\n *\n * <en/> Fisheye Plugin Options\n */\nexport interface FisheyeOptions extends BasePluginOptions {\n  /**\n   * <zh/> 移动鱼眼放大镜的方式\n   * - `'pointermove'`：始终跟随鼠标移动\n   * - `'click'`：鼠标点击时移动\n   * - `'drag'`：拖拽移动\n   *\n   * <en/> The way to move the fisheye lens\n   * - `'pointermove'`: always follow the mouse movement\n   * - `'click'`: move when the mouse is clicked\n   * - `'drag'`: move by dragging\n   * @defaultValue `'pointermove'`\n   */\n  trigger?: 'pointermove' | 'drag' | 'click';\n  /**\n   * <zh/> 鱼眼放大镜半径\n   *\n   * <en/> The radius of the fisheye lens\n   * @remarks\n   * <img src=\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*unAvQqAb_NMAAAAAAAAAAAAADmJ7AQ/original\" width=\"200\" />\n   * @defaultValue 120\n   */\n  r?: number;\n  /**\n   * <zh/> 鱼眼放大镜可调整的最大半径，配合 `scaleRBy` 使用\n   *\n   * <en/> The maximum radius that the fisheye lens can be adjusted, used with `scaleRBy`\n   * @defaultValue 画布宽高的最小值的一半\n   */\n  maxR?: number;\n  /**\n   * <zh/> 鱼眼放大镜可调整的最小半径，配合 `scaleRBy` 使用\n   *\n   * <en/> The minimum radius that the fisheye lens can be adjusted, used with `scaleRBy`\n   * @defaultValue 0\n   */\n  minR?: number;\n  /**\n   * <zh/> 调整鱼眼放大镜范围半径的方式\n   * - `'wheel'`：滚轮调整\n   * - `'drag'`：拖拽调整\n   *\n   * <en/> The way to adjust the range radius of the fisheye lens\n   * - `'wheel'`: adjust by wheel\n   * - `'drag'`: adjust by drag\n   * @remarks\n   * <zh/> 如果 `trigger`、`scaleRBy` 和 `scaleDBy` 同时设置为 `'drag'`，优先级顺序为 `trigger` > `scaleRBy` > `scaleDBy`，只会为优先级最高的配置项绑定拖拽事件。同理，如果 `scaleRBy` 和 `scaleDBy` 同时设置为 `'wheel'`，只会为 `scaleRBy` 绑定滚轮事件\n   *\n   * <en/> If `trigger`, `scaleRBy`, and `scaleDBy` are set to `'drag'` at the same time, the priority order is `trigger` > `scaleRBy` > `scaleDBy`, and only the configuration item with the highest priority will be bound to the drag event. Similarly, if `scaleRBy` and `scaleDBy` are set to `'wheel'` at the same time, only `scaleRBy` will be bound to the wheel event\n   */\n  scaleRBy?: 'wheel' | 'drag';\n  /**\n   * <zh/> 畸变因子\n   *\n   * <en/> Distortion factor\n   * @remarks\n   * <img src=\"https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*4ITFR7GOl8UAAAAAAAAAAAAADmJ7AQ/original\" width=\"200\" />\n   * @defaultValue 1.5\n   */\n  d?: number;\n  /**\n   * <zh/> 鱼眼放大镜可调整的最大畸变因子，配合 `scaleDBy` 使用\n   *\n   * <en/> The maximum distortion factor that the fisheye lens can be adjusted, used with `scaleDBy`\n   * @defaultValue 5\n   */\n  maxD?: number;\n  /**\n   * <zh/> 鱼眼放大镜可调整的最小畸变因子，配合 `scaleDBy` 使用\n   *\n   * <en/> The minimum distortion factor that the fisheye lens can be adjusted, used with `scaleDBy`\n   * @defaultValue 0\n   */\n  minD?: number;\n  /**\n   * <zh/> 调整鱼眼放大镜畸变因子的方式\n   * - `'wheel'`：滚轮调整\n   * - `'drag'`：拖拽调整\n   *\n   * <en/> The way to adjust the distortion factor of the fisheye lens\n   * - `'wheel'`: adjust by wheel\n   * - `'drag'`: adjust by drag\n   */\n  scaleDBy?: 'wheel' | 'drag';\n  /**\n   * <zh/> 是否在鱼眼放大镜中显示畸变因子数值\n   *\n   * <en/> Whether to display the value of the distortion factor in the fisheye lens\n   * @defaultValue true\n   */\n  showDPercent?: boolean;\n  /**\n   * <zh/> 鱼眼放大镜样式\n   *\n   * <en/> Fisheye Lens Style\n   */\n  style?: Partial<CircleStyleProps>;\n  /**\n   * <zh/> 在鱼眼放大镜中的节点样式\n   *\n   * <en/> Node style in the fisheye lens\n   */\n  nodeStyle?: NodeStyle | ((datum: NodeData) => NodeStyle);\n  /**\n   * <zh/> 是否阻止默认事件\n   *\n   * <en/> Whether to prevent the default event\n   * @defaultValue true\n   */\n  preventDefault?: boolean;\n}\n\nconst defaultLensStyle: Exclude<CircleStyleProps, 'r'> = {\n  fill: '#ccc',\n  fillOpacity: 0.1,\n  lineWidth: 2,\n  stroke: '#000',\n  strokeOpacity: 0.8,\n  labelFontSize: 12,\n};\n\nconst R_DELTA = 0.05;\nconst D_DELTA = 0.1;\n\n/**\n * <zh/> 鱼眼放大镜\n *\n * <en/> Fisheye Distortion\n * @remarks\n * <zh/> Fisheye 鱼眼放大镜是为 focus+context 的探索场景设计的，它能够保证在放大关注区域的同时，保证上下文以及上下文与关注中心的关系不丢失。\n *\n * <en/> Fisheye is designed for focus+context exploration, it keeps the context and the relationships between context and the focus while magnifying the focus area.\n */\nexport class Fisheye extends BasePlugin<FisheyeOptions> {\n  static defaultOptions: Partial<FisheyeOptions> = {\n    trigger: 'pointermove',\n    r: 120,\n    d: 1.5,\n    maxD: 5,\n    minD: 0,\n    showDPercent: true,\n    style: {},\n    nodeStyle: { label: true },\n    preventDefault: true,\n  };\n\n  constructor(context: RuntimeContext, options: FisheyeOptions) {\n    super(context, Object.assign({}, Fisheye.defaultOptions, options));\n    this.bindEvents();\n  }\n\n  private lens!: Circle;\n\n  private r = this.options.r;\n  private d = this.options.d;\n\n  private get canvas() {\n    return this.context.canvas.getLayer('transient');\n  }\n\n  private get isLensOn() {\n    return this.lens && !this.lens.destroyed;\n  }\n\n  protected onCreateFisheye = (event: IPointerEvent) => {\n    if (this.options.trigger === 'drag' && this.isLensOn) return;\n\n    const origin = parsePoint(event.canvas as PointObject);\n    this.onMagnify(origin);\n  };\n\n  protected onMagnify = (origin: Point) => {\n    if (origin.some(isNaN)) return;\n\n    this.renderLens(origin);\n    this.renderFocusElements();\n  };\n\n  private renderLens = (origin: Point) => {\n    const style = Object.assign({}, defaultLensStyle, this.options.style);\n\n    if (!this.isLensOn) {\n      this.lens = new Circle({ style });\n      this.canvas.appendChild(this.lens);\n    }\n\n    Object.assign(style, toPointObject(origin), {\n      size: this.r * 2,\n      label: this.options.showDPercent,\n      labelText: this.getDPercent(),\n    });\n\n    this.lens.update(style);\n  };\n\n  private getDPercent = () => {\n    const { minD, maxD } = this.options as Required<FisheyeOptions>;\n    const percent = Math.round(((this.d - minD) / (maxD - minD)) * 100);\n    return `${percent}%`;\n  };\n\n  private prevMagnifiedStyleMap = new Map<ID, NodeStyle>();\n  private prevOriginStyleMap = new Map<ID, NodeStyle>();\n\n  private renderFocusElements = () => {\n    if (!this.isLensOn) return;\n\n    const { graph } = this.context;\n    const origin = this.lens.getCenter();\n\n    const molecularParam = (this.d + 1) * this.r;\n\n    const magnifiedStyleMap = new Map<ID, NodeStyle>();\n    const originStyleMap = new Map<ID, NodeStyle>();\n\n    const nodeData = graph.getNodeData();\n    nodeData.forEach((datum) => {\n      const position = positionOf(datum);\n      const distanceToOrigin = distance(position, origin);\n      if (distanceToOrigin > this.r) return;\n\n      const magnifiedDistance = (molecularParam * distanceToOrigin) / (this.d * distanceToOrigin + this.r);\n      const [nodeX, nodeY] = position;\n      const [originX, originY] = origin;\n      const cos = (nodeX - originX) / distanceToOrigin;\n      const sin = (nodeY - originY) / distanceToOrigin;\n\n      const newPoint: Point = [originX + magnifiedDistance * cos, originY + magnifiedDistance * sin];\n      const nodeId = idOf(datum);\n\n      const style = this.getNodeStyle(datum);\n      const originStyle = pick(graph.getElementRenderStyle(nodeId), Object.keys(style));\n\n      magnifiedStyleMap.set(nodeId, { ...toPointObject(newPoint), ...style });\n      originStyleMap.set(nodeId, { ...toPointObject(position), ...originStyle });\n    });\n\n    this.updateStyle(magnifiedStyleMap, originStyleMap);\n  };\n\n  private getNodeStyle = (datum: NodeData) => {\n    const { nodeStyle } = this.options;\n    return typeof nodeStyle === 'function' ? nodeStyle(datum) : nodeStyle;\n  };\n\n  private updateStyle = (magnifiedStyleMap: Map<ID, NodeStyle>, originStyleMap: Map<ID, NodeStyle>) => {\n    const { graph, element } = this.context;\n\n    const { enter, exit, keep } = arrayDiff<ID>(\n      Array.from(this.prevMagnifiedStyleMap.keys()),\n      Array.from(magnifiedStyleMap.keys()),\n      (d) => d,\n    );\n\n    const relatedEdges = new Set<ID>();\n\n    const update = (nodeId: ID, style: NodeStyle) => {\n      const node = element!.getElement(nodeId) as Node;\n      node?.update(style);\n\n      graph.getRelatedEdgesData(nodeId).forEach((datum) => {\n        relatedEdges.add(idOf(datum));\n      });\n    };\n\n    [...enter, ...keep].forEach((nodeId) => {\n      update(nodeId, magnifiedStyleMap.get(nodeId)!);\n    });\n\n    exit.forEach((nodeId) => {\n      update(nodeId, this.prevOriginStyleMap.get(nodeId)!);\n      this.prevOriginStyleMap.delete(nodeId);\n    });\n\n    relatedEdges.forEach((edgeId) => {\n      const edge = element!.getElement(edgeId);\n      edge?.update({});\n    });\n\n    this.prevMagnifiedStyleMap = magnifiedStyleMap;\n    originStyleMap.forEach((style, nodeId) => {\n      if (!this.prevOriginStyleMap.has(nodeId)) {\n        this.prevOriginStyleMap.set(nodeId, style);\n      }\n    });\n  };\n\n  private isWheelValid = (event: WheelEvent) => {\n    if (this.options.preventDefault) event.preventDefault();\n\n    if (!this.isLensOn) return false;\n\n    const { clientX, clientY } = event;\n    const scaleOrigin = this.context.graph.getCanvasByClient([clientX, clientY]);\n    const origin = this.lens.getCenter();\n    if (distance(scaleOrigin, origin) > this.r) return false;\n\n    return true;\n  };\n\n  private scaleR = (positive: boolean) => {\n    const { maxR, minR } = this.options;\n    const ratio = positive ? 1 / (1 - R_DELTA) : 1 - R_DELTA;\n    const canvasR = Math.min(...this.context.canvas.getSize()) / 2;\n    this.r = Math.max(minR || 0, Math.min(maxR || canvasR, this.r * ratio));\n  };\n\n  private scaleD = (positive: boolean) => {\n    const { maxD, minD } = this.options as Required<FisheyeOptions>;\n    const newD = positive ? this.d + D_DELTA : this.d - D_DELTA;\n    this.d = Math.max(minD, Math.min(maxD, newD));\n  };\n\n  private scaleRByWheel = (event: WheelEvent) => {\n    if (!this.isWheelValid(event)) return;\n\n    const { deltaX, deltaY } = event;\n    this.scaleR(deltaX + deltaY > 0);\n\n    const origin = this.lens.getCenter();\n    this.onMagnify(origin);\n  };\n\n  private scaleDByWheel = (event: WheelEvent) => {\n    if (!this.isWheelValid(event)) return;\n\n    const { deltaX, deltaY } = event;\n    this.scaleD(deltaX + deltaY > 0);\n\n    const origin = this.lens.getCenter();\n    this.onMagnify(origin);\n  };\n\n  private isDragValid = (event: IDragEvent) => {\n    if (this.options.preventDefault) event.preventDefault();\n\n    if (!this.isLensOn) return false;\n\n    const dragOrigin = parsePoint(event.canvas as PointObject);\n    const origin = this.lens.getCenter();\n    if (distance(dragOrigin, origin) > this.r) return false;\n\n    return true;\n  };\n\n  private isLensDragging = false;\n\n  private onDragStart = (event: IDragEvent) => {\n    if (!this.isDragValid(event)) return;\n\n    this.isLensDragging = true;\n  };\n\n  private onDrag = (event: IDragEvent) => {\n    if (!this.isLensDragging) return;\n\n    const dragOrigin = parsePoint(event.canvas as PointObject);\n    this.onMagnify(dragOrigin);\n  };\n\n  private onDragEnd = () => {\n    this.isLensDragging = false;\n  };\n\n  private scaleRByDrag = (event: IDragEvent) => {\n    if (!this.isLensDragging) return;\n\n    const { dx, dy } = event;\n    this.scaleR(dx - dy > 0);\n\n    const origin = this.lens.getCenter();\n    this.onMagnify(origin);\n  };\n\n  private scaleDByDrag = (event: IDragEvent) => {\n    if (!this.isLensDragging) return;\n\n    const { dx, dy } = event;\n    this.scaleD(dx - dy > 0);\n\n    const origin = this.lens.getCenter();\n    this.onMagnify(origin);\n  };\n\n  get graphDom() {\n    return this.context.graph.getCanvas().getContextService().getDomElement();\n  }\n\n  private bindEvents() {\n    const { graph } = this.context;\n    const { trigger, scaleRBy, scaleDBy } = this.options;\n\n    const canvas = graph.getCanvas().getLayer();\n\n    if (['click', 'drag'].includes(trigger)) {\n      canvas.addEventListener(CommonEvent.CLICK, this.onCreateFisheye);\n    }\n\n    if (trigger === 'pointermove') {\n      canvas.addEventListener(CommonEvent.POINTER_MOVE, this.onCreateFisheye);\n    }\n\n    if (trigger === 'drag' || scaleRBy === 'drag' || scaleDBy === 'drag') {\n      canvas.addEventListener(CommonEvent.DRAG_START, this.onDragStart);\n      canvas.addEventListener(CommonEvent.DRAG_END, this.onDragEnd);\n\n      const dragFunc = trigger === 'drag' ? this.onDrag : scaleRBy === 'drag' ? this.scaleRByDrag : this.scaleDByDrag;\n      canvas.addEventListener(CommonEvent.DRAG, dragFunc);\n    }\n\n    if (scaleRBy === 'wheel' || scaleDBy === 'wheel') {\n      const wheelFunc = scaleRBy === 'wheel' ? this.scaleRByWheel : this.scaleDByWheel;\n      this.graphDom?.addEventListener(CommonEvent.WHEEL, wheelFunc, { passive: false });\n    }\n  }\n\n  private unbindEvents() {\n    const { graph } = this.context;\n    const { trigger, scaleRBy, scaleDBy } = this.options;\n\n    const canvas = graph.getCanvas().getLayer();\n\n    if (['click', 'drag'].includes(trigger)) {\n      canvas.removeEventListener(CommonEvent.CLICK, this.onCreateFisheye);\n    }\n\n    if (trigger === 'pointermove') {\n      canvas.removeEventListener(CommonEvent.POINTER_MOVE, this.onCreateFisheye);\n    }\n\n    if (trigger === 'drag' || scaleRBy === 'drag' || scaleDBy === 'drag') {\n      canvas.removeEventListener(CommonEvent.DRAG_START, this.onDragStart);\n      canvas.removeEventListener(CommonEvent.DRAG_END, this.onDragEnd);\n\n      const dragFunc = trigger === 'drag' ? this.onDrag : scaleRBy === 'drag' ? this.scaleRByDrag : this.scaleDByDrag;\n      canvas.removeEventListener(CommonEvent.DRAG, dragFunc);\n    }\n\n    if (scaleRBy === 'wheel' || scaleDBy === 'wheel') {\n      const wheelFunc = scaleRBy === 'wheel' ? this.scaleRByWheel : this.scaleDByWheel;\n      this.graphDom?.removeEventListener(CommonEvent.WHEEL, wheelFunc);\n    }\n  }\n\n  public update(options: Partial<FisheyeOptions>) {\n    this.unbindEvents();\n    super.update(options);\n    this.r = options.r ?? this.r;\n    this.d = options.d ?? this.d;\n    this.bindEvents();\n  }\n\n  public destroy() {\n    this.unbindEvents();\n    if (this.isLensOn) {\n      this.lens?.destroy();\n    }\n    this.prevMagnifiedStyleMap.clear();\n    this.prevOriginStyleMap.clear();\n    super.destroy();\n  }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAASC,WAAW,QAAQ,iBAAiB;AAE7C,SAASC,MAAM,QAAQ,gBAAgB;AAKvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,IAAI,QAAQ,gBAAgB;AACrC,SAASC,UAAU,EAAEC,aAAa,QAAQ,mBAAmB;AAC7D,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,SAASC,UAAU,QAAQ,gBAAgB;AAuH3C,MAAMC,gBAAgB,GAAmC;EACvDC,IAAI,EAAE,MAAM;EACZC,WAAW,EAAE,GAAG;EAChBC,SAAS,EAAE,CAAC;EACZC,MAAM,EAAE,MAAM;EACdC,aAAa,EAAE,GAAG;EAClBC,aAAa,EAAE;CAChB;AAED,MAAMC,OAAO,GAAG,IAAI;AACpB,MAAMC,OAAO,GAAG,GAAG;AAEnB;;;;;;;;;AASA,OAAM,MAAOC,OAAQ,SAAQV,UAA0B;EAarDW,YAAYC,OAAuB,EAAEC,OAAuB;IAC1D,KAAK,CAACD,OAAO,EAAEE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,OAAO,CAACM,cAAc,EAAEH,OAAO,CAAC,CAAC;IAM5D,KAAAI,CAAC,GAAG,IAAI,CAACJ,OAAO,CAACI,CAAC;IAClB,KAAAC,CAAC,GAAG,IAAI,CAACL,OAAO,CAACK,CAAC;IAUhB,KAAAC,eAAe,GAAIC,KAAoB,IAAI;MACnD,IAAI,IAAI,CAACP,OAAO,CAACQ,OAAO,KAAK,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAE;MAEtD,MAAMC,MAAM,GAAG3B,UAAU,CAACwB,KAAK,CAACI,MAAqB,CAAC;MACtD,IAAI,CAACC,SAAS,CAACF,MAAM,CAAC;IACxB,CAAC;IAES,KAAAE,SAAS,GAAIF,MAAa,IAAI;MACtC,IAAIA,MAAM,CAACG,IAAI,CAACC,KAAK,CAAC,EAAE;MAExB,IAAI,CAACC,UAAU,CAACL,MAAM,CAAC;MACvB,IAAI,CAACM,mBAAmB,EAAE;IAC5B,CAAC;IAEO,KAAAD,UAAU,GAAIL,MAAa,IAAI;MACrC,MAAMO,KAAK,GAAGhB,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEd,gBAAgB,EAAE,IAAI,CAACY,OAAO,CAACiB,KAAK,CAAC;MAErE,IAAI,CAAC,IAAI,CAACR,QAAQ,EAAE;QAClB,IAAI,CAACS,IAAI,GAAG,IAAItC,MAAM,CAAC;UAAEqC;QAAK,CAAE,CAAC;QACjC,IAAI,CAACN,MAAM,CAACQ,WAAW,CAAC,IAAI,CAACD,IAAI,CAAC;MACpC;MAEAjB,MAAM,CAACC,MAAM,CAACe,KAAK,EAAEjC,aAAa,CAAC0B,MAAM,CAAC,EAAE;QAC1CU,IAAI,EAAE,IAAI,CAAChB,CAAC,GAAG,CAAC;QAChBiB,KAAK,EAAE,IAAI,CAACrB,OAAO,CAACsB,YAAY;QAChCC,SAAS,EAAE,IAAI,CAACC,WAAW;OAC5B,CAAC;MAEF,IAAI,CAACN,IAAI,CAACO,MAAM,CAACR,KAAK,CAAC;IACzB,CAAC;IAEO,KAAAO,WAAW,GAAG,MAAK;MACzB,MAAM;QAAEE,IAAI;QAAEC;MAAI,CAAE,GAAG,IAAI,CAAC3B,OAAmC;MAC/D,MAAM4B,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAE,CAAC,IAAI,CAACzB,CAAC,GAAGqB,IAAI,KAAKC,IAAI,GAAGD,IAAI,CAAC,GAAI,GAAG,CAAC;MACnE,OAAO,GAAGE,OAAO,GAAG;IACtB,CAAC;IAEO,KAAAG,qBAAqB,GAAG,IAAIC,GAAG,EAAiB;IAChD,KAAAC,kBAAkB,GAAG,IAAID,GAAG,EAAiB;IAE7C,KAAAhB,mBAAmB,GAAG,MAAK;MACjC,IAAI,CAAC,IAAI,CAACP,QAAQ,EAAE;MAEpB,MAAM;QAAEyB;MAAK,CAAE,GAAG,IAAI,CAACnC,OAAO;MAC9B,MAAMW,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MAEpC,MAAMC,cAAc,GAAG,CAAC,IAAI,CAAC/B,CAAC,GAAG,CAAC,IAAI,IAAI,CAACD,CAAC;MAE5C,MAAMiC,iBAAiB,GAAG,IAAIL,GAAG,EAAiB;MAClD,MAAMM,cAAc,GAAG,IAAIN,GAAG,EAAiB;MAE/C,MAAMO,QAAQ,GAAGL,KAAK,CAACM,WAAW,EAAE;MACpCD,QAAQ,CAACE,OAAO,CAAEC,KAAK,IAAI;QACzB,MAAMC,QAAQ,GAAG1D,UAAU,CAACyD,KAAK,CAAC;QAClC,MAAME,gBAAgB,GAAG1D,QAAQ,CAACyD,QAAQ,EAAEjC,MAAM,CAAC;QACnD,IAAIkC,gBAAgB,GAAG,IAAI,CAACxC,CAAC,EAAE;QAE/B,MAAMyC,iBAAiB,GAAIT,cAAc,GAAGQ,gBAAgB,IAAK,IAAI,CAACvC,CAAC,GAAGuC,gBAAgB,GAAG,IAAI,CAACxC,CAAC,CAAC;QACpG,MAAM,CAAC0C,KAAK,EAAEC,KAAK,CAAC,GAAGJ,QAAQ;QAC/B,MAAM,CAACK,OAAO,EAAEC,OAAO,CAAC,GAAGvC,MAAM;QACjC,MAAMwC,GAAG,GAAG,CAACJ,KAAK,GAAGE,OAAO,IAAIJ,gBAAgB;QAChD,MAAMO,GAAG,GAAG,CAACJ,KAAK,GAAGE,OAAO,IAAIL,gBAAgB;QAEhD,MAAMQ,QAAQ,GAAU,CAACJ,OAAO,GAAGH,iBAAiB,GAAGK,GAAG,EAAED,OAAO,GAAGJ,iBAAiB,GAAGM,GAAG,CAAC;QAC9F,MAAME,MAAM,GAAGvE,IAAI,CAAC4D,KAAK,CAAC;QAE1B,MAAMzB,KAAK,GAAG,IAAI,CAACqC,YAAY,CAACZ,KAAK,CAAC;QACtC,MAAMa,WAAW,GAAG7E,IAAI,CAACwD,KAAK,CAACsB,qBAAqB,CAACH,MAAM,CAAC,EAAEpD,MAAM,CAACwD,IAAI,CAACxC,KAAK,CAAC,CAAC;QAEjFoB,iBAAiB,CAACqB,GAAG,CAACL,MAAM,EAAApD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOlB,aAAa,CAACoE,QAAQ,CAAC,GAAKnC,KAAK,EAAG;QACvEqB,cAAc,CAACoB,GAAG,CAACL,MAAM,EAAApD,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOlB,aAAa,CAAC2D,QAAQ,CAAC,GAAKY,WAAW,EAAG;MAC5E,CAAC,CAAC;MAEF,IAAI,CAACI,WAAW,CAACtB,iBAAiB,EAAEC,cAAc,CAAC;IACrD,CAAC;IAEO,KAAAgB,YAAY,GAAIZ,KAAe,IAAI;MACzC,MAAM;QAAEkB;MAAS,CAAE,GAAG,IAAI,CAAC5D,OAAO;MAClC,OAAO,OAAO4D,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAClB,KAAK,CAAC,GAAGkB,SAAS;IACvE,CAAC;IAEO,KAAAD,WAAW,GAAG,CAACtB,iBAAqC,EAAEC,cAAkC,KAAI;MAClG,MAAM;QAAEJ,KAAK;QAAE2B;MAAO,CAAE,GAAG,IAAI,CAAC9D,OAAO;MAEvC,MAAM;QAAE+D,KAAK;QAAEC,IAAI;QAAEC;MAAI,CAAE,GAAGnF,SAAS,CACrCoF,KAAK,CAACC,IAAI,CAAC,IAAI,CAACnC,qBAAqB,CAAC0B,IAAI,EAAE,CAAC,EAC7CQ,KAAK,CAACC,IAAI,CAAC7B,iBAAiB,CAACoB,IAAI,EAAE,CAAC,EACnCpD,CAAC,IAAKA,CAAC,CACT;MAED,MAAM8D,YAAY,GAAG,IAAIC,GAAG,EAAM;MAElC,MAAM3C,MAAM,GAAGA,CAAC4B,MAAU,EAAEpC,KAAgB,KAAI;QAC9C,MAAMoD,IAAI,GAAGR,OAAQ,CAACS,UAAU,CAACjB,MAAM,CAAS;QAChDgB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE5C,MAAM,CAACR,KAAK,CAAC;QAEnBiB,KAAK,CAACqC,mBAAmB,CAAClB,MAAM,CAAC,CAACZ,OAAO,CAAEC,KAAK,IAAI;UAClDyB,YAAY,CAACK,GAAG,CAAC1F,IAAI,CAAC4D,KAAK,CAAC,CAAC;QAC/B,CAAC,CAAC;MACJ,CAAC;MAED,CAAC,GAAGoB,KAAK,EAAE,GAAGE,IAAI,CAAC,CAACvB,OAAO,CAAEY,MAAM,IAAI;QACrC5B,MAAM,CAAC4B,MAAM,EAAEhB,iBAAiB,CAACoC,GAAG,CAACpB,MAAM,CAAE,CAAC;MAChD,CAAC,CAAC;MAEFU,IAAI,CAACtB,OAAO,CAAEY,MAAM,IAAI;QACtB5B,MAAM,CAAC4B,MAAM,EAAE,IAAI,CAACpB,kBAAkB,CAACwC,GAAG,CAACpB,MAAM,CAAE,CAAC;QACpD,IAAI,CAACpB,kBAAkB,CAACyC,MAAM,CAACrB,MAAM,CAAC;MACxC,CAAC,CAAC;MAEFc,YAAY,CAAC1B,OAAO,CAAEkC,MAAM,IAAI;QAC9B,MAAMC,IAAI,GAAGf,OAAQ,CAACS,UAAU,CAACK,MAAM,CAAC;QACxCC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEnD,MAAM,CAAC,EAAE,CAAC;MAClB,CAAC,CAAC;MAEF,IAAI,CAACM,qBAAqB,GAAGM,iBAAiB;MAC9CC,cAAc,CAACG,OAAO,CAAC,CAACxB,KAAK,EAAEoC,MAAM,KAAI;QACvC,IAAI,CAAC,IAAI,CAACpB,kBAAkB,CAAC4C,GAAG,CAACxB,MAAM,CAAC,EAAE;UACxC,IAAI,CAACpB,kBAAkB,CAACyB,GAAG,CAACL,MAAM,EAAEpC,KAAK,CAAC;QAC5C;MACF,CAAC,CAAC;IACJ,CAAC;IAEO,KAAA6D,YAAY,GAAIvE,KAAiB,IAAI;MAC3C,IAAI,IAAI,CAACP,OAAO,CAAC+E,cAAc,EAAExE,KAAK,CAACwE,cAAc,EAAE;MAEvD,IAAI,CAAC,IAAI,CAACtE,QAAQ,EAAE,OAAO,KAAK;MAEhC,MAAM;QAAEuE,OAAO;QAAEC;MAAO,CAAE,GAAG1E,KAAK;MAClC,MAAM2E,WAAW,GAAG,IAAI,CAACnF,OAAO,CAACmC,KAAK,CAACiD,iBAAiB,CAAC,CAACH,OAAO,EAAEC,OAAO,CAAC,CAAC;MAC5E,MAAMvE,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAIjD,QAAQ,CAACgG,WAAW,EAAExE,MAAM,CAAC,GAAG,IAAI,CAACN,CAAC,EAAE,OAAO,KAAK;MAExD,OAAO,IAAI;IACb,CAAC;IAEO,KAAAgF,MAAM,GAAIC,QAAiB,IAAI;MACrC,MAAM;QAAEC,IAAI;QAAEC;MAAI,CAAE,GAAG,IAAI,CAACvF,OAAO;MACnC,MAAMwF,KAAK,GAAGH,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG1F,OAAO,CAAC,GAAG,CAAC,GAAGA,OAAO;MACxD,MAAM8F,OAAO,GAAG5D,IAAI,CAAC6D,GAAG,CAAC,GAAG,IAAI,CAAC3F,OAAO,CAACY,MAAM,CAACgF,OAAO,EAAE,CAAC,GAAG,CAAC;MAC9D,IAAI,CAACvF,CAAC,GAAGyB,IAAI,CAAC+D,GAAG,CAACL,IAAI,IAAI,CAAC,EAAE1D,IAAI,CAAC6D,GAAG,CAACJ,IAAI,IAAIG,OAAO,EAAE,IAAI,CAACrF,CAAC,GAAGoF,KAAK,CAAC,CAAC;IACzE,CAAC;IAEO,KAAAK,MAAM,GAAIR,QAAiB,IAAI;MACrC,MAAM;QAAE1D,IAAI;QAAED;MAAI,CAAE,GAAG,IAAI,CAAC1B,OAAmC;MAC/D,MAAM8F,IAAI,GAAGT,QAAQ,GAAG,IAAI,CAAChF,CAAC,GAAGT,OAAO,GAAG,IAAI,CAACS,CAAC,GAAGT,OAAO;MAC3D,IAAI,CAACS,CAAC,GAAGwB,IAAI,CAAC+D,GAAG,CAAClE,IAAI,EAAEG,IAAI,CAAC6D,GAAG,CAAC/D,IAAI,EAAEmE,IAAI,CAAC,CAAC;IAC/C,CAAC;IAEO,KAAAC,aAAa,GAAIxF,KAAiB,IAAI;MAC5C,IAAI,CAAC,IAAI,CAACuE,YAAY,CAACvE,KAAK,CAAC,EAAE;MAE/B,MAAM;QAAEyF,MAAM;QAAEC;MAAM,CAAE,GAAG1F,KAAK;MAChC,IAAI,CAAC6E,MAAM,CAACY,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC;MAEhC,MAAMvF,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAI,CAACvB,SAAS,CAACF,MAAM,CAAC;IACxB,CAAC;IAEO,KAAAwF,aAAa,GAAI3F,KAAiB,IAAI;MAC5C,IAAI,CAAC,IAAI,CAACuE,YAAY,CAACvE,KAAK,CAAC,EAAE;MAE/B,MAAM;QAAEyF,MAAM;QAAEC;MAAM,CAAE,GAAG1F,KAAK;MAChC,IAAI,CAACsF,MAAM,CAACG,MAAM,GAAGC,MAAM,GAAG,CAAC,CAAC;MAEhC,MAAMvF,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAI,CAACvB,SAAS,CAACF,MAAM,CAAC;IACxB,CAAC;IAEO,KAAAyF,WAAW,GAAI5F,KAAiB,IAAI;MAC1C,IAAI,IAAI,CAACP,OAAO,CAAC+E,cAAc,EAAExE,KAAK,CAACwE,cAAc,EAAE;MAEvD,IAAI,CAAC,IAAI,CAACtE,QAAQ,EAAE,OAAO,KAAK;MAEhC,MAAM2F,UAAU,GAAGrH,UAAU,CAACwB,KAAK,CAACI,MAAqB,CAAC;MAC1D,MAAMD,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAIjD,QAAQ,CAACkH,UAAU,EAAE1F,MAAM,CAAC,GAAG,IAAI,CAACN,CAAC,EAAE,OAAO,KAAK;MAEvD,OAAO,IAAI;IACb,CAAC;IAEO,KAAAiG,cAAc,GAAG,KAAK;IAEtB,KAAAC,WAAW,GAAI/F,KAAiB,IAAI;MAC1C,IAAI,CAAC,IAAI,CAAC4F,WAAW,CAAC5F,KAAK,CAAC,EAAE;MAE9B,IAAI,CAAC8F,cAAc,GAAG,IAAI;IAC5B,CAAC;IAEO,KAAAE,MAAM,GAAIhG,KAAiB,IAAI;MACrC,IAAI,CAAC,IAAI,CAAC8F,cAAc,EAAE;MAE1B,MAAMD,UAAU,GAAGrH,UAAU,CAACwB,KAAK,CAACI,MAAqB,CAAC;MAC1D,IAAI,CAACC,SAAS,CAACwF,UAAU,CAAC;IAC5B,CAAC;IAEO,KAAAI,SAAS,GAAG,MAAK;MACvB,IAAI,CAACH,cAAc,GAAG,KAAK;IAC7B,CAAC;IAEO,KAAAI,YAAY,GAAIlG,KAAiB,IAAI;MAC3C,IAAI,CAAC,IAAI,CAAC8F,cAAc,EAAE;MAE1B,MAAM;QAAEK,EAAE;QAAEC;MAAE,CAAE,GAAGpG,KAAK;MACxB,IAAI,CAAC6E,MAAM,CAACsB,EAAE,GAAGC,EAAE,GAAG,CAAC,CAAC;MAExB,MAAMjG,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAI,CAACvB,SAAS,CAACF,MAAM,CAAC;IACxB,CAAC;IAEO,KAAAkG,YAAY,GAAIrG,KAAiB,IAAI;MAC3C,IAAI,CAAC,IAAI,CAAC8F,cAAc,EAAE;MAE1B,MAAM;QAAEK,EAAE;QAAEC;MAAE,CAAE,GAAGpG,KAAK;MACxB,IAAI,CAACsF,MAAM,CAACa,EAAE,GAAGC,EAAE,GAAG,CAAC,CAAC;MAExB,MAAMjG,MAAM,GAAG,IAAI,CAACQ,IAAI,CAACiB,SAAS,EAAE;MACpC,IAAI,CAACvB,SAAS,CAACF,MAAM,CAAC;IACxB,CAAC;IA1OC,IAAI,CAACmG,UAAU,EAAE;EACnB;EAOA,IAAYlG,MAAMA,CAAA;IAChB,OAAO,IAAI,CAACZ,OAAO,CAACY,MAAM,CAACmG,QAAQ,CAAC,WAAW,CAAC;EAClD;EAEA,IAAYrG,QAAQA,CAAA;IAClB,OAAO,IAAI,CAACS,IAAI,IAAI,CAAC,IAAI,CAACA,IAAI,CAAC6F,SAAS;EAC1C;EA8NA,IAAIC,QAAQA,CAAA;IACV,OAAO,IAAI,CAACjH,OAAO,CAACmC,KAAK,CAAC+E,SAAS,EAAE,CAACC,iBAAiB,EAAE,CAACC,aAAa,EAAE;EAC3E;EAEQN,UAAUA,CAAA;;IAChB,MAAM;MAAE3E;IAAK,CAAE,GAAG,IAAI,CAACnC,OAAO;IAC9B,MAAM;MAAES,OAAO;MAAE4G,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACrH,OAAO;IAEpD,MAAMW,MAAM,GAAGuB,KAAK,CAAC+E,SAAS,EAAE,CAACH,QAAQ,EAAE;IAE3C,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACQ,QAAQ,CAAC9G,OAAO,CAAC,EAAE;MACvCG,MAAM,CAAC4G,gBAAgB,CAAC5I,WAAW,CAAC6I,KAAK,EAAE,IAAI,CAAClH,eAAe,CAAC;IAClE;IAEA,IAAIE,OAAO,KAAK,aAAa,EAAE;MAC7BG,MAAM,CAAC4G,gBAAgB,CAAC5I,WAAW,CAAC8I,YAAY,EAAE,IAAI,CAACnH,eAAe,CAAC;IACzE;IAEA,IAAIE,OAAO,KAAK,MAAM,IAAI4G,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,MAAM,EAAE;MACpE1G,MAAM,CAAC4G,gBAAgB,CAAC5I,WAAW,CAAC+I,UAAU,EAAE,IAAI,CAACpB,WAAW,CAAC;MACjE3F,MAAM,CAAC4G,gBAAgB,CAAC5I,WAAW,CAACgJ,QAAQ,EAAE,IAAI,CAACnB,SAAS,CAAC;MAE7D,MAAMoB,QAAQ,GAAGpH,OAAO,KAAK,MAAM,GAAG,IAAI,CAAC+F,MAAM,GAAGa,QAAQ,KAAK,MAAM,GAAG,IAAI,CAACX,YAAY,GAAG,IAAI,CAACG,YAAY;MAC/GjG,MAAM,CAAC4G,gBAAgB,CAAC5I,WAAW,CAACkJ,IAAI,EAAED,QAAQ,CAAC;IACrD;IAEA,IAAIR,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,MAAMS,SAAS,GAAGV,QAAQ,KAAK,OAAO,GAAG,IAAI,CAACrB,aAAa,GAAG,IAAI,CAACG,aAAa;MAChF,CAAA6B,EAAA,OAAI,CAACf,QAAQ,cAAAe,EAAA,uBAAAA,EAAA,CAAER,gBAAgB,CAAC5I,WAAW,CAACqJ,KAAK,EAAEF,SAAS,EAAE;QAAEG,OAAO,EAAE;MAAK,CAAE,CAAC;IACnF;EACF;EAEQC,YAAYA,CAAA;;IAClB,MAAM;MAAEhG;IAAK,CAAE,GAAG,IAAI,CAACnC,OAAO;IAC9B,MAAM;MAAES,OAAO;MAAE4G,QAAQ;MAAEC;IAAQ,CAAE,GAAG,IAAI,CAACrH,OAAO;IAEpD,MAAMW,MAAM,GAAGuB,KAAK,CAAC+E,SAAS,EAAE,CAACH,QAAQ,EAAE;IAE3C,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAACQ,QAAQ,CAAC9G,OAAO,CAAC,EAAE;MACvCG,MAAM,CAACwH,mBAAmB,CAACxJ,WAAW,CAAC6I,KAAK,EAAE,IAAI,CAAClH,eAAe,CAAC;IACrE;IAEA,IAAIE,OAAO,KAAK,aAAa,EAAE;MAC7BG,MAAM,CAACwH,mBAAmB,CAACxJ,WAAW,CAAC8I,YAAY,EAAE,IAAI,CAACnH,eAAe,CAAC;IAC5E;IAEA,IAAIE,OAAO,KAAK,MAAM,IAAI4G,QAAQ,KAAK,MAAM,IAAIC,QAAQ,KAAK,MAAM,EAAE;MACpE1G,MAAM,CAACwH,mBAAmB,CAACxJ,WAAW,CAAC+I,UAAU,EAAE,IAAI,CAACpB,WAAW,CAAC;MACpE3F,MAAM,CAACwH,mBAAmB,CAACxJ,WAAW,CAACgJ,QAAQ,EAAE,IAAI,CAACnB,SAAS,CAAC;MAEhE,MAAMoB,QAAQ,GAAGpH,OAAO,KAAK,MAAM,GAAG,IAAI,CAAC+F,MAAM,GAAGa,QAAQ,KAAK,MAAM,GAAG,IAAI,CAACX,YAAY,GAAG,IAAI,CAACG,YAAY;MAC/GjG,MAAM,CAACwH,mBAAmB,CAACxJ,WAAW,CAACkJ,IAAI,EAAED,QAAQ,CAAC;IACxD;IAEA,IAAIR,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,OAAO,EAAE;MAChD,MAAMS,SAAS,GAAGV,QAAQ,KAAK,OAAO,GAAG,IAAI,CAACrB,aAAa,GAAG,IAAI,CAACG,aAAa;MAChF,CAAA6B,EAAA,OAAI,CAACf,QAAQ,cAAAe,EAAA,uBAAAA,EAAA,CAAEI,mBAAmB,CAACxJ,WAAW,CAACqJ,KAAK,EAAEF,SAAS,CAAC;IAClE;EACF;EAEOrG,MAAMA,CAACzB,OAAgC;;IAC5C,IAAI,CAACkI,YAAY,EAAE;IACnB,KAAK,CAACzG,MAAM,CAACzB,OAAO,CAAC;IACrB,IAAI,CAACI,CAAC,GAAG,CAAA2H,EAAA,GAAA/H,OAAO,CAACI,CAAC,cAAA2H,EAAA,cAAAA,EAAA,GAAI,IAAI,CAAC3H,CAAC;IAC5B,IAAI,CAACC,CAAC,GAAG,CAAA+H,EAAA,GAAApI,OAAO,CAACK,CAAC,cAAA+H,EAAA,cAAAA,EAAA,GAAI,IAAI,CAAC/H,CAAC;IAC5B,IAAI,CAACwG,UAAU,EAAE;EACnB;EAEOwB,OAAOA,CAAA;;IACZ,IAAI,CAACH,YAAY,EAAE;IACnB,IAAI,IAAI,CAACzH,QAAQ,EAAE;MACjB,CAAAsH,EAAA,OAAI,CAAC7G,IAAI,cAAA6G,EAAA,uBAAAA,EAAA,CAAEM,OAAO,EAAE;IACtB;IACA,IAAI,CAACtG,qBAAqB,CAACuG,KAAK,EAAE;IAClC,IAAI,CAACrG,kBAAkB,CAACqG,KAAK,EAAE;IAC/B,KAAK,CAACD,OAAO,EAAE;EACjB;;AAtUOxI,OAAA,CAAAM,cAAc,GAA4B;EAC/CK,OAAO,EAAE,aAAa;EACtBJ,CAAC,EAAE,GAAG;EACNC,CAAC,EAAE,GAAG;EACNsB,IAAI,EAAE,CAAC;EACPD,IAAI,EAAE,CAAC;EACPJ,YAAY,EAAE,IAAI;EAClBL,KAAK,EAAE,EAAE;EACT2C,SAAS,EAAE;IAAEvC,KAAK,EAAE;EAAI,CAAE;EAC1B0D,cAAc,EAAE;CACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}