{"ast":null,"code":"import { identity } from '@antv/util';\nimport { format } from 'fecha';\nimport { Continuous } from './continuous';\nimport { d3Time } from '../tick-methods/d3-time';\nimport { d3TimeNice, createInterpolateNumber, localIntervalMap, utcIntervalMap, chooseNiceTimeMask } from '../utils';\nfunction offset(date) {\n  const minuteOffset = date.getTimezoneOffset();\n  const d = new Date(date);\n  d.setMinutes(d.getMinutes() + minuteOffset, d.getSeconds(), d.getMilliseconds());\n  return d;\n}\nexport class Time extends Continuous {\n  getDefaultOptions() {\n    return {\n      domain: [new Date(2000, 0, 1), new Date(2000, 0, 2)],\n      range: [0, 1],\n      nice: false,\n      tickCount: 5,\n      tickInterval: undefined,\n      unknown: undefined,\n      clamp: false,\n      tickMethod: d3Time,\n      interpolate: createInterpolateNumber,\n      mask: undefined,\n      utc: false\n    };\n  }\n  chooseTransforms() {\n    const transform = x => +x;\n    const untransform = x => new Date(x);\n    return [transform, untransform];\n  }\n  chooseNice() {\n    return d3TimeNice;\n  }\n  getTickMethodOptions() {\n    const {\n      domain,\n      tickCount,\n      tickInterval,\n      utc\n    } = this.options;\n    const min = domain[0];\n    const max = domain[domain.length - 1];\n    return [min, max, tickCount, tickInterval, utc];\n  }\n  getFormatter() {\n    const {\n      mask,\n      utc\n    } = this.options;\n    const maskMap = utc ? utcIntervalMap : localIntervalMap;\n    const time = utc ? offset : identity; // fecha 不支持 utc 格式化，所以需要设置一个偏移\n    return d => format(time(d), mask || chooseNiceTimeMask(d, maskMap));\n  }\n  clone() {\n    return new Time(this.options);\n  }\n}","map":{"version":3,"names":["identity","format","Continuous","d3Time","d3TimeNice","createInterpolateNumber","localIntervalMap","utcIntervalMap","chooseNiceTimeMask","offset","date","minuteOffset","getTimezoneOffset","d","Date","setMinutes","getMinutes","getSeconds","getMilliseconds","Time","getDefaultOptions","domain","range","nice","tickCount","tickInterval","undefined","unknown","clamp","tickMethod","interpolate","mask","utc","chooseTransforms","transform","x","untransform","chooseNice","getTickMethodOptions","options","min","max","length","getFormatter","maskMap","time","clone"],"sources":["scales/time.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,SAASC,MAAM,QAAQ,OAAO;AAC9B,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,MAAM,QAAQ,yBAAyB;AAChD,SAASC,UAAU,EAAEC,uBAAuB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,kBAAkB,QAAQ,UAAU;AAEpH,SAASC,MAAMA,CAACC,IAAU;EACxB,MAAMC,YAAY,GAAGD,IAAI,CAACE,iBAAiB,EAAE;EAC7C,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACJ,IAAI,CAAC;EACxBG,CAAC,CAACE,UAAU,CAACF,CAAC,CAACG,UAAU,EAAE,GAAGL,YAAY,EAAEE,CAAC,CAACI,UAAU,EAAE,EAAEJ,CAAC,CAACK,eAAe,EAAE,CAAC;EAChF,OAAOL,CAAC;AACV;AAEA,OAAM,MAAOM,IAAK,SAAQjB,UAAuB;EACrCkB,iBAAiBA,CAAA;IACzB,OAAO;MACLC,MAAM,EAAE,CAAC,IAAIP,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAIA,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACpDQ,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACbC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,CAAC;MACZC,YAAY,EAAEC,SAAS;MACvBC,OAAO,EAAED,SAAS;MAClBE,KAAK,EAAE,KAAK;MACZC,UAAU,EAAE1B,MAAM;MAClB2B,WAAW,EAAEzB,uBAAuB;MACpC0B,IAAI,EAAEL,SAAS;MACfM,GAAG,EAAE;KACN;EACH;EAEUC,gBAAgBA,CAAA;IACxB,MAAMC,SAAS,GAAIC,CAAO,IAAK,CAACA,CAAC;IACjC,MAAMC,WAAW,GAAID,CAAS,IAAK,IAAIrB,IAAI,CAACqB,CAAC,CAAC;IAC9C,OAAO,CAACD,SAAS,EAAEE,WAAW,CAAC;EACjC;EAEUC,UAAUA,CAAA;IAClB,OAAOjC,UAAU;EACnB;EAEUkC,oBAAoBA,CAAA;IAC5B,MAAM;MAAEjB,MAAM;MAAEG,SAAS;MAAEC,YAAY;MAAEO;IAAG,CAAE,GAAG,IAAI,CAACO,OAAO;IAC7D,MAAMC,GAAG,GAAGnB,MAAM,CAAC,CAAC,CAAC;IACrB,MAAMoB,GAAG,GAAGpB,MAAM,CAACA,MAAM,CAACqB,MAAM,GAAG,CAAC,CAAC;IACrC,OAAO,CAACF,GAAG,EAAEC,GAAG,EAAEjB,SAAS,EAAEC,YAAY,EAAEO,GAAG,CAAC;EACjD;EAEOW,YAAYA,CAAA;IACjB,MAAM;MAAEZ,IAAI;MAAEC;IAAG,CAAE,GAAG,IAAI,CAACO,OAAO;IAClC,MAAMK,OAAO,GAAGZ,GAAG,GAAGzB,cAAc,GAAGD,gBAAgB;IACvD,MAAMuC,IAAI,GAAGb,GAAG,GAAGvB,MAAM,GAAGT,QAAQ,CAAC,CAAC;IACtC,OAAQa,CAAO,IAAKZ,MAAM,CAAC4C,IAAI,CAAChC,CAAC,CAAC,EAAEkB,IAAI,IAAIvB,kBAAkB,CAACK,CAAC,EAAE+B,OAAO,CAAC,CAAC;EAC7E;EAEOE,KAAKA,CAAA;IACV,OAAO,IAAI3B,IAAI,CAAC,IAAI,CAACoB,OAAO,CAAC;EAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}