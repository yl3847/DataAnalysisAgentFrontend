{"ast":null,"code":"import { isEmpty } from 'lodash';\nexport const DEFAULT_OPTIONS = {\n  node: {\n    type: 'circle',\n    style: {\n      labelText: d => d.id\n    }\n  }\n};\nexport const getDendrogramOptions = ({\n  direction,\n  compact\n}) => {\n  const isLeafNode = d => isEmpty(d.children);\n  const layoutType = compact ? 'compact-box' : 'dendrogram';\n  if (direction === 'vertical') {\n    return {\n      node: {\n        style: {\n          labelBackground: true,\n          labelPlacement: 'right',\n          labelTransform: d => isLeafNode(d) ? 'rotate(90deg) translate(18px)' : 'translate(18px)',\n          ports: [{\n            placement: 'top'\n          }, {\n            placement: 'bottom'\n          }]\n        }\n      },\n      edge: {\n        type: 'cubic-vertical'\n      },\n      layout: {\n        type: layoutType,\n        direction: 'TB',\n        nodeSep: 40,\n        rankSep: 140,\n        getVGap: () => 80,\n        getHGap: () => 20\n      }\n    };\n  } else if (direction === 'horizontal') {\n    return {\n      node: {\n        style: {\n          labelBackground: true,\n          labelPlacement: d => isLeafNode(d) ? 'right' : 'left',\n          ports: [{\n            placement: 'left'\n          }, {\n            placement: 'right'\n          }]\n        }\n      },\n      edge: {\n        type: 'cubic-horizontal'\n      },\n      layout: {\n        type: layoutType,\n        direction: 'LR',\n        nodeSep: 40,\n        rankSep: 200,\n        getVGap: () => 5,\n        getHGap: () => 100\n      }\n    };\n  } else {\n    return {\n      node: {\n        style: {\n          labelBackground: true\n        }\n      },\n      edge: {\n        type: 'cubic-radial'\n      },\n      layout: {\n        type: layoutType,\n        direction: 'RL',\n        radial: true,\n        nodeSep: 40,\n        rankSep: 200,\n        getVGap: () => 30,\n        getHGap: () => 60\n      },\n      transforms: prev => [...prev, 'place-radial-labels']\n    };\n  }\n};","map":{"version":3,"names":["isEmpty","DEFAULT_OPTIONS","node","type","style","labelText","d","id","getDendrogramOptions","direction","compact","isLeafNode","children","layoutType","labelBackground","labelPlacement","labelTransform","ports","placement","edge","layout","nodeSep","rankSep","getVGap","getHGap","radial","transforms","prev"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/components/dendrogram/options.js"],"sourcesContent":["import { isEmpty } from 'lodash';\nexport const DEFAULT_OPTIONS = {\n    node: {\n        type: 'circle',\n        style: {\n            labelText: (d) => d.id,\n        },\n    },\n};\nexport const getDendrogramOptions = ({ direction, compact, }) => {\n    const isLeafNode = (d) => isEmpty(d.children);\n    const layoutType = compact ? 'compact-box' : 'dendrogram';\n    if (direction === 'vertical') {\n        return {\n            node: {\n                style: {\n                    labelBackground: true,\n                    labelPlacement: 'right',\n                    labelTransform: (d) => (isLeafNode(d) ? 'rotate(90deg) translate(18px)' : 'translate(18px)'),\n                    ports: [{ placement: 'top' }, { placement: 'bottom' }],\n                },\n            },\n            edge: { type: 'cubic-vertical' },\n            layout: { type: layoutType, direction: 'TB', nodeSep: 40, rankSep: 140, getVGap: () => 80, getHGap: () => 20 },\n        };\n    }\n    else if (direction === 'horizontal') {\n        return {\n            node: {\n                style: {\n                    labelBackground: true,\n                    labelPlacement: (d) => (isLeafNode(d) ? 'right' : 'left'),\n                    ports: [{ placement: 'left' }, { placement: 'right' }],\n                },\n            },\n            edge: { type: 'cubic-horizontal' },\n            layout: { type: layoutType, direction: 'LR', nodeSep: 40, rankSep: 200, getVGap: () => 5, getHGap: () => 100 },\n        };\n    }\n    else {\n        return {\n            node: { style: { labelBackground: true } },\n            edge: { type: 'cubic-radial' },\n            layout: {\n                type: layoutType,\n                direction: 'RL',\n                radial: true,\n                nodeSep: 40,\n                rankSep: 200,\n                getVGap: () => 30,\n                getHGap: () => 60,\n            },\n            transforms: (prev) => [...prev, 'place-radial-labels'],\n        };\n    }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,OAAO,MAAMC,eAAe,GAAG;EAC3BC,IAAI,EAAE;IACFC,IAAI,EAAE,QAAQ;IACdC,KAAK,EAAE;MACHC,SAAS,EAAGC,CAAC,IAAKA,CAAC,CAACC;IACxB;EACJ;AACJ,CAAC;AACD,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAC7D,MAAMC,UAAU,GAAIL,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACM,QAAQ,CAAC;EAC7C,MAAMC,UAAU,GAAGH,OAAO,GAAG,aAAa,GAAG,YAAY;EACzD,IAAID,SAAS,KAAK,UAAU,EAAE;IAC1B,OAAO;MACHP,IAAI,EAAE;QACFE,KAAK,EAAE;UACHU,eAAe,EAAE,IAAI;UACrBC,cAAc,EAAE,OAAO;UACvBC,cAAc,EAAGV,CAAC,IAAMK,UAAU,CAACL,CAAC,CAAC,GAAG,+BAA+B,GAAG,iBAAkB;UAC5FW,KAAK,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAM,CAAC,EAAE;YAAEA,SAAS,EAAE;UAAS,CAAC;QACzD;MACJ,CAAC;MACDC,IAAI,EAAE;QAAEhB,IAAI,EAAE;MAAiB,CAAC;MAChCiB,MAAM,EAAE;QAAEjB,IAAI,EAAEU,UAAU;QAAEJ,SAAS,EAAE,IAAI;QAAEY,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE,GAAG;QAAEC,OAAO,EAAEA,CAAA,KAAM,EAAE;QAAEC,OAAO,EAAEA,CAAA,KAAM;MAAG;IACjH,CAAC;EACL,CAAC,MACI,IAAIf,SAAS,KAAK,YAAY,EAAE;IACjC,OAAO;MACHP,IAAI,EAAE;QACFE,KAAK,EAAE;UACHU,eAAe,EAAE,IAAI;UACrBC,cAAc,EAAGT,CAAC,IAAMK,UAAU,CAACL,CAAC,CAAC,GAAG,OAAO,GAAG,MAAO;UACzDW,KAAK,EAAE,CAAC;YAAEC,SAAS,EAAE;UAAO,CAAC,EAAE;YAAEA,SAAS,EAAE;UAAQ,CAAC;QACzD;MACJ,CAAC;MACDC,IAAI,EAAE;QAAEhB,IAAI,EAAE;MAAmB,CAAC;MAClCiB,MAAM,EAAE;QAAEjB,IAAI,EAAEU,UAAU;QAAEJ,SAAS,EAAE,IAAI;QAAEY,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE,GAAG;QAAEC,OAAO,EAAEA,CAAA,KAAM,CAAC;QAAEC,OAAO,EAAEA,CAAA,KAAM;MAAI;IACjH,CAAC;EACL,CAAC,MACI;IACD,OAAO;MACHtB,IAAI,EAAE;QAAEE,KAAK,EAAE;UAAEU,eAAe,EAAE;QAAK;MAAE,CAAC;MAC1CK,IAAI,EAAE;QAAEhB,IAAI,EAAE;MAAe,CAAC;MAC9BiB,MAAM,EAAE;QACJjB,IAAI,EAAEU,UAAU;QAChBJ,SAAS,EAAE,IAAI;QACfgB,MAAM,EAAE,IAAI;QACZJ,OAAO,EAAE,EAAE;QACXC,OAAO,EAAE,GAAG;QACZC,OAAO,EAAEA,CAAA,KAAM,EAAE;QACjBC,OAAO,EAAEA,CAAA,KAAM;MACnB,CAAC;MACDE,UAAU,EAAGC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,qBAAqB;IACzD,CAAC;EACL;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}