{"ast":null,"code":"var regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nvar regexColorStop = /[\\d.]+:(#[^\\s]+|[^)]+\\))/gi;\nfunction isGradientColor(val) {\n  return /^[r,R,L,l]{1}[\\s]*\\(/.test(val);\n}\n/**\n * 将 g 渐变转换为 css 渐变\n */\nexport function toCSSGradient(gradientColor) {\n  if (isGradientColor(gradientColor)) {\n    var cssColor_1;\n    var steps = void 0;\n    if (gradientColor[0] === 'l') {\n      // 线性渐变\n      var arr = regexLG.exec(gradientColor);\n      var angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同\n      steps = arr[2];\n      cssColor_1 = \"linear-gradient(\".concat(angle, \"deg, \");\n    } else if (gradientColor[0] === 'r') {\n      // 径向渐变\n      cssColor_1 = 'radial-gradient(';\n      var arr = regexRG.exec(gradientColor);\n      steps = arr[4];\n    }\n    var colorStops_1 = steps.match(regexColorStop);\n    colorStops_1.forEach(function (item, index) {\n      var itemArr = item.split(':');\n      cssColor_1 += \"\".concat(itemArr[1], \" \").concat(Number(itemArr[0]) * 100, \"%\");\n      if (index !== colorStops_1.length - 1) {\n        cssColor_1 += ', ';\n      }\n    });\n    cssColor_1 += ')';\n    return cssColor_1;\n  }\n  return gradientColor;\n}","map":{"version":3,"names":["regexLG","regexRG","regexColorStop","isGradientColor","val","test","toCSSGradient","gradientColor","cssColor_1","steps","arr","exec","angle","concat","colorStops_1","match","forEach","item","index","itemArr","split","Number","length"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/color/tocssgradient.ts"],"sourcesContent":["const regexLG = /^l\\s*\\(\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nconst regexRG = /^r\\s*\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)\\s*(.*)/i;\nconst regexColorStop = /[\\d.]+:(#[^\\s]+|[^)]+\\))/gi;\n\nfunction isGradientColor(val) {\n  return /^[r,R,L,l]{1}[\\s]*\\(/.test(val);\n}\n\n/**\n * 将 g 渐变转换为 css 渐变\n */\nexport function toCSSGradient(gradientColor) {\n  if (isGradientColor(gradientColor)) {\n    let cssColor;\n    let steps;\n    if (gradientColor[0] === 'l') {\n      // 线性渐变\n      const arr = regexLG.exec(gradientColor);\n      const angle = +arr[1] + 90; // css 和 g 的渐变起始角度不同\n      steps = arr[2];\n\n      cssColor = `linear-gradient(${angle}deg, `;\n    } else if (gradientColor[0] === 'r') {\n      // 径向渐变\n      cssColor = 'radial-gradient(';\n      const arr = regexRG.exec(gradientColor);\n      steps = arr[4];\n    }\n\n    const colorStops: string[] = steps.match(regexColorStop);\n\n    colorStops.forEach((item: string, index: number) => {\n      const itemArr = item.split(':');\n      cssColor += `${itemArr[1]} ${Number(itemArr[0]) * 100}%`;\n      if (index !== colorStops.length - 1) {\n        cssColor += ', ';\n      }\n    });\n\n    cssColor += ')';\n\n    return cssColor;\n  }\n\n  return gradientColor;\n}\n"],"mappings":"AAAA,IAAMA,OAAO,GAAG,iCAAiC;AACjD,IAAMC,OAAO,GAAG,+DAA+D;AAC/E,IAAMC,cAAc,GAAG,4BAA4B;AAEnD,SAASC,eAAeA,CAACC,GAAG;EAC1B,OAAO,sBAAsB,CAACC,IAAI,CAACD,GAAG,CAAC;AACzC;AAEA;;;AAGA,OAAM,SAAUE,aAAaA,CAACC,aAAa;EACzC,IAAIJ,eAAe,CAACI,aAAa,CAAC,EAAE;IAClC,IAAIC,UAAQ;IACZ,IAAIC,KAAK;IACT,IAAIF,aAAa,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MAC5B;MACA,IAAMG,GAAG,GAAGV,OAAO,CAACW,IAAI,CAACJ,aAAa,CAAC;MACvC,IAAMK,KAAK,GAAG,CAACF,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;MAC5BD,KAAK,GAAGC,GAAG,CAAC,CAAC,CAAC;MAEdF,UAAQ,GAAG,mBAAAK,MAAA,CAAmBD,KAAK,UAAO;IAC5C,CAAC,MAAM,IAAIL,aAAa,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;MACnC;MACAC,UAAQ,GAAG,kBAAkB;MAC7B,IAAME,GAAG,GAAGT,OAAO,CAACU,IAAI,CAACJ,aAAa,CAAC;MACvCE,KAAK,GAAGC,GAAG,CAAC,CAAC,CAAC;IAChB;IAEA,IAAMI,YAAU,GAAaL,KAAK,CAACM,KAAK,CAACb,cAAc,CAAC;IAExDY,YAAU,CAACE,OAAO,CAAC,UAACC,IAAY,EAAEC,KAAa;MAC7C,IAAMC,OAAO,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;MAC/BZ,UAAQ,IAAI,GAAAK,MAAA,CAAGM,OAAO,CAAC,CAAC,CAAC,OAAAN,MAAA,CAAIQ,MAAM,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,MAAG;MACxD,IAAID,KAAK,KAAKJ,YAAU,CAACQ,MAAM,GAAG,CAAC,EAAE;QACnCd,UAAQ,IAAI,IAAI;MAClB;IACF,CAAC,CAAC;IAEFA,UAAQ,IAAI,GAAG;IAEf,OAAOA,UAAQ;EACjB;EAEA,OAAOD,aAAa;AACtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}