{"ast":null,"code":"import { COMBO_KEY } from '../constants';\nimport { idOf } from '../exports';\nimport { findActualConnectNodeData } from '../utils/edge';\nimport { BaseTransform } from './base-transform';\n/**\n * <zh/> 获取边的实际端点\n *\n * <en/> Get the actual endpoints of the edge\n */\nexport class GetEdgeActualEnds extends BaseTransform {\n  beforeDraw(input) {\n    const {\n      add,\n      update\n    } = input;\n    const {\n      model\n    } = this.context;\n    [...add.edges.entries(), ...update.edges.entries()].forEach(([, edge]) => {\n      getEdgeEndsContext(model, edge);\n    });\n    return input;\n  }\n}\nexport const getEdgeEndsContext = (model, edge) => {\n  const {\n    source,\n    target\n  } = edge;\n  const sourceNodeData = model.getElementDataById(source);\n  const targetNodeData = model.getElementDataById(target);\n  const actualSourceNode = findActualConnectNodeData(sourceNodeData, id => model.getParentData(id, COMBO_KEY));\n  const actualTargetNode = findActualConnectNodeData(targetNodeData, id => model.getParentData(id, COMBO_KEY));\n  const sourceNode = idOf(actualSourceNode);\n  const targetNode = idOf(actualTargetNode);\n  const ends = {\n    sourceNode,\n    targetNode\n  };\n  if (edge.style) {\n    Object.assign(edge.style, ends);\n  } else edge.style = ends;\n  return edge;\n};","map":{"version":3,"names":["COMBO_KEY","idOf","findActualConnectNodeData","BaseTransform","GetEdgeActualEnds","beforeDraw","input","add","update","model","context","edges","entries","forEach","edge","getEdgeEndsContext","source","target","sourceNodeData","getElementDataById","targetNodeData","actualSourceNode","id","getParentData","actualTargetNode","sourceNode","targetNode","ends","style","Object","assign"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/transforms/get-edge-actual-ends.ts"],"sourcesContent":["import { COMBO_KEY } from '../constants';\nimport { idOf } from '../exports';\nimport { DataController } from '../runtime/data';\nimport type { EdgeData } from '../spec';\nimport type { NodeLikeData } from '../types';\nimport { findActualConnectNodeData } from '../utils/edge';\nimport { BaseTransform } from './base-transform';\nimport type { DrawData } from './types';\n/**\n * <zh/> 获取边的实际端点\n *\n * <en/> Get the actual endpoints of the edge\n */\nexport class GetEdgeActualEnds extends BaseTransform {\n  public beforeDraw(input: DrawData): DrawData {\n    const { add, update } = input;\n    const { model } = this.context;\n    [...add.edges.entries(), ...update.edges.entries()].forEach(([, edge]) => {\n      getEdgeEndsContext(model, edge);\n    });\n    return input;\n  }\n}\n\nexport const getEdgeEndsContext = (model: DataController, edge: EdgeData) => {\n  const { source, target } = edge;\n\n  const sourceNodeData = model.getElementDataById(source) as NodeLikeData;\n  const targetNodeData = model.getElementDataById(target) as NodeLikeData;\n\n  const actualSourceNode = findActualConnectNodeData(sourceNodeData, (id) => model.getParentData(id, COMBO_KEY));\n\n  const actualTargetNode = findActualConnectNodeData(targetNodeData, (id) => model.getParentData(id, COMBO_KEY));\n\n  const sourceNode = idOf(actualSourceNode);\n  const targetNode = idOf(actualTargetNode);\n\n  const ends = { sourceNode, targetNode };\n\n  if (edge.style) {\n    Object.assign(edge.style, ends);\n  } else edge.style = ends;\n\n  return edge;\n};\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,cAAc;AACxC,SAASC,IAAI,QAAQ,YAAY;AAIjC,SAASC,yBAAyB,QAAQ,eAAe;AACzD,SAASC,aAAa,QAAQ,kBAAkB;AAEhD;;;;;AAKA,OAAM,MAAOC,iBAAkB,SAAQD,aAAa;EAC3CE,UAAUA,CAACC,KAAe;IAC/B,MAAM;MAAEC,GAAG;MAAEC;IAAM,CAAE,GAAGF,KAAK;IAC7B,MAAM;MAAEG;IAAK,CAAE,GAAG,IAAI,CAACC,OAAO;IAC9B,CAAC,GAAGH,GAAG,CAACI,KAAK,CAACC,OAAO,EAAE,EAAE,GAAGJ,MAAM,CAACG,KAAK,CAACC,OAAO,EAAE,CAAC,CAACC,OAAO,CAAC,CAAC,GAAGC,IAAI,CAAC,KAAI;MACvEC,kBAAkB,CAACN,KAAK,EAAEK,IAAI,CAAC;IACjC,CAAC,CAAC;IACF,OAAOR,KAAK;EACd;;AAGF,OAAO,MAAMS,kBAAkB,GAAGA,CAACN,KAAqB,EAAEK,IAAc,KAAI;EAC1E,MAAM;IAAEE,MAAM;IAAEC;EAAM,CAAE,GAAGH,IAAI;EAE/B,MAAMI,cAAc,GAAGT,KAAK,CAACU,kBAAkB,CAACH,MAAM,CAAiB;EACvE,MAAMI,cAAc,GAAGX,KAAK,CAACU,kBAAkB,CAACF,MAAM,CAAiB;EAEvE,MAAMI,gBAAgB,GAAGnB,yBAAyB,CAACgB,cAAc,EAAGI,EAAE,IAAKb,KAAK,CAACc,aAAa,CAACD,EAAE,EAAEtB,SAAS,CAAC,CAAC;EAE9G,MAAMwB,gBAAgB,GAAGtB,yBAAyB,CAACkB,cAAc,EAAGE,EAAE,IAAKb,KAAK,CAACc,aAAa,CAACD,EAAE,EAAEtB,SAAS,CAAC,CAAC;EAE9G,MAAMyB,UAAU,GAAGxB,IAAI,CAACoB,gBAAgB,CAAC;EACzC,MAAMK,UAAU,GAAGzB,IAAI,CAACuB,gBAAgB,CAAC;EAEzC,MAAMG,IAAI,GAAG;IAAEF,UAAU;IAAEC;EAAU,CAAE;EAEvC,IAAIZ,IAAI,CAACc,KAAK,EAAE;IACdC,MAAM,CAACC,MAAM,CAAChB,IAAI,CAACc,KAAK,EAAED,IAAI,CAAC;EACjC,CAAC,MAAMb,IAAI,CAACc,KAAK,GAAGD,IAAI;EAExB,OAAOb,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}