{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/runtime/types/transform.ts"],"sourcesContent":["import { ColumnValue, NormalizedEncodeSpec } from './encode';\nimport { G2Context, G2Mark } from './options';\n\nexport type TransformOptions = Record<string, any>;\n\nexport type TransformProps = Record<string, never>;\n\nexport type TransformComponent<O extends TransformOptions = TransformOptions> =\n  {\n    (options: O): Transform;\n    props?: TransformProps;\n  };\n\nexport type Transform = (\n  I: number[],\n  mark: G2Mark,\n  context: G2Context,\n) => [number[], G2Mark] | Promise<[number[], G2Mark]>;\n\nexport type TransformSpec = {\n  type?: string | TransformComponent;\n  [key: string]: any;\n};\n\nexport type ColumnOf = (data: any, encode: NormalizedEncodeSpec) => ColumnValue;\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}