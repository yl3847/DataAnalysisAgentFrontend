{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Select } from './select';\n/**\n * The selectX transform filter index by y channel.\n */\nexport const SelectX = (options = {}) => {\n  const {\n      selector\n    } = options,\n    rest = __rest(options, [\"selector\"]);\n  return Select(Object.assign({\n    channel: 'x',\n    selector\n  }, rest));\n};\nSelectX.props = {};","map":{"version":3,"names":["Select","SelectX","options","selector","rest","__rest","Object","assign","channel","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/selectX.ts"],"sourcesContent":["import { TransformComponent as TC } from '../runtime';\nimport { SelectXTransform } from '../spec';\nimport { Select } from './select';\n\nexport type SelectXOptions = Omit<SelectXTransform, 'type'>;\n\n/**\n * The selectX transform filter index by y channel.\n */\nexport const SelectX: TC<SelectXOptions> = (options = {}) => {\n  const { selector, ...rest } = options;\n  return Select({ channel: 'x', selector, ...rest });\n};\n\nSelectX.props = {};\n"],"mappings":";;;;;;;;AAEA,SAASA,MAAM,QAAQ,UAAU;AAIjC;;;AAGA,OAAO,MAAMC,OAAO,GAAuBA,CAACC,OAAO,GAAG,EAAE,KAAI;EAC1D,MAAM;MAAEC;IAAQ,IAAcD,OAAO;IAAhBE,IAAI,GAAAC,MAAA,CAAKH,OAAO,EAA/B,YAAqB,CAAU;EACrC,OAAOF,MAAM,CAAAM,MAAA,CAAAC,MAAA;IAAGC,OAAO,EAAE,GAAG;IAAEL;EAAQ,GAAKC,IAAI,EAAG;AACpD,CAAC;AAEDH,OAAO,CAACQ,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}