{"ast":null,"code":"import { distanceSquareRoot } from './distance-square-root';\nfunction getRotations(a) {\n  var segCount = a.length;\n  var pointCount = segCount - 1;\n  return a.map(function (f, idx) {\n    return a.map(function (p, i) {\n      var oldSegIdx = idx + i;\n      var seg;\n      if (i === 0 || a[oldSegIdx] && a[oldSegIdx][0] === 'M') {\n        seg = a[oldSegIdx];\n        return ['M'].concat(seg.slice(-2));\n      }\n      if (oldSegIdx >= segCount) oldSegIdx -= pointCount;\n      return a[oldSegIdx];\n    });\n  });\n}\nexport function getRotatedCurve(a, b) {\n  var segCount = a.length - 1;\n  var lineLengths = [];\n  var computedIndex = 0;\n  var sumLensSqrd = 0;\n  var rotations = getRotations(a);\n  rotations.forEach(function (r, i) {\n    a.slice(1).forEach(function (s, j) {\n      // @ts-ignore\n      sumLensSqrd += distanceSquareRoot(a[(i + j) % segCount].slice(-2), b[j % segCount].slice(-2));\n    });\n    lineLengths[i] = sumLensSqrd;\n    sumLensSqrd = 0;\n  });\n  computedIndex = lineLengths.indexOf(Math.min.apply(null, lineLengths));\n  return rotations[computedIndex];\n}","map":{"version":3,"names":["distanceSquareRoot","getRotations","a","segCount","length","pointCount","map","f","idx","p","i","oldSegIdx","seg","concat","slice","getRotatedCurve","b","lineLengths","computedIndex","sumLensSqrd","rotations","forEach","r","s","j","indexOf","Math","min","apply"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/path/util/get-rotated-curve.ts"],"sourcesContent":["import type { CurveArray } from '../types';\nimport { distanceSquareRoot } from './distance-square-root';\n\nfunction getRotations(a: CurveArray) {\n  const segCount = a.length;\n  const pointCount = segCount - 1;\n\n  return a.map((f, idx) =>\n    a.map((p, i) => {\n      let oldSegIdx = idx + i;\n      let seg;\n\n      if (i === 0 || (a[oldSegIdx] && a[oldSegIdx][0] === 'M')) {\n        seg = a[oldSegIdx];\n        return ['M'].concat(seg.slice(-2));\n      }\n      if (oldSegIdx >= segCount) oldSegIdx -= pointCount;\n      return a[oldSegIdx];\n    }),\n  );\n}\n\nexport function getRotatedCurve(a: CurveArray, b: CurveArray) {\n  const segCount = a.length - 1;\n  const lineLengths: number[] = [];\n  let computedIndex = 0;\n  let sumLensSqrd = 0;\n  const rotations = getRotations(a);\n\n  rotations.forEach((r, i) => {\n    a.slice(1).forEach((s, j) => {\n      // @ts-ignore\n      sumLensSqrd += distanceSquareRoot(a[(i + j) % segCount].slice(-2), b[j % segCount].slice(-2));\n    });\n    lineLengths[i] = sumLensSqrd;\n    sumLensSqrd = 0;\n  });\n\n  computedIndex = lineLengths.indexOf(Math.min.apply(null, lineLengths));\n\n  return rotations[computedIndex];\n}\n"],"mappings":"AACA,SAASA,kBAAkB,QAAQ,wBAAwB;AAE3D,SAASC,YAAYA,CAACC,CAAa;EACjC,IAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM;EACzB,IAAMC,UAAU,GAAGF,QAAQ,GAAG,CAAC;EAE/B,OAAOD,CAAC,CAACI,GAAG,CAAC,UAACC,CAAC,EAAEC,GAAG;IAClB,OAAAN,CAAC,CAACI,GAAG,CAAC,UAACG,CAAC,EAAEC,CAAC;MACT,IAAIC,SAAS,GAAGH,GAAG,GAAGE,CAAC;MACvB,IAAIE,GAAG;MAEP,IAAIF,CAAC,KAAK,CAAC,IAAKR,CAAC,CAACS,SAAS,CAAC,IAAIT,CAAC,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,GAAI,EAAE;QACxDC,GAAG,GAAGV,CAAC,CAACS,SAAS,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,CAACE,MAAM,CAACD,GAAG,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC;MACA,IAAIH,SAAS,IAAIR,QAAQ,EAAEQ,SAAS,IAAIN,UAAU;MAClD,OAAOH,CAAC,CAACS,SAAS,CAAC;IACrB,CAAC,CAAC;EAVF,CAUE,CACH;AACH;AAEA,OAAM,SAAUI,eAAeA,CAACb,CAAa,EAAEc,CAAa;EAC1D,IAAMb,QAAQ,GAAGD,CAAC,CAACE,MAAM,GAAG,CAAC;EAC7B,IAAMa,WAAW,GAAa,EAAE;EAChC,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAMC,SAAS,GAAGnB,YAAY,CAACC,CAAC,CAAC;EAEjCkB,SAAS,CAACC,OAAO,CAAC,UAACC,CAAC,EAAEZ,CAAC;IACrBR,CAAC,CAACY,KAAK,CAAC,CAAC,CAAC,CAACO,OAAO,CAAC,UAACE,CAAC,EAAEC,CAAC;MACtB;MACAL,WAAW,IAAInB,kBAAkB,CAACE,CAAC,CAAC,CAACQ,CAAC,GAAGc,CAAC,IAAIrB,QAAQ,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEE,CAAC,CAACQ,CAAC,GAAGrB,QAAQ,CAAC,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/F,CAAC,CAAC;IACFG,WAAW,CAACP,CAAC,CAAC,GAAGS,WAAW;IAC5BA,WAAW,GAAG,CAAC;EACjB,CAAC,CAAC;EAEFD,aAAa,GAAGD,WAAW,CAACQ,OAAO,CAACC,IAAI,CAACC,GAAG,CAACC,KAAK,CAAC,IAAI,EAAEX,WAAW,CAAC,CAAC;EAEtE,OAAOG,SAAS,CAACF,aAAa,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}