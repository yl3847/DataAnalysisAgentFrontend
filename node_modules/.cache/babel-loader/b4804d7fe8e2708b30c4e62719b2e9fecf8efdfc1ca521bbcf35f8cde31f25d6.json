{"ast":null,"code":"import { ExtensionController } from '../registry/extension';\nexport const REQUIRED_TRANSFORMS = ['update-related-edges', 'collapse-expand-node', 'collapse-expand-combo', 'get-edge-actual-ends', 'arrange-draw-order'];\nexport class TransformController extends ExtensionController {\n  constructor(context) {\n    super(context);\n    this.category = 'transform';\n    this.setTransforms(this.context.options.transforms || []);\n  }\n  getTransforms() {}\n  setTransforms(transforms) {\n    this.setExtensions([...REQUIRED_TRANSFORMS.slice(0, REQUIRED_TRANSFORMS.length - 1), ...transforms, REQUIRED_TRANSFORMS[REQUIRED_TRANSFORMS.length - 1]]);\n  }\n  getTransformInstance(key) {\n    return key ? this.extensionMap[key] : this.extensionMap;\n  }\n}","map":{"version":3,"names":["ExtensionController","REQUIRED_TRANSFORMS","TransformController","constructor","context","category","setTransforms","options","transforms","getTransforms","setExtensions","slice","length","getTransformInstance","key","extensionMap"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/runtime/transform.ts"],"sourcesContent":["import { ExtensionController } from '../registry/extension';\nimport type { CustomTransformOption, TransformOptions } from '../spec/transform';\nimport { BaseTransform } from '../transforms';\nimport type { RuntimeContext } from './types';\n\nexport const REQUIRED_TRANSFORMS: TransformOptions = [\n  'update-related-edges',\n  'collapse-expand-node',\n  'collapse-expand-combo',\n  'get-edge-actual-ends',\n  'arrange-draw-order',\n];\n\nexport class TransformController extends ExtensionController<BaseTransform<CustomTransformOption>> {\n  public category = 'transform' as const;\n\n  constructor(context: RuntimeContext) {\n    super(context);\n    this.setTransforms(this.context.options.transforms || []);\n  }\n\n  protected getTransforms() {}\n\n  public setTransforms(transforms: TransformOptions) {\n    this.setExtensions([\n      ...REQUIRED_TRANSFORMS.slice(0, REQUIRED_TRANSFORMS.length - 1),\n      ...transforms,\n      REQUIRED_TRANSFORMS[REQUIRED_TRANSFORMS.length - 1],\n    ]);\n  }\n\n  public getTransformInstance(): Record<string, BaseTransform>;\n  public getTransformInstance(key: string): BaseTransform;\n  public getTransformInstance(key?: string) {\n    return key ? this.extensionMap[key] : this.extensionMap;\n  }\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,uBAAuB;AAK3D,OAAO,MAAMC,mBAAmB,GAAqB,CACnD,sBAAsB,EACtB,sBAAsB,EACtB,uBAAuB,EACvB,sBAAsB,EACtB,oBAAoB,CACrB;AAED,OAAM,MAAOC,mBAAoB,SAAQF,mBAAyD;EAGhGG,YAAYC,OAAuB;IACjC,KAAK,CAACA,OAAO,CAAC;IAHT,KAAAC,QAAQ,GAAG,WAAoB;IAIpC,IAAI,CAACC,aAAa,CAAC,IAAI,CAACF,OAAO,CAACG,OAAO,CAACC,UAAU,IAAI,EAAE,CAAC;EAC3D;EAEUC,aAAaA,CAAA,GAAI;EAEpBH,aAAaA,CAACE,UAA4B;IAC/C,IAAI,CAACE,aAAa,CAAC,CACjB,GAAGT,mBAAmB,CAACU,KAAK,CAAC,CAAC,EAAEV,mBAAmB,CAACW,MAAM,GAAG,CAAC,CAAC,EAC/D,GAAGJ,UAAU,EACbP,mBAAmB,CAACA,mBAAmB,CAACW,MAAM,GAAG,CAAC,CAAC,CACpD,CAAC;EACJ;EAIOC,oBAAoBA,CAACC,GAAY;IACtC,OAAOA,GAAG,GAAG,IAAI,CAACC,YAAY,CAACD,GAAG,CAAC,GAAG,IAAI,CAACC,YAAY;EACzD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}