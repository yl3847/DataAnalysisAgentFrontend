{"ast":null,"code":"/**\n * 向量运算\n */\nimport { clone } from '@antv/util';\nvar Vector = /** @class */function () {\n  function Vector(arr) {\n    this.arr = arr;\n  }\n  Vector.prototype.getArr = function () {\n    return this.arr || [];\n  };\n  Vector.prototype.add = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] + otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.subtract = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] - otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.avg = function (length) {\n    var res = [];\n    if (length !== 0) {\n      for (var index in this.arr) {\n        res[index] = this.arr[index] / length;\n      }\n    }\n    return new Vector(res);\n  };\n  Vector.prototype.negate = function () {\n    var res = [];\n    for (var index in this.arr) {\n      res[index] = -this.arr[index];\n    }\n    return new Vector(res);\n  };\n  // 平方欧式距离\n  Vector.prototype.squareEuclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return res;\n    }\n  };\n  // 欧式距离\n  Vector.prototype.euclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return Math.sqrt(res);\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  };\n  // 归一化处理\n  Vector.prototype.normalize = function () {\n    var res = [];\n    var cloneArr = clone(this.arr);\n    cloneArr.sort(function (a, b) {\n      return a - b;\n    });\n    var max = cloneArr[cloneArr.length - 1];\n    var min = cloneArr[0];\n    for (var index in this.arr) {\n      res[index] = (this.arr[index] - min) / (max - min);\n    }\n    return new Vector(res);\n  };\n  // 2范数 or 模长\n  Vector.prototype.norm2 = function () {\n    var _a;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return 0;\n    }\n    var res = 0;\n    for (var index in this.arr) {\n      res += Math.pow(this.arr[index], 2);\n    }\n    return Math.sqrt(res);\n  };\n  // 两个向量的点积\n  Vector.prototype.dot = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += this.arr[index] * otherVector.arr[index];\n      }\n      return res;\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  };\n  // 两个向量比较\n  Vector.prototype.equal = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) !== (otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return false;\n    }\n    for (var index in this.arr) {\n      if (this.arr[index] !== otherArr[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return Vector;\n}();\nexport default Vector;","map":{"version":3,"names":["clone","Vector","arr","prototype","getArr","add","otherVector","_a","otherArr","length","res","index","subtract","avg","negate","squareEuclideanDistance","Math","pow","euclideanDistance","sqrt","console","error","normalize","cloneArr","sort","a","b","max","min","norm2","dot","equal"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/utils/vector.js"],"sourcesContent":["/**\n * 向量运算\n */\nimport { clone } from '@antv/util';\nvar Vector = /** @class */function () {\n  function Vector(arr) {\n    this.arr = arr;\n  }\n  Vector.prototype.getArr = function () {\n    return this.arr || [];\n  };\n  Vector.prototype.add = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] + otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.subtract = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return new Vector(otherArr);\n    }\n    if (!(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return new Vector(this.arr);\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = [];\n      for (var index in this.arr) {\n        res[index] = this.arr[index] - otherArr[index];\n      }\n      return new Vector(res);\n    }\n  };\n  Vector.prototype.avg = function (length) {\n    var res = [];\n    if (length !== 0) {\n      for (var index in this.arr) {\n        res[index] = this.arr[index] / length;\n      }\n    }\n    return new Vector(res);\n  };\n  Vector.prototype.negate = function () {\n    var res = [];\n    for (var index in this.arr) {\n      res[index] = -this.arr[index];\n    }\n    return new Vector(res);\n  };\n  // 平方欧式距离\n  Vector.prototype.squareEuclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return res;\n    }\n  };\n  // 欧式距离\n  Vector.prototype.euclideanDistance = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += Math.pow(this.arr[index] - otherVector.arr[index], 2);\n      }\n      return Math.sqrt(res);\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  };\n  // 归一化处理\n  Vector.prototype.normalize = function () {\n    var res = [];\n    var cloneArr = clone(this.arr);\n    cloneArr.sort(function (a, b) {\n      return a - b;\n    });\n    var max = cloneArr[cloneArr.length - 1];\n    var min = cloneArr[0];\n    for (var index in this.arr) {\n      res[index] = (this.arr[index] - min) / (max - min);\n    }\n    return new Vector(res);\n  };\n  // 2范数 or 模长\n  Vector.prototype.norm2 = function () {\n    var _a;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length)) {\n      return 0;\n    }\n    var res = 0;\n    for (var index in this.arr) {\n      res += Math.pow(this.arr[index], 2);\n    }\n    return Math.sqrt(res);\n  };\n  // 两个向量的点积\n  Vector.prototype.dot = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (!((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) || !(otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return 0;\n    }\n    if (this.arr.length === otherArr.length) {\n      var res = 0;\n      for (var index in this.arr) {\n        res += this.arr[index] * otherVector.arr[index];\n      }\n      return res;\n    } else {\n      console.error('The two vectors are unequal in length.');\n    }\n  };\n  // 两个向量比较\n  Vector.prototype.equal = function (otherVector) {\n    var _a;\n    var otherArr = otherVector.arr;\n    if (((_a = this.arr) === null || _a === void 0 ? void 0 : _a.length) !== (otherArr === null || otherArr === void 0 ? void 0 : otherArr.length)) {\n      return false;\n    }\n    for (var index in this.arr) {\n      if (this.arr[index] !== otherArr[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return Vector;\n}();\nexport default Vector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}