{"ast":null,"code":"import { isNumber } from '.';\n/**\n * 转化率的计算方式\n * @param prev\n * @param next\n */\nexport function conversionTagFormatter(prev, next) {\n  if (!isNumber(prev) || !isNumber(next)) {\n    return '-';\n  }\n  // 0 / 0 没有意义\n  if (prev === 0 && next === 0) {\n    return '-';\n  }\n  if (prev === next) {\n    return '100%';\n  }\n  if (prev === 0) {\n    return '∞';\n  }\n  return \"\".concat((100 * next / prev).toFixed(2), \"%\");\n}","map":{"version":3,"names":["isNumber","conversionTagFormatter","prev","next","concat","toFixed"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/utils/conversion.js"],"sourcesContent":["import { isNumber } from '.';\n/**\n * 转化率的计算方式\n * @param prev\n * @param next\n */\nexport function conversionTagFormatter(prev, next) {\n    if (!isNumber(prev) || !isNumber(next)) {\n        return '-';\n    }\n    // 0 / 0 没有意义\n    if (prev === 0 && next === 0) {\n        return '-';\n    }\n    if (prev === next) {\n        return '100%';\n    }\n    if (prev === 0) {\n        return '∞';\n    }\n    return \"\".concat(((100 * next) / prev).toFixed(2), \"%\");\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,sBAAsBA,CAACC,IAAI,EAAEC,IAAI,EAAE;EAC/C,IAAI,CAACH,QAAQ,CAACE,IAAI,CAAC,IAAI,CAACF,QAAQ,CAACG,IAAI,CAAC,EAAE;IACpC,OAAO,GAAG;EACd;EACA;EACA,IAAID,IAAI,KAAK,CAAC,IAAIC,IAAI,KAAK,CAAC,EAAE;IAC1B,OAAO,GAAG;EACd;EACA,IAAID,IAAI,KAAKC,IAAI,EAAE;IACf,OAAO,MAAM;EACjB;EACA,IAAID,IAAI,KAAK,CAAC,EAAE;IACZ,OAAO,GAAG;EACd;EACA,OAAO,EAAE,CAACE,MAAM,CAAC,CAAE,GAAG,GAAGD,IAAI,GAAID,IAAI,EAAEG,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}