{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { Sankey as SankeyTransform } from '../data/sankey';\nimport { omitPrefixObject, subObject } from '../utils/helper';\nimport { subTooltip, maybeAnimation } from '../utils/mark';\nimport { field, initializeData } from './utils';\nconst DEFAULT_LAYOUT_OPTIONS = {\n  nodeId: d => d.key,\n  nodeWidth: 0.02,\n  nodePadding: 0.02\n};\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'polygon',\n    x: 'x',\n    y: 'y'\n  },\n  scale: {\n    x: {\n      type: 'identity'\n    },\n    y: {\n      type: 'identity'\n    }\n  },\n  style: {\n    stroke: '#000'\n  }\n};\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'ribbon',\n    x: 'x',\n    y: 'y'\n  },\n  style: {\n    fillOpacity: 0.5,\n    stroke: undefined\n  }\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  textAlign: d => d.x[0] < 0.5 ? 'start' : 'end',\n  position: d => d.x[0] < 0.5 ? 'right' : 'left',\n  fontSize: 10\n};\n/**\n * @todo Add interaction\n * @todo Add source-link color mode\n */\nexport const Sankey = options => {\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {},\n    interaction,\n    state = {}\n  } = options;\n  // Initialize data, generating nodes by link if is not specified.\n  const {\n    links,\n    nodes\n  } = initializeData(data, encode);\n  // Extract encode for node and link.\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const {\n    key: nodeKey = d => d.key,\n    color = nodeKey\n  } = nodeEncode;\n  // Transform data, using nodeKey as nodeId.\n  const {\n    links: linkData,\n    nodes: nodeData\n  } = SankeyTransform(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), {\n    nodeId: field(nodeKey)\n  }), layout))({\n    links,\n    nodes\n  });\n  // Extract label style and apply defaults.\n  const _a = subObject(style, 'label'),\n    {\n      text = nodeKey,\n      spacing = 5\n    } = _a,\n    labelStyle = __rest(_a, [\"text\", \"spacing\"]);\n  const key1 = field(nodeKey);\n  const nodeTooltip = subTooltip(tooltip, 'node', {\n    title: key1,\n    items: [{\n      field: 'value'\n    }]\n  }, true);\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [d => ({\n      name: 'source',\n      value: key1(d.source)\n    }), d => ({\n      name: 'target',\n      value: key1(d.target)\n    })]\n  });\n  // Extract node and link state.\n  const [nodeState, linkState] = Object.entries(state).reduce((acc, [stateName, styleObj]) => {\n    const commonState = omitPrefixObject(styleObj, 'node', 'link');\n    const nodeState = subObject(styleObj, 'node');\n    acc[0][stateName] = Object.assign(Object.assign({}, commonState), nodeState);\n    const linkState = subObject(styleObj, 'link');\n    acc[1][stateName] = Object.assign(Object.assign({}, commonState), linkState);\n    return acc;\n  }, [{}, {}]);\n  return [deepMix({}, DEFAULT_NODE_OPTIONS, {\n    data: nodeData,\n    encode: Object.assign(Object.assign({}, nodeEncode), {\n      color\n    }),\n    scale,\n    style: subObject(style, 'node'),\n    labels: [Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), {\n      text,\n      dx: d => d.x[0] < 0.5 ? spacing : -spacing\n    }), labelStyle), ...nodeLabels],\n    tooltip: nodeTooltip,\n    animate: maybeAnimation(animate, 'node'),\n    axis: false,\n    interaction,\n    state: nodeState\n  }), deepMix({}, DEFAULT_LINK_OPTIONS, {\n    data: linkData,\n    encode: linkEncode,\n    labels: linkLabels,\n    style: Object.assign({\n      fill: linkEncode.color ? undefined : '#aaa',\n      lineWidth: 0\n    }, subObject(style, 'link')),\n    tooltip: linkTooltip,\n    animate: maybeAnimation(animate, 'link'),\n    interaction,\n    state: linkState\n  })];\n};\nSankey.props = {};","map":{"version":3,"names":["deepMix","Sankey","SankeyTransform","omitPrefixObject","subObject","subTooltip","maybeAnimation","field","initializeData","DEFAULT_LAYOUT_OPTIONS","nodeId","d","key","nodeWidth","nodePadding","DEFAULT_NODE_OPTIONS","type","axis","legend","encode","shape","x","y","scale","style","stroke","DEFAULT_LINK_OPTIONS","fillOpacity","undefined","DEFAULT_LABEL_OPTIONS","textAlign","position","fontSize","options","data","layout","nodeLabels","linkLabels","animate","tooltip","interaction","state","links","nodes","nodeEncode","linkEncode","nodeKey","color","linkData","nodeData","Object","assign","_a","text","spacing","labelStyle","__rest","key1","nodeTooltip","title","items","linkTooltip","name","value","source","target","nodeState","linkState","entries","reduce","acc","stateName","styleObj","commonState","labels","dx","fill","lineWidth","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/sankey.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { CompositeMarkComponent as CC } from '../runtime';\nimport { SankeyMark } from '../spec';\nimport { Sankey as SankeyTransform } from '../data/sankey';\nimport { omitPrefixObject, subObject } from '../utils/helper';\nimport { subTooltip, maybeAnimation } from '../utils/mark';\nimport { field, initializeData } from './utils';\n\nconst DEFAULT_LAYOUT_OPTIONS = {\n  nodeId: (d) => d.key,\n  nodeWidth: 0.02,\n  nodePadding: 0.02,\n};\n\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'polygon',\n    x: 'x',\n    y: 'y',\n  },\n  scale: {\n    x: { type: 'identity' },\n    y: { type: 'identity' },\n  },\n  style: {\n    stroke: '#000',\n  },\n};\n\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'polygon',\n  axis: false,\n  legend: false,\n  encode: {\n    shape: 'ribbon',\n    x: 'x',\n    y: 'y',\n  },\n  style: {\n    fillOpacity: 0.5,\n    stroke: undefined,\n  },\n};\n\nconst DEFAULT_LABEL_OPTIONS = {\n  textAlign: (d) => (d.x[0] < 0.5 ? 'start' : 'end'),\n  position: (d) => (d.x[0] < 0.5 ? 'right' : 'left'),\n  fontSize: 10,\n};\n\nexport type SankeyOptions = Omit<SankeyMark, 'type'>;\n\n/**\n * @todo Add interaction\n * @todo Add source-link color mode\n */\nexport const Sankey: CC<SankeyOptions> = (options) => {\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {},\n    interaction,\n    state = {},\n  } = options;\n\n  // Initialize data, generating nodes by link if is not specified.\n  const { links, nodes } = initializeData(data, encode);\n\n  // Extract encode for node and link.\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const { key: nodeKey = (d) => d.key, color = nodeKey } = nodeEncode;\n\n  // Transform data, using nodeKey as nodeId.\n  const { links: linkData, nodes: nodeData } = SankeyTransform({\n    ...DEFAULT_LAYOUT_OPTIONS,\n    nodeId: field(nodeKey),\n    ...layout,\n  })({ links, nodes });\n\n  // Extract label style and apply defaults.\n  const {\n    text = nodeKey,\n    spacing = 5,\n    ...labelStyle\n  } = subObject(style, 'label');\n\n  const key1 = field(nodeKey);\n\n  const nodeTooltip = subTooltip(\n    tooltip,\n    'node',\n    {\n      title: key1,\n      items: [{ field: 'value' }],\n    },\n    true,\n  );\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [\n      (d) => ({ name: 'source', value: key1(d.source) }),\n      (d) => ({ name: 'target', value: key1(d.target) }),\n    ],\n  });\n  // Extract node and link state.\n  const [nodeState, linkState] = Object.entries(state).reduce(\n    (acc, [stateName, styleObj]) => {\n      const commonState = omitPrefixObject(styleObj, 'node', 'link');\n      const nodeState = subObject(styleObj, 'node');\n      acc[0][stateName] = { ...commonState, ...nodeState };\n      const linkState = subObject(styleObj, 'link');\n      acc[1][stateName] = { ...commonState, ...linkState };\n      return acc;\n    },\n    [{}, {}],\n  );\n  return [\n    deepMix({}, DEFAULT_NODE_OPTIONS, {\n      data: nodeData,\n      encode: { ...nodeEncode, color },\n      scale,\n      style: subObject(style, 'node'),\n      labels: [\n        {\n          ...DEFAULT_LABEL_OPTIONS,\n          text,\n          dx: (d) => (d.x[0] < 0.5 ? spacing : -spacing),\n          ...labelStyle,\n        },\n        ...nodeLabels,\n      ],\n      tooltip: nodeTooltip,\n      animate: maybeAnimation(animate, 'node'),\n      axis: false,\n      interaction,\n      state: nodeState,\n    }),\n    deepMix({}, DEFAULT_LINK_OPTIONS, {\n      data: linkData,\n      encode: linkEncode,\n      labels: linkLabels,\n      style: {\n        fill: linkEncode.color ? undefined : '#aaa',\n        lineWidth: 0,\n        ...subObject(style, 'link'),\n      },\n      tooltip: linkTooltip,\n      animate: maybeAnimation(animate, 'link'),\n      interaction,\n      state: linkState,\n    }),\n  ];\n};\n\nSankey.props = {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}