{"ast":null,"code":"import{useState,useCallback}from'react';import{sendToLambda}from'../services/lambdaClient';import{getMockResponse}from'../services/mockData';export const useApi=()=>{const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const useMockData=process.env.REACT_APP_USE_MOCK_DATA==='true';const sendQuery=useCallback(async function(query){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};setLoading(true);setError(null);try{let response;if(useMockData){// Use mock data for local testing\nconsole.log('Using mock data for query:',query);response=await getMockResponse(query);}else{// Send to Lambda\nconsole.log('Sending to Lambda:',query);response=await sendToLambda({query,...options});}setLoading(false);return response;}catch(err){console.error('API Error:',err);setError(err.message||'An error occurred');setLoading(false);// Return a fallback response\nreturn{success:false,message:err.message||'Failed to process query',data:null,charts:null};}},[useMockData]);const reset=useCallback(()=>{setLoading(false);setError(null);},[]);return{sendQuery,loading,error,reset};};","map":{"version":3,"names":["useState","useCallback","sendToLambda","getMockResponse","useApi","loading","setLoading","error","setError","useMockData","process","env","REACT_APP_USE_MOCK_DATA","sendQuery","query","options","arguments","length","undefined","response","console","log","err","message","success","data","charts","reset"],"sources":["/Users/yizelu/Desktop/mcp/frontend/src/hooks/useApi.js"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { sendToLambda } from '../services/lambdaClient';\nimport { getMockResponse } from '../services/mockData';\n\nexport const useApi = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n  const useMockData = process.env.REACT_APP_USE_MOCK_DATA === 'true';\n\n  const sendQuery = useCallback(async (query, options = {}) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      let response;\n      \n      if (useMockData) {\n        // Use mock data for local testing\n        console.log('Using mock data for query:', query);\n        response = await getMockResponse(query);\n      } else {\n        // Send to Lambda\n        console.log('Sending to Lambda:', query);\n        response = await sendToLambda({\n          query,\n          ...options\n        });\n      }\n      \n      setLoading(false);\n      return response;\n    } catch (err) {\n      console.error('API Error:', err);\n      setError(err.message || 'An error occurred');\n      setLoading(false);\n      \n      // Return a fallback response\n      return {\n        success: false,\n        message: err.message || 'Failed to process query',\n        data: null,\n        charts: null\n      };\n    }\n  }, [useMockData]);\n\n  const reset = useCallback(() => {\n    setLoading(false);\n    setError(null);\n  }, []);\n\n  return {\n    sendQuery,\n    loading,\n    error,\n    reset\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAC7C,OAASC,YAAY,KAAQ,0BAA0B,CACvD,OAASC,eAAe,KAAQ,sBAAsB,CAEtD,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACO,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,IAAI,CAAC,CAExC,KAAM,CAAAS,WAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,uBAAuB,GAAK,MAAM,CAElE,KAAM,CAAAC,SAAS,CAAGZ,WAAW,CAAC,eAAOa,KAAK,CAAmB,IAAjB,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACtDV,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACF,GAAI,CAAAW,QAAQ,CAEZ,GAAIV,WAAW,CAAE,CACf;AACAW,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAEP,KAAK,CAAC,CAChDK,QAAQ,CAAG,KAAM,CAAAhB,eAAe,CAACW,KAAK,CAAC,CACzC,CAAC,IAAM,CACL;AACAM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEP,KAAK,CAAC,CACxCK,QAAQ,CAAG,KAAM,CAAAjB,YAAY,CAAC,CAC5BY,KAAK,CACL,GAAGC,OACL,CAAC,CAAC,CACJ,CAEAT,UAAU,CAAC,KAAK,CAAC,CACjB,MAAO,CAAAa,QAAQ,CACjB,CAAE,MAAOG,GAAG,CAAE,CACZF,OAAO,CAACb,KAAK,CAAC,YAAY,CAAEe,GAAG,CAAC,CAChCd,QAAQ,CAACc,GAAG,CAACC,OAAO,EAAI,mBAAmB,CAAC,CAC5CjB,UAAU,CAAC,KAAK,CAAC,CAEjB;AACA,MAAO,CACLkB,OAAO,CAAE,KAAK,CACdD,OAAO,CAAED,GAAG,CAACC,OAAO,EAAI,yBAAyB,CACjDE,IAAI,CAAE,IAAI,CACVC,MAAM,CAAE,IACV,CAAC,CACH,CACF,CAAC,CAAE,CAACjB,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAkB,KAAK,CAAG1B,WAAW,CAAC,IAAM,CAC9BK,UAAU,CAAC,KAAK,CAAC,CACjBE,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLK,SAAS,CACTR,OAAO,CACPE,KAAK,CACLoB,KACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}