{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { get, isEqual } from '@antv/util';\nimport { Component } from '../../core';\nimport { select } from '../../util';\nimport { Tag } from '../tag';\nimport { SIZE_STYLE } from './constant';\n// 开启颜色 默认\nvar OPTION_COLOR = '#1890FF';\n// 关闭颜色 默认\nvar CLOSE_COLOR = '#00000040';\nfunction getHandleShapeStyle(shape, spacing, checked) {\n  if (spacing === void 0) {\n    spacing = 0;\n  }\n  if (checked === void 0) {\n    checked = true;\n  }\n  var size = Number(shape.style.height) - spacing * 2;\n  return {\n    x: checked ? Number(shape.style.width) + Number(shape.style.x) - spacing - size : Number(shape.style.x) + spacing,\n    y: Number(shape.style.y) + spacing,\n    width: size,\n    height: size,\n    radius: size / 2\n  };\n}\nfunction getTagShapeStyle(backgroundStyle, _a, spacing, checked) {\n  var width = _a.width,\n    height = _a.height;\n  if (spacing === void 0) {\n    spacing = 0;\n  }\n  if (checked === void 0) {\n    checked = true;\n  }\n  return {\n    x: checked ? Number(backgroundStyle.x) + spacing : Number(backgroundStyle.width) + Number(backgroundStyle.x) - width,\n    y: Number(backgroundStyle.y) + (Number(backgroundStyle.height) - height) / 2\n  };\n}\nvar Switch = /** @class */function (_super) {\n  __extends(Switch, _super);\n  function Switch(options) {\n    return _super.call(this, options, {\n      x: 0,\n      y: 0,\n      size: 'default',\n      spacing: 2,\n      checked: true,\n      disabled: false\n    }) || this;\n  }\n  Switch.prototype.render = function (attributes, container) {\n    var _this = this;\n    var size = attributes.size,\n      spacing = attributes.spacing,\n      disabled = attributes.disabled,\n      checked = attributes.checked,\n      unCheckedChildren = attributes.unCheckedChildren,\n      checkedChildren = attributes.checkedChildren;\n    var group = select(container).maybeAppendByClassName('switch-content', 'g').node();\n    var bounds = group.getLocalBounds();\n    var _a = get(SIZE_STYLE, size, SIZE_STYLE.default),\n      sizeStyle = _a.sizeStyle,\n      tagStyle = _a.tagStyle;\n    // 其他统一属性\n    var cursor = disabled ? 'no-drop' : 'pointer';\n    var color = checked ? OPTION_COLOR : CLOSE_COLOR;\n    // 背景位置大小配置\n    var backgroundStyle = sizeStyle;\n    // Tag 配置, 创建\n    var tagCfg = checked ? checkedChildren : unCheckedChildren;\n    if (checkedChildren || unCheckedChildren) {\n      select(group).maybeAppendByClassName('switch-tag', function () {\n        return new Tag({});\n      }).call(function (selection) {\n        var tagShape = selection.node();\n        tagShape.update(__assign(__assign({\n          cursor: cursor,\n          backgroundStyle: null,\n          text: false,\n          marker: false\n        }, tagStyle), tagCfg));\n        // 增加 整体宽度 需要对 tag 提前渲染获得 width 然后通过 width 计算 x 的位置\n        // @ts-ignore\n        var _a = (tagShape === null || tagShape === void 0 ? void 0 : tagShape.getLocalBounds()) || {},\n          max = _a.max,\n          min = _a.min;\n        var width = max[0] - min[0] + sizeStyle.radius;\n        var height = max[1] - min[1];\n        // 计算获得背景宽度\n        var backgroundWidth = Math.max(width + sizeStyle.height + 2, sizeStyle.width);\n        backgroundStyle = __assign(__assign({}, sizeStyle), {\n          width: backgroundWidth\n        });\n        tagShape.update(getTagShapeStyle({\n          x: bounds.min[0],\n          y: bounds.min[1],\n          width: backgroundWidth,\n          height: backgroundStyle.height\n        }, {\n          width: width,\n          height: height\n        }, backgroundStyle.radius, checked));\n      });\n    }\n    // 背景 组件\n    var backgroundShape = select(group).maybeAppendByClassName('switch-background', 'rect').styles(__assign({\n      zIndex: (group.style.zIndex || 0) - 1,\n      x: bounds.min[0],\n      y: bounds.min[1],\n      fill: color,\n      cursor: cursor,\n      fillOpacity: disabled ? 0.4 : 1\n    }, backgroundStyle)).node();\n    // 背景阴影动效 组件\n    var backgroundStrokeShape = select(group).maybeAppendByClassName('switch-background-stroke', 'rect').styles(__assign({\n      zIndex: (group.style.zIndex || 0) - 2,\n      x: bounds.min[0],\n      y: bounds.min[1],\n      stroke: color,\n      lineWidth: 0\n    }, backgroundStyle)).node();\n    // 控件 组件\n    select(group).maybeAppendByClassName('switch-handle', 'rect').styles({\n      fill: '#fff',\n      cursor: cursor\n    }).call(function (selection) {\n      var _a, _b;\n      var handleShape = selection.node();\n      // 动画添加 通过获取 开启 和 关闭的 x 来实现动画效果\n      var newHandleShapeStyle = getHandleShapeStyle(backgroundShape, spacing, checked);\n      var oldHandleShapeStyle = getHandleShapeStyle(backgroundShape, spacing, !checked);\n      if (handleShape.attr('x') && !isEqual(newHandleShapeStyle, oldHandleShapeStyle) && _this.checked !== checked) {\n        // 调整控件 和 tag 位置\n        handleShape.attr(oldHandleShapeStyle);\n        // 清理之前的动画\n        (_a = handleShape.getAnimations()[0]) === null || _a === void 0 ? void 0 : _a.cancel();\n        (_b = backgroundStrokeShape.getAnimations()[0]) === null || _b === void 0 ? void 0 : _b.cancel();\n        // 控件组建变化添加动画 动画为 原 x -> 新 x\n        handleShape.animate([{\n          x: oldHandleShapeStyle.x\n        }, {\n          x: newHandleShapeStyle.x\n        }], {\n          duration: 120,\n          fill: 'both'\n        });\n        // 动效组件变化添加动画 动画为 由内向外的 渐淡扩散\n        backgroundStrokeShape.animate([{\n          lineWidth: 0,\n          strokeOpacity: 0.5\n        }, {\n          lineWidth: 14,\n          strokeOpacity: 0\n        }], {\n          duration: 400,\n          easing: 'ease-on'\n        });\n      } else {\n        handleShape.attr(newHandleShapeStyle);\n      }\n    });\n    this.checked = !!checked;\n  };\n  /**\n   * 组件 switch\n   */\n  Switch.tag = 'switch';\n  return Switch;\n}(Component);\nexport { Switch };","map":{"version":3,"names":["get","isEqual","Component","select","Tag","SIZE_STYLE","OPTION_COLOR","CLOSE_COLOR","getHandleShapeStyle","shape","spacing","checked","size","Number","style","height","x","width","y","radius","getTagShapeStyle","backgroundStyle","_a","Switch","_super","__extends","options","call","disabled","prototype","render","attributes","container","_this","unCheckedChildren","checkedChildren","group","maybeAppendByClassName","node","bounds","getLocalBounds","default","sizeStyle","tagStyle","cursor","color","tagCfg","selection","tagShape","update","__assign","text","marker","max","min","backgroundWidth","Math","backgroundShape","styles","zIndex","fill","fillOpacity","backgroundStrokeShape","stroke","lineWidth","handleShape","newHandleShapeStyle","oldHandleShapeStyle","attr","getAnimations","cancel","_b","animate","duration","strokeOpacity","easing","tag"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/switch/index.ts"],"sourcesContent":["import { get, isEqual } from '@antv/util';\nimport { Component } from '../../core';\nimport type { Group, Rect } from '../../shapes';\nimport { select } from '../../util';\nimport { Tag } from '../tag';\nimport { SIZE_STYLE } from './constant';\nimport type { SwitchOptions, SwitchStyleProps } from './types';\n\nexport type { SwitchStyleProps, SwitchOptions };\n\n// 开启颜色 默认\nconst OPTION_COLOR = '#1890FF';\n// 关闭颜色 默认\nconst CLOSE_COLOR = '#00000040';\n\nfunction getHandleShapeStyle(shape: Rect, spacing: number = 0, checked: boolean = true) {\n  const size = Number(shape.style.height) - spacing * 2;\n\n  return {\n    x: checked ? Number(shape.style.width) + Number(shape.style.x) - spacing - size : Number(shape.style.x) + spacing,\n    y: Number(shape.style.y) + spacing,\n    width: size,\n    height: size,\n    radius: size / 2,\n  };\n}\n\nfunction getTagShapeStyle(\n  backgroundStyle: any,\n  { width, height }: { width: number; height: number },\n  spacing: number = 0,\n  checked: boolean = true\n) {\n  return {\n    x: checked\n      ? Number(backgroundStyle.x) + spacing\n      : Number(backgroundStyle.width) + Number(backgroundStyle.x) - width,\n    y: Number(backgroundStyle.y) + (Number(backgroundStyle.height) - height) / 2,\n  };\n}\n\nexport class Switch extends Component<SwitchStyleProps> {\n  /**\n   * 组件 switch\n   */\n  public static tag = 'switch';\n\n  /**\n   * 开关\n   */\n  private checked!: boolean;\n\n  constructor(options: SwitchOptions) {\n    super(options, {\n      x: 0,\n      y: 0,\n      size: 'default',\n      spacing: 2,\n      checked: true,\n      disabled: false,\n    });\n  }\n\n  public render(attributes: Required<SwitchStyleProps>, container: Group) {\n    const { size, spacing, disabled, checked, unCheckedChildren, checkedChildren } = attributes;\n    const group = select(container).maybeAppendByClassName('switch-content', 'g').node();\n    const bounds = group.getLocalBounds();\n\n    const { sizeStyle, tagStyle } = get(SIZE_STYLE, size, SIZE_STYLE.default);\n\n    // 其他统一属性\n    const cursor = disabled ? 'no-drop' : 'pointer';\n    const color = checked ? OPTION_COLOR : CLOSE_COLOR;\n\n    // 背景位置大小配置\n    let backgroundStyle = sizeStyle;\n\n    // Tag 配置, 创建\n    const tagCfg = checked ? checkedChildren : unCheckedChildren;\n    if (checkedChildren || unCheckedChildren) {\n      select(group)\n        .maybeAppendByClassName('switch-tag', () => new Tag({}))\n        .call((selection) => {\n          const tagShape = selection.node() as Tag;\n          tagShape.update({\n            cursor,\n            backgroundStyle: null,\n            text: false,\n            marker: false,\n            ...tagStyle,\n            ...tagCfg,\n          });\n\n          // 增加 整体宽度 需要对 tag 提前渲染获得 width 然后通过 width 计算 x 的位置\n          // @ts-ignore\n          const { max, min } = tagShape?.getLocalBounds() || {};\n          const width = max[0] - min[0] + sizeStyle.radius;\n          const height = max[1] - min[1];\n\n          // 计算获得背景宽度\n          const backgroundWidth = Math.max(width + sizeStyle.height + 2, sizeStyle.width);\n\n          backgroundStyle = {\n            ...sizeStyle,\n            width: backgroundWidth,\n          };\n\n          tagShape.update(\n            getTagShapeStyle(\n              {\n                x: bounds.min[0],\n                y: bounds.min[1],\n                width: backgroundWidth,\n                height: backgroundStyle.height,\n              },\n              { width, height },\n              backgroundStyle.radius,\n              checked\n            )\n          );\n        });\n    }\n\n    // 背景 组件\n    const backgroundShape = select(group)\n      .maybeAppendByClassName('switch-background', 'rect')\n      .styles({\n        zIndex: (group.style.zIndex || 0) - 1,\n        x: bounds.min[0],\n        y: bounds.min[1],\n        fill: color,\n        cursor,\n        fillOpacity: disabled ? 0.4 : 1,\n        ...backgroundStyle,\n      })\n      .node() as Rect;\n\n    // 背景阴影动效 组件\n    const backgroundStrokeShape = select(group)\n      .maybeAppendByClassName('switch-background-stroke', 'rect')\n      .styles({\n        zIndex: (group.style.zIndex || 0) - 2,\n        x: bounds.min[0],\n        y: bounds.min[1],\n        stroke: color,\n        lineWidth: 0,\n        ...backgroundStyle,\n      })\n      .node() as Rect;\n\n    // 控件 组件\n    select(group)\n      .maybeAppendByClassName('switch-handle', 'rect')\n      .styles({\n        fill: '#fff',\n        cursor,\n      })\n      .call((selection) => {\n        const handleShape = selection.node() as Rect;\n\n        // 动画添加 通过获取 开启 和 关闭的 x 来实现动画效果\n        const newHandleShapeStyle = getHandleShapeStyle(backgroundShape as any, spacing, checked);\n        const oldHandleShapeStyle = getHandleShapeStyle(backgroundShape as any, spacing, !checked);\n        if (handleShape.attr('x') && !isEqual(newHandleShapeStyle, oldHandleShapeStyle) && this.checked !== checked) {\n          // 调整控件 和 tag 位置\n          handleShape.attr(oldHandleShapeStyle);\n\n          // 清理之前的动画\n          handleShape.getAnimations()[0]?.cancel();\n          backgroundStrokeShape.getAnimations()[0]?.cancel();\n\n          // 控件组建变化添加动画 动画为 原 x -> 新 x\n          handleShape.animate([{ x: oldHandleShapeStyle.x }, { x: newHandleShapeStyle.x }], {\n            duration: 120,\n            fill: 'both',\n          });\n\n          // 动效组件变化添加动画 动画为 由内向外的 渐淡扩散\n          backgroundStrokeShape.animate(\n            [\n              { lineWidth: 0, strokeOpacity: 0.5 },\n              { lineWidth: 14, strokeOpacity: 0 },\n            ],\n            {\n              duration: 400,\n              easing: 'ease-on',\n            }\n          );\n        } else {\n          handleShape.attr(newHandleShapeStyle);\n        }\n      });\n\n    this.checked = !!checked;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}