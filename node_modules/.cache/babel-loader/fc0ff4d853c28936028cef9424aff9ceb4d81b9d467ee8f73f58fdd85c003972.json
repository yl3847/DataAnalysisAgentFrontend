{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { inferredColumn, constant } from './utils/helper';\n/**\n * Add zero constant encode for y channel.\n */\nexport const MaybeZeroY = () => {\n  return (I, mark) => {\n    const {\n      encode\n    } = mark;\n    const {\n      y\n    } = encode;\n    if (y !== undefined) return [I, mark];\n    return [I, deepMix({}, mark, {\n      encode: {\n        y: inferredColumn(constant(I, 0))\n      },\n      scale: {\n        y: {\n          guide: null\n        }\n      }\n    })];\n  };\n};\nMaybeZeroY.props = {};","map":{"version":3,"names":["deepMix","inferredColumn","constant","MaybeZeroY","I","mark","encode","y","undefined","scale","guide","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/maybeZeroY.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { TransformComponent as TC } from '../runtime';\nimport { inferredColumn, constant } from './utils/helper';\n\nexport type MaybeZeroYOptions = Record<string, never>;\n\n/**\n * Add zero constant encode for y channel.\n */\nexport const MaybeZeroY: TC<MaybeZeroYOptions> = () => {\n  return (I, mark) => {\n    const { encode } = mark;\n    const { y } = encode;\n    if (y !== undefined) return [I, mark];\n    return [\n      I,\n      deepMix({}, mark, {\n        encode: { y: inferredColumn(constant(I, 0)) },\n        scale: { y: { guide: null } },\n      }),\n    ];\n  };\n};\n\nMaybeZeroY.props = {};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,cAAc,EAAEC,QAAQ,QAAQ,gBAAgB;AAIzD;;;AAGA,OAAO,MAAMC,UAAU,GAA0BA,CAAA,KAAK;EACpD,OAAO,CAACC,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC;IAAM,CAAE,GAAGD,IAAI;IACvB,MAAM;MAAEE;IAAC,CAAE,GAAGD,MAAM;IACpB,IAAIC,CAAC,KAAKC,SAAS,EAAE,OAAO,CAACJ,CAAC,EAAEC,IAAI,CAAC;IACrC,OAAO,CACLD,CAAC,EACDJ,OAAO,CAAC,EAAE,EAAEK,IAAI,EAAE;MAChBC,MAAM,EAAE;QAAEC,CAAC,EAAEN,cAAc,CAACC,QAAQ,CAACE,CAAC,EAAE,CAAC,CAAC;MAAC,CAAE;MAC7CK,KAAK,EAAE;QAAEF,CAAC,EAAE;UAAEG,KAAK,EAAE;QAAI;MAAE;KAC5B,CAAC,CACH;EACH,CAAC;AACH,CAAC;AAEDP,UAAU,CAACQ,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}