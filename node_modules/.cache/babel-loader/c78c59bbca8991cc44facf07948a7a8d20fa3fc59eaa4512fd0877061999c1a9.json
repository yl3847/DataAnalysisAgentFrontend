{"ast":null,"code":"const SPEED_DIVISOR = 800;\nconst DEFAULTS_LAYOUT_OPTIONS = {\n  iterations: 10,\n  height: 10,\n  width: 10,\n  speed: 100,\n  gravity: 10,\n  k: 5\n};\nexport const radialNonoverlapForce = (graph, options) => {\n  const mergedOptions = Object.assign(Object.assign({}, DEFAULTS_LAYOUT_OPTIONS), options);\n  const {\n    positions,\n    iterations,\n    width,\n    k,\n    speed = 100,\n    strictRadial,\n    focusIdx,\n    radii = [],\n    nodeSizeFunc\n  } = mergedOptions;\n  const nodes = graph.getAllNodes();\n  const disp = [];\n  const maxDisplace = width / 10;\n  for (let i = 0; i < iterations; i++) {\n    positions.forEach((_, k) => {\n      disp[k] = {\n        x: 0,\n        y: 0\n      };\n    });\n    // 给重叠的节点增加斥力\n    getRepulsion(nodes, positions, disp, k, radii, nodeSizeFunc);\n    updatePositions(positions, disp, speed, strictRadial, focusIdx, maxDisplace, width, radii);\n  }\n  return positions;\n};\nconst getRepulsion = (nodes, positions, disp, k, radii, nodeSizeFunc) => {\n  positions.forEach((v, i) => {\n    disp[i] = {\n      x: 0,\n      y: 0\n    };\n    positions.forEach((u, j) => {\n      if (i === j) {\n        return;\n      }\n      // v and u are not on the same circle, return\n      if (radii[i] !== radii[j]) {\n        return;\n      }\n      let vecx = v.x - u.x;\n      let vecy = v.y - u.y;\n      let vecLength = Math.sqrt(vecx * vecx + vecy * vecy);\n      if (vecLength === 0) {\n        vecLength = 1;\n        const sign = i > j ? 1 : -1;\n        vecx = 0.01 * sign;\n        vecy = 0.01 * sign;\n      }\n      // these two nodes overlap\n      if (vecLength < nodeSizeFunc(nodes[i]) / 2 + nodeSizeFunc(nodes[j]) / 2) {\n        const common = k * k / vecLength;\n        disp[i].x += vecx / vecLength * common;\n        disp[i].y += vecy / vecLength * common;\n      }\n    });\n  });\n};\nconst updatePositions = (positions, disp, speed, strictRadial, focusIdx, maxDisplace, width, radii) => {\n  const maxDisp = maxDisplace || width / 10;\n  if (strictRadial) {\n    disp.forEach((di, i) => {\n      const vx = positions[i].x - positions[focusIdx].x;\n      const vy = positions[i].y - positions[focusIdx].y;\n      const vLength = Math.sqrt(vx * vx + vy * vy);\n      let vpx = vy / vLength;\n      let vpy = -vx / vLength;\n      const diLength = Math.sqrt(di.x * di.x + di.y * di.y);\n      let alpha = Math.acos((vpx * di.x + vpy * di.y) / diLength);\n      if (alpha > Math.PI / 2) {\n        alpha -= Math.PI / 2;\n        vpx *= -1;\n        vpy *= -1;\n      }\n      const tdispLength = Math.cos(alpha) * diLength;\n      di.x = vpx * tdispLength;\n      di.y = vpy * tdispLength;\n    });\n  }\n  // move\n  positions.forEach((n, i) => {\n    if (i === focusIdx) {\n      return;\n    }\n    const distLength = Math.sqrt(disp[i].x * disp[i].x + disp[i].y * disp[i].y);\n    if (distLength > 0 && i !== focusIdx) {\n      const limitedDist = Math.min(maxDisp * (speed / SPEED_DIVISOR), distLength);\n      n.x += disp[i].x / distLength * limitedDist;\n      n.y += disp[i].y / distLength * limitedDist;\n      if (strictRadial) {\n        let vx = n.x - positions[focusIdx].x;\n        let vy = n.y - positions[focusIdx].y;\n        const nfDis = Math.sqrt(vx * vx + vy * vy);\n        vx = vx / nfDis * radii[i];\n        vy = vy / nfDis * radii[i];\n        n.x = positions[focusIdx].x + vx;\n        n.y = positions[focusIdx].y + vy;\n      }\n    }\n  });\n  return positions;\n};","map":{"version":3,"names":["SPEED_DIVISOR","DEFAULTS_LAYOUT_OPTIONS","iterations","height","width","speed","gravity","k","radialNonoverlapForce","graph","options","mergedOptions","Object","assign","positions","strictRadial","focusIdx","radii","nodeSizeFunc","nodes","getAllNodes","disp","maxDisplace","i","forEach","_","x","y","getRepulsion","updatePositions","v","u","j","vecx","vecy","vecLength","Math","sqrt","sign","common","maxDisp","di","vx","vy","vLength","vpx","vpy","diLength","alpha","acos","PI","tdispLength","cos","n","distLength","limitedDist","min","nfDis"],"sources":["../../src/radial/radial-nonoverlap-force.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}