{"ast":null,"code":"import { indexOf, size } from '@antv/util';\nimport { prettyNumber } from '../utils/pretty-number';\nexport const DEFAULT_Q = [1, 5, 2, 2.5, 4, 3];\nexport const ALL_Q = [1, 5, 2, 2.5, 4, 3, 1.5, 7, 6, 8, 9];\nconst eps = Number.EPSILON * 100;\nfunction mod(n, m) {\n  return (n % m + m) % m;\n}\nfunction round(n) {\n  return Math.round(n * 1e12) / 1e12;\n}\nfunction simplicity(q, Q, j, lmin, lmax, lstep) {\n  const n = size(Q);\n  const i = indexOf(Q, q);\n  let v = 0;\n  const m = mod(lmin, lstep);\n  if ((m < eps || lstep - m < eps) && lmin <= 0 && lmax >= 0) {\n    v = 1;\n  }\n  return 1 - i / (n - 1) - j + v;\n}\nfunction simplicityMax(q, Q, j) {\n  const n = size(Q);\n  const i = indexOf(Q, q);\n  const v = 1;\n  return 1 - i / (n - 1) - j + v;\n}\nfunction density(k, m, dMin, dMax, lMin, lMax) {\n  const r = (k - 1) / (lMax - lMin);\n  const rt = (m - 1) / (Math.max(lMax, dMax) - Math.min(dMin, lMin));\n  return 2 - Math.max(r / rt, rt / r);\n}\nfunction densityMax(k, m) {\n  if (k >= m) {\n    return 2 - (k - 1) / (m - 1);\n  }\n  return 1;\n}\nfunction coverage(dMin, dMax, lMin, lMax) {\n  const range = dMax - dMin;\n  return 1 - 0.5 * ((dMax - lMax) ** 2 + (dMin - lMin) ** 2) / (0.1 * range) ** 2;\n}\nfunction coverageMax(dMin, dMax, span) {\n  const range = dMax - dMin;\n  if (span > range) {\n    const half = (span - range) / 2;\n    return 1 - half ** 2 / (0.1 * range) ** 2;\n  }\n  return 1;\n}\nfunction legibility() {\n  return 1;\n}\n/**\n * An Extension of Wilkinson's Algorithm for Position Tick Labels on Axes\n * https://www.yuque.com/preview/yuque/0/2019/pdf/185317/1546999150858-45c3b9c2-4e86-4223-bf1a-8a732e8195ed.pdf\n * @param dMin 最小值\n * @param dMax 最大值\n * @param m tick个数\n * @param onlyLoose 是否允许扩展min、max，不绝对强制，例如[3, 97]\n * @param Q nice numbers集合\n * @param w 四个优化组件的权重\n */\nexport const wilkinsonExtended = (dMin, dMax, n = 5, onlyLoose = true, Q = DEFAULT_Q, w = [0.25, 0.2, 0.5, 0.05]) => {\n  const m = n < 0 ? 0 : Math.round(n);\n  // nan 也会导致异常\n  if (Number.isNaN(dMin) || Number.isNaN(dMax) || typeof dMin !== 'number' || typeof dMax !== 'number' || !m) {\n    return [];\n  }\n  // js 极大值极小值问题，差值小于 1e-15 会导致计算出错\n  if (dMax - dMin < 1e-15 || m === 1) {\n    return [dMin];\n  }\n  const best = {\n    score: -2,\n    lmin: 0,\n    lmax: 0,\n    lstep: 0\n  };\n  let j = 1;\n  while (j < Infinity) {\n    // for (const q of Q)\n    for (let i = 0; i < Q.length; i += 1) {\n      const q = Q[i];\n      const sm = simplicityMax(q, Q, j);\n      if (w[0] * sm + w[1] + w[2] + w[3] < best.score) {\n        j = Infinity;\n        break;\n      }\n      let k = 2;\n      while (k < Infinity) {\n        const dm = densityMax(k, m);\n        if (w[0] * sm + w[1] + w[2] * dm + w[3] < best.score) {\n          break;\n        }\n        const delta = (dMax - dMin) / (k + 1) / j / q;\n        let z = Math.ceil(Math.log10(delta));\n        while (z < Infinity) {\n          const step = j * q * 10 ** z;\n          const cm = coverageMax(dMin, dMax, step * (k - 1));\n          if (w[0] * sm + w[1] * cm + w[2] * dm + w[3] < best.score) {\n            break;\n          }\n          const minStart = Math.floor(dMax / step) * j - (k - 1) * j;\n          const maxStart = Math.ceil(dMin / step) * j;\n          if (minStart <= maxStart) {\n            const count = maxStart - minStart;\n            for (let i = 0; i <= count; i += 1) {\n              const start = minStart + i;\n              const lMin = start * (step / j);\n              const lMax = lMin + step * (k - 1);\n              const lStep = step;\n              const s = simplicity(q, Q, j, lMin, lMax, lStep);\n              const c = coverage(dMin, dMax, lMin, lMax);\n              const g = density(k, m, dMin, dMax, lMin, lMax);\n              const l = legibility();\n              const score = w[0] * s + w[1] * c + w[2] * g + w[3] * l;\n              if (score > best.score && (!onlyLoose || lMin <= dMin && lMax >= dMax)) {\n                best.lmin = lMin;\n                best.lmax = lMax;\n                best.lstep = lStep;\n                best.score = score;\n              }\n            }\n          }\n          z += 1;\n        }\n        k += 1;\n      }\n    }\n    j += 1;\n  }\n  // 处理精度问题，保证这三个数没有精度问题\n  const lmax = prettyNumber(best.lmax);\n  const lmin = prettyNumber(best.lmin);\n  const lstep = prettyNumber(best.lstep);\n  // 加 round 是为处理 extended(0.94, 1, 5)\n  // 保证生成的 tickCount 没有精度问题\n  const tickCount = Math.floor(round((lmax - lmin) / lstep)) + 1;\n  const ticks = new Array(tickCount);\n  // 少用乘法：防止出现 -1.2 + 1.2 * 3 = 2.3999999999999995 的情况\n  ticks[0] = prettyNumber(lmin);\n  for (let i = 1; i < tickCount; i += 1) {\n    ticks[i] = prettyNumber(ticks[i - 1] + lstep);\n  }\n  return ticks;\n};","map":{"version":3,"names":["indexOf","size","prettyNumber","DEFAULT_Q","ALL_Q","eps","Number","EPSILON","mod","n","m","round","Math","simplicity","q","Q","j","lmin","lmax","lstep","i","v","simplicityMax","density","k","dMin","dMax","lMin","lMax","r","rt","max","min","densityMax","coverage","range","coverageMax","span","half","legibility","wilkinsonExtended","onlyLoose","w","isNaN","best","score","Infinity","length","sm","dm","delta","z","ceil","log10","step","cm","minStart","floor","maxStart","count","start","lStep","s","c","g","l","tickCount","ticks","Array"],"sources":["tick-methods/wilkinson-extended.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}