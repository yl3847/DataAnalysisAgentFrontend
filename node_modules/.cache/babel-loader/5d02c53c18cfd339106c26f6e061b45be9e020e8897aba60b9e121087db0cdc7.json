{"ast":null,"code":"export function doBFS(queue, visited, fn, navigator) {\n  while (queue.length) {\n    const node = queue.shift();\n    const abort = fn(node);\n    if (abort) {\n      return true;\n    }\n    visited.add(node.id);\n    navigator(node.id).forEach(n => {\n      if (!visited.has(n.id)) {\n        visited.add(n.id);\n        queue.push(n);\n      }\n    });\n  }\n  return false;\n}\nexport function doDFS(node, visited, fn, navigator) {\n  const abort = fn(node);\n  if (abort) {\n    return true;\n  }\n  visited.add(node.id);\n  for (const n of navigator(node.id)) {\n    if (!visited.has(n.id)) {\n      if (doDFS(n, visited, fn, navigator)) {\n        return true;\n      }\n    }\n  }\n  return false;\n}","map":{"version":3,"names":["doBFS","queue","visited","fn","navigator","length","node","shift","abort","add","id","forEach","n","has","push","doDFS"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/graphlib/src/utils/traverse.ts"],"sourcesContent":["import { ID, Node, PlainObject } from '../types';\n\nexport function doBFS<N extends PlainObject>(\n  queue: Node<N>[],\n  visited: Set<ID>,\n  fn: (node: Node<N>) => boolean | void,\n  navigator: (id: ID) => Node<N>[],\n): boolean {\n  while (queue.length) {\n    const node = queue.shift()!;\n    const abort = fn(node);\n    if (abort) {\n      return true;\n    }\n    visited.add(node.id);\n    navigator(node.id).forEach((n) => {\n      if (!visited.has(n.id)) {\n        visited.add(n.id);\n        queue.push(n);\n      }\n    });\n  }\n  return false;\n}\n\nexport function doDFS<N extends PlainObject>(\n  node: Node<N>,\n  visited: Set<ID>,\n  fn: (node: Node<N>) => boolean | void,\n  navigator: (id: ID) => Node<N>[],\n): boolean {\n  const abort = fn(node);\n  if (abort) {\n    return true;\n  }\n\n  visited.add(node.id);\n  for (const n of navigator(node.id)) {\n    if (!visited.has(n.id)) {\n      if (doDFS(n, visited, fn, navigator)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"],"mappings":"AAEA,OAAM,SAAUA,KAAKA,CACnBC,KAAgB,EAChBC,OAAgB,EAChBC,EAAqC,EACrCC,SAAgC;EAEhC,OAAOH,KAAK,CAACI,MAAM,EAAE;IACnB,MAAMC,IAAI,GAAGL,KAAK,CAACM,KAAK,EAAG;IAC3B,MAAMC,KAAK,GAAGL,EAAE,CAACG,IAAI,CAAC;IACtB,IAAIE,KAAK,EAAE;MACT,OAAO,IAAI;;IAEbN,OAAO,CAACO,GAAG,CAACH,IAAI,CAACI,EAAE,CAAC;IACpBN,SAAS,CAACE,IAAI,CAACI,EAAE,CAAC,CAACC,OAAO,CAAEC,CAAC,IAAI;MAC/B,IAAI,CAACV,OAAO,CAACW,GAAG,CAACD,CAAC,CAACF,EAAE,CAAC,EAAE;QACtBR,OAAO,CAACO,GAAG,CAACG,CAAC,CAACF,EAAE,CAAC;QACjBT,KAAK,CAACa,IAAI,CAACF,CAAC,CAAC;;IAEjB,CAAC,CAAC;;EAEJ,OAAO,KAAK;AACd;AAEA,OAAM,SAAUG,KAAKA,CACnBT,IAAa,EACbJ,OAAgB,EAChBC,EAAqC,EACrCC,SAAgC;EAEhC,MAAMI,KAAK,GAAGL,EAAE,CAACG,IAAI,CAAC;EACtB,IAAIE,KAAK,EAAE;IACT,OAAO,IAAI;;EAGbN,OAAO,CAACO,GAAG,CAACH,IAAI,CAACI,EAAE,CAAC;EACpB,KAAK,MAAME,CAAC,IAAIR,SAAS,CAACE,IAAI,CAACI,EAAE,CAAC,EAAE;IAClC,IAAI,CAACR,OAAO,CAACW,GAAG,CAACD,CAAC,CAACF,EAAE,CAAC,EAAE;MACtB,IAAIK,KAAK,CAACH,CAAC,EAAEV,OAAO,EAAEC,EAAE,EAAEC,SAAS,CAAC,EAAE;QACpC,OAAO,IAAI;;;;EAKjB,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}