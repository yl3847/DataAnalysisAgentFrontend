{"ast":null,"code":"/*!\n * @antv/g-camera-api\n * @description A simple implementation of Camera API.\n * @version 2.0.41\n * @date 7/30/2025, 1:34:37 PM\n * @author AntVis\n * @docs https://g.antv.antgroup.com/\n */\nimport { getAngle, CameraType, deg2rad, createVec3, runtime, Camera } from '@antv/g-lite';\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _callSuper from '@babel/runtime/helpers/callSuper';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport { isString, isNumber } from '@antv/util';\nimport { quat, mat4, vec3 } from 'gl-matrix';\n\n/**\n * Provides camera action & animation.\n */\nvar AdvancedCamera = /*#__PURE__*/function (_Camera) {\n  function AdvancedCamera() {\n    var _this;\n    _classCallCheck(this, AdvancedCamera);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, AdvancedCamera, [].concat(args));\n    /**\n     * switch between multiple landmarks\n     */\n    _this.landmarks = [];\n    return _this;\n  }\n  _inherits(AdvancedCamera, _Camera);\n  return _createClass(AdvancedCamera, [{\n    key: \"rotate\",\n    value:\n    /**\n     * Changes the azimuth and elevation with respect to the current camera axes\n     * @param {Number} azimuth the relative azimuth\n     * @param {Number} elevation the relative elevation\n     * @param {Number} roll the relative roll\n     */\n    function rotate(azimuth, elevation, roll) {\n      this.relElevation = getAngle(elevation);\n      this.relAzimuth = getAngle(azimuth);\n      this.relRoll = getAngle(roll);\n      this.elevation += this.relElevation;\n      this.azimuth += this.relAzimuth;\n      this.roll += this.relRoll;\n      if (this.type === CameraType.EXPLORING) {\n        var rotX = quat.setAxisAngle(quat.create(), [1, 0, 0], deg2rad((this.rotateWorld ? 1 : -1) * this.relElevation));\n        var rotY = quat.setAxisAngle(quat.create(), [0, 1, 0], deg2rad((this.rotateWorld ? 1 : -1) * this.relAzimuth));\n        var rotZ = quat.setAxisAngle(quat.create(), [0, 0, 1], deg2rad(this.relRoll));\n        var rotQ = quat.multiply(quat.create(), rotY, rotX);\n        rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n        var rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n        mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n        mat4.multiply(this.matrix, this.matrix, rotMatrix);\n        mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n      } else {\n        if (Math.abs(this.elevation) > 90) {\n          return this;\n        }\n        this.computeMatrix();\n      }\n      this._getAxes();\n      if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n        this._getPosition();\n      } else if (this.type === CameraType.TRACKING) {\n        this._getFocalPoint();\n      }\n      this._update();\n      return this;\n    }\n\n    /**\n     * 沿水平(right) & 垂直(up)平移相机\n     */\n  }, {\n    key: \"pan\",\n    value: function pan(tx, ty) {\n      var coords = createVec3(tx, ty, 0);\n      var pos = vec3.clone(this.position);\n      vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n      vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n      this._setPosition(pos);\n      this.triggerUpdate();\n      return this;\n    }\n\n    /**\n     * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n     */\n  }, {\n    key: \"dolly\",\n    value: function dolly(value) {\n      var n = this.forward;\n      var pos = vec3.clone(this.position);\n      var step = value * this.dollyingStep;\n      var updatedDistance = this.distance + value * this.dollyingStep;\n\n      // 限制视点距离范围\n      step = Math.max(Math.min(updatedDistance, this.maxDistance), this.minDistance) - this.distance;\n      pos[0] += step * n[0];\n      pos[1] += step * n[1];\n      pos[2] += step * n[2];\n      this._setPosition(pos);\n      if (this.type === CameraType.ORBITING || this.type === CameraType.EXPLORING) {\n        // 重新计算视点距离\n        this._getDistance();\n      } else if (this.type === CameraType.TRACKING) {\n        // 保持视距，移动视点位置\n        vec3.add(this.focalPoint, pos, this.distanceVector);\n      }\n      this.triggerUpdate();\n      return this;\n    }\n  }, {\n    key: \"cancelLandmarkAnimation\",\n    value: function cancelLandmarkAnimation() {\n      if (this.landmarkAnimationID !== undefined) {\n        this.canvas.cancelAnimationFrame(this.landmarkAnimationID);\n      }\n    }\n  }, {\n    key: \"createLandmark\",\n    value: function createLandmark(name) {\n      var _position$, _position$2, _focalPoint$, _focalPoint$2;\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _params$position = params.position,\n        position = _params$position === void 0 ? this.position : _params$position,\n        _params$focalPoint = params.focalPoint,\n        focalPoint = _params$focalPoint === void 0 ? this.focalPoint : _params$focalPoint,\n        roll = params.roll,\n        zoom = params.zoom;\n      var camera = new runtime.CameraContribution();\n      camera.setType(this.type, undefined);\n      camera.setPosition(position[0], (_position$ = position[1]) !== null && _position$ !== void 0 ? _position$ : this.position[1], (_position$2 = position[2]) !== null && _position$2 !== void 0 ? _position$2 : this.position[2]);\n      camera.setFocalPoint(focalPoint[0], (_focalPoint$ = focalPoint[1]) !== null && _focalPoint$ !== void 0 ? _focalPoint$ : this.focalPoint[1], (_focalPoint$2 = focalPoint[2]) !== null && _focalPoint$2 !== void 0 ? _focalPoint$2 : this.focalPoint[2]);\n      camera.setRoll(roll !== null && roll !== void 0 ? roll : this.roll);\n      camera.setZoom(zoom !== null && zoom !== void 0 ? zoom : this.zoom);\n      var landmark = {\n        name: name,\n        matrix: mat4.clone(camera.getWorldTransform()),\n        right: vec3.clone(camera.right),\n        up: vec3.clone(camera.up),\n        forward: vec3.clone(camera.forward),\n        position: vec3.clone(camera.getPosition()),\n        focalPoint: vec3.clone(camera.getFocalPoint()),\n        distanceVector: vec3.clone(camera.getDistanceVector()),\n        distance: camera.getDistance(),\n        dollyingStep: camera.getDollyingStep(),\n        azimuth: camera.getAzimuth(),\n        elevation: camera.getElevation(),\n        roll: camera.getRoll(),\n        relAzimuth: camera.relAzimuth,\n        relElevation: camera.relElevation,\n        relRoll: camera.relRoll,\n        zoom: camera.getZoom()\n      };\n      this.landmarks.push(landmark);\n      return landmark;\n    }\n  }, {\n    key: \"gotoLandmark\",\n    value: function gotoLandmark(name) {\n      var _this2 = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var landmark = isString(name) ? this.landmarks.find(function (l) {\n        return l.name === name;\n      }) : name;\n      if (landmark) {\n        var _ref = isNumber(options) ? {\n            duration: options\n          } : options,\n          _ref$easing = _ref.easing,\n          easing = _ref$easing === void 0 ? 'linear' : _ref$easing,\n          _ref$duration = _ref.duration,\n          duration = _ref$duration === void 0 ? 100 : _ref$duration,\n          _ref$easingFunction = _ref.easingFunction,\n          easingFunction = _ref$easingFunction === void 0 ? undefined : _ref$easingFunction,\n          _ref$onfinish = _ref.onfinish,\n          onfinish = _ref$onfinish === void 0 ? undefined : _ref$onfinish,\n          _ref$onframe = _ref.onframe,\n          onframe = _ref$onframe === void 0 ? undefined : _ref$onframe;\n        var epsilon = 0.01;\n\n        // cancel ongoing animation\n        this.cancelLandmarkAnimation();\n        var destPosition = landmark.position;\n        var destFocalPoint = landmark.focalPoint;\n        var destZoom = landmark.zoom;\n        var destRoll = landmark.roll;\n        var easingFunc = easingFunction || runtime.EasingFunction(easing);\n        var timeStart;\n        var end = function end() {\n          _this2.setFocalPoint(destFocalPoint);\n          _this2.setPosition(destPosition);\n          _this2.setRoll(destRoll);\n          _this2.setZoom(destZoom);\n          _this2.computeMatrix();\n          _this2.triggerUpdate();\n          onfinish === null || onfinish === void 0 || onfinish();\n        };\n        if (duration === 0) return end();\n        var _animate = function animate(timestamp) {\n          if (timeStart === undefined) {\n            timeStart = timestamp;\n          }\n          var elapsed = timestamp - timeStart;\n          if (elapsed >= duration) {\n            end();\n            return;\n          }\n          // use the same ease function in animation system\n          var t = easingFunc(elapsed / duration);\n          var interFocalPoint = vec3.create();\n          var interPosition = vec3.create();\n          var interZoom = 1;\n          var interRoll = 0;\n          vec3.lerp(interFocalPoint, _this2.focalPoint, destFocalPoint, t);\n          vec3.lerp(interPosition, _this2.position, destPosition, t);\n          interRoll = _this2.roll * (1 - t) + destRoll * t;\n          interZoom = _this2.zoom * (1 - t) + destZoom * t;\n          _this2.setFocalPoint(interFocalPoint);\n          _this2.setPosition(interPosition);\n          _this2.setRoll(interRoll);\n          _this2.setZoom(interZoom);\n          var dist = vec3.dist(interFocalPoint, destFocalPoint) + vec3.dist(interPosition, destPosition);\n          if (dist <= epsilon && destZoom === undefined && destRoll === undefined) {\n            return end();\n          }\n          _this2.computeMatrix();\n          _this2.triggerUpdate();\n          if (elapsed < duration) {\n            onframe === null || onframe === void 0 || onframe(t);\n            _this2.landmarkAnimationID = _this2.canvas.requestAnimationFrame(_animate);\n          }\n        };\n        this.canvas.requestAnimationFrame(_animate);\n      }\n    }\n\n    /**\n     * Sets the camera to a distance such that the area covered by the bounding box is viewed.\n     */\n    // shot(displayObject: DisplayObject) {\n    //   const aabb = displayObject.getBounds();\n\n    //   if (!AABB.isEmpty(aabb)) {\n    //     this.setElevation(0);\n    //     this.setAzimuth(0);\n    //     this.setRoll(0);\n\n    //     const { halfExtents, center } = aabb;\n    //     const maxDim = Math.max(halfExtents[0] * 2, halfExtents[1] * 2);\n\n    //     const cc = center.map((c: number) => Math.round(c * 1000) / 1000) as [number, number, number];\n\n    //     if (maxDim !== 0) {\n    //       const d = (1.5 * maxDim) / Math.tan(this.fov * DEG_2_RAD);\n    //       this.setPosition([cc[0], cc[1], cc[2] + d]);\n    //     }\n\n    //     this.setFocalPoint(cc);\n    //   }\n    // }\n  }]);\n}(Camera);\nruntime.CameraContribution = AdvancedCamera;\nexport { AdvancedCamera };","map":{"version":3,"names":["AdvancedCamera","_Camera","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","landmarks","_inherits","_createClass","key","value","rotate","azimuth","elevation","roll","relElevation","getAngle","relAzimuth","relRoll","type","CameraType","EXPLORING","rotX","quat","setAxisAngle","create","deg2rad","rotateWorld","rotY","rotZ","rotQ","multiply","rotMatrix","mat4","fromQuat","translate","matrix","distance","Math","abs","computeMatrix","_getAxes","ORBITING","_getPosition","TRACKING","_getFocalPoint","_update","pan","tx","ty","coords","createVec3","pos","vec3","clone","position","add","scale","right","up","_setPosition","triggerUpdate","dolly","n","forward","step","dollyingStep","updatedDistance","max","min","maxDistance","minDistance","_getDistance","focalPoint","distanceVector","cancelLandmarkAnimation","landmarkAnimationID","undefined","canvas","cancelAnimationFrame","createLandmark","name","_position$","_position$2","_focalPoint$","_focalPoint$2","params","_params$position","_params$focalPoint","zoom","camera","runtime","CameraContribution","setType","setPosition","setFocalPoint","setRoll","setZoom","landmark","getWorldTransform","getPosition","getFocalPoint","getDistanceVector","getDistance","getDollyingStep","getAzimuth","getElevation","getRoll","getZoom","push","gotoLandmark","_this2","options","isString","find","l","_ref","isNumber","duration","_ref$easing","easing","_ref$duration","_ref$easingFunction","easingFunction","_ref$onfinish","onfinish","_ref$onframe","onframe","epsilon","destPosition","destFocalPoint","destZoom","destRoll","easingFunc","EasingFunction","timeStart","end","_animate","animate","timestamp","elapsed","t","interFocalPoint","interPosition","interZoom","interRoll","lerp","dist","requestAnimationFrame","Camera"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-camera-api/src/AdvancedCamera.ts","/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-camera-api/src/index.ts"],"sourcesContent":["import {\n  Camera,\n  CameraType,\n  getAngle,\n  createVec3,\n  deg2rad,\n  runtime,\n} from '@antv/g-lite';\nimport { isString, isNumber } from '@antv/util';\nimport { mat4, quat, vec3 } from 'gl-matrix';\nimport type { vec2 } from 'gl-matrix';\nimport type { TypeEasingFunction, Landmark } from '@antv/g-lite';\n\n/**\n * Provides camera action & animation.\n */\nexport class AdvancedCamera extends Camera {\n  /**\n   * switch between multiple landmarks\n   */\n  private landmarks: Landmark[] = [];\n  private landmarkAnimationID: number | undefined;\n\n  /**\n   * Changes the azimuth and elevation with respect to the current camera axes\n   * @param {Number} azimuth the relative azimuth\n   * @param {Number} elevation the relative elevation\n   * @param {Number} roll the relative roll\n   */\n  rotate(azimuth: number, elevation: number, roll: number) {\n    this.relElevation = getAngle(elevation);\n    this.relAzimuth = getAngle(azimuth);\n    this.relRoll = getAngle(roll);\n    this.elevation += this.relElevation;\n    this.azimuth += this.relAzimuth;\n    this.roll += this.relRoll;\n\n    if (this.type === CameraType.EXPLORING) {\n      const rotX = quat.setAxisAngle(\n        quat.create(),\n        [1, 0, 0],\n        deg2rad((this.rotateWorld ? 1 : -1) * this.relElevation),\n      );\n      const rotY = quat.setAxisAngle(\n        quat.create(),\n        [0, 1, 0],\n        deg2rad((this.rotateWorld ? 1 : -1) * this.relAzimuth),\n      );\n\n      const rotZ = quat.setAxisAngle(\n        quat.create(),\n        [0, 0, 1],\n        deg2rad(this.relRoll),\n      );\n      let rotQ = quat.multiply(quat.create(), rotY, rotX);\n      rotQ = quat.multiply(quat.create(), rotQ, rotZ);\n      const rotMatrix = mat4.fromQuat(mat4.create(), rotQ);\n      mat4.translate(this.matrix, this.matrix, [0, 0, -this.distance]);\n      mat4.multiply(this.matrix, this.matrix, rotMatrix);\n      mat4.translate(this.matrix, this.matrix, [0, 0, this.distance]);\n    } else {\n      if (Math.abs(this.elevation) > 90) {\n        return this;\n      }\n      this.computeMatrix();\n    }\n\n    this._getAxes();\n    if (\n      this.type === CameraType.ORBITING ||\n      this.type === CameraType.EXPLORING\n    ) {\n      this._getPosition();\n    } else if (this.type === CameraType.TRACKING) {\n      this._getFocalPoint();\n    }\n\n    this._update();\n    return this;\n  }\n\n  /**\n   * 沿水平(right) & 垂直(up)平移相机\n   */\n  pan(tx: number, ty: number) {\n    const coords = createVec3(tx, ty, 0);\n    const pos = vec3.clone(this.position);\n\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.right, coords[0]));\n    vec3.add(pos, pos, vec3.scale(vec3.create(), this.up, coords[1]));\n\n    this._setPosition(pos);\n\n    this.triggerUpdate();\n\n    return this;\n  }\n\n  /**\n   * 沿 n 轴移动，当距离视点远时移动速度较快，离视点越近速度越慢\n   */\n  dolly(value: number) {\n    const n = this.forward;\n    const pos = vec3.clone(this.position);\n    let step = value * this.dollyingStep;\n    const updatedDistance = this.distance + value * this.dollyingStep;\n\n    // 限制视点距离范围\n    step =\n      Math.max(Math.min(updatedDistance, this.maxDistance), this.minDistance) -\n      this.distance;\n    pos[0] += step * n[0];\n    pos[1] += step * n[1];\n    pos[2] += step * n[2];\n\n    this._setPosition(pos);\n    if (\n      this.type === CameraType.ORBITING ||\n      this.type === CameraType.EXPLORING\n    ) {\n      // 重新计算视点距离\n      this._getDistance();\n    } else if (this.type === CameraType.TRACKING) {\n      // 保持视距，移动视点位置\n      vec3.add(this.focalPoint, pos, this.distanceVector);\n    }\n\n    this.triggerUpdate();\n    return this;\n  }\n\n  cancelLandmarkAnimation() {\n    if (this.landmarkAnimationID !== undefined) {\n      this.canvas.cancelAnimationFrame(this.landmarkAnimationID);\n    }\n  }\n\n  createLandmark(\n    name: string,\n    params: Partial<{\n      position: vec3 | vec2;\n      focalPoint: vec3 | vec2;\n      zoom: number;\n      roll: number;\n    }> = {},\n  ): Landmark {\n    const {\n      position = this.position,\n      focalPoint = this.focalPoint,\n      roll,\n      zoom,\n    } = params;\n\n    const camera = new runtime.CameraContribution() as AdvancedCamera;\n    camera.setType(this.type, undefined);\n    camera.setPosition(\n      position[0],\n      position[1] ?? this.position[1],\n      position[2] ?? this.position[2],\n    );\n    camera.setFocalPoint(\n      focalPoint[0],\n      focalPoint[1] ?? this.focalPoint[1],\n      focalPoint[2] ?? this.focalPoint[2],\n    );\n    camera.setRoll(roll ?? this.roll);\n    camera.setZoom(zoom ?? this.zoom);\n\n    const landmark: Landmark = {\n      name,\n      matrix: mat4.clone(camera.getWorldTransform()),\n      right: vec3.clone(camera.right),\n      up: vec3.clone(camera.up),\n      forward: vec3.clone(camera.forward),\n      position: vec3.clone(camera.getPosition()),\n      focalPoint: vec3.clone(camera.getFocalPoint()),\n      distanceVector: vec3.clone(camera.getDistanceVector()),\n      distance: camera.getDistance(),\n      dollyingStep: camera.getDollyingStep(),\n      azimuth: camera.getAzimuth(),\n      elevation: camera.getElevation(),\n      roll: camera.getRoll(),\n      relAzimuth: camera.relAzimuth,\n      relElevation: camera.relElevation,\n      relRoll: camera.relRoll,\n      zoom: camera.getZoom(),\n    };\n\n    this.landmarks.push(landmark);\n    return landmark;\n  }\n\n  gotoLandmark(\n    name: string | Landmark,\n    options:\n      | number\n      | Partial<{\n          easing: string;\n          easingFunction: TypeEasingFunction;\n          duration: number;\n          onframe: (t: number) => void;\n          onfinish: () => void;\n        }> = {},\n  ) {\n    const landmark = isString(name)\n      ? this.landmarks.find((l) => l.name === name)\n      : name;\n    if (landmark) {\n      const {\n        easing = 'linear',\n        duration = 100,\n        easingFunction = undefined,\n        onfinish = undefined,\n        onframe = undefined,\n      } = isNumber(options) ? { duration: options } : options;\n      const epsilon = 0.01;\n\n      // cancel ongoing animation\n      this.cancelLandmarkAnimation();\n\n      const destPosition = landmark.position;\n      const destFocalPoint = landmark.focalPoint;\n      const destZoom = landmark.zoom;\n      const destRoll = landmark.roll;\n\n      const easingFunc = easingFunction || runtime.EasingFunction(easing);\n\n      let timeStart: number | undefined;\n      const end = () => {\n        this.setFocalPoint(destFocalPoint);\n        this.setPosition(destPosition);\n        this.setRoll(destRoll);\n        this.setZoom(destZoom);\n        this.computeMatrix();\n        this.triggerUpdate();\n        onfinish?.();\n      };\n\n      if (duration === 0) return end();\n\n      const animate = (timestamp: number) => {\n        if (timeStart === undefined) {\n          timeStart = timestamp;\n        }\n        const elapsed = timestamp - timeStart;\n\n        if (elapsed >= duration) {\n          end();\n          return;\n        }\n        // use the same ease function in animation system\n        const t = easingFunc(elapsed / duration);\n\n        const interFocalPoint = vec3.create();\n        const interPosition = vec3.create();\n        let interZoom = 1;\n        let interRoll = 0;\n\n        vec3.lerp(interFocalPoint, this.focalPoint, destFocalPoint, t);\n        vec3.lerp(interPosition, this.position, destPosition, t);\n        interRoll = this.roll * (1 - t) + destRoll * t;\n        interZoom = this.zoom * (1 - t) + destZoom * t;\n\n        this.setFocalPoint(interFocalPoint);\n        this.setPosition(interPosition);\n        this.setRoll(interRoll);\n        this.setZoom(interZoom);\n\n        const dist =\n          vec3.dist(interFocalPoint, destFocalPoint) +\n          vec3.dist(interPosition, destPosition);\n        if (\n          dist <= epsilon &&\n          destZoom === undefined &&\n          destRoll === undefined\n        ) {\n          return end();\n        }\n\n        this.computeMatrix();\n        this.triggerUpdate();\n\n        if (elapsed < duration) {\n          onframe?.(t);\n          this.landmarkAnimationID = this.canvas.requestAnimationFrame(animate);\n        }\n      };\n\n      this.canvas.requestAnimationFrame(animate);\n    }\n  }\n\n  /**\n   * Sets the camera to a distance such that the area covered by the bounding box is viewed.\n   */\n  // shot(displayObject: DisplayObject) {\n  //   const aabb = displayObject.getBounds();\n\n  //   if (!AABB.isEmpty(aabb)) {\n  //     this.setElevation(0);\n  //     this.setAzimuth(0);\n  //     this.setRoll(0);\n\n  //     const { halfExtents, center } = aabb;\n  //     const maxDim = Math.max(halfExtents[0] * 2, halfExtents[1] * 2);\n\n  //     const cc = center.map((c: number) => Math.round(c * 1000) / 1000) as [number, number, number];\n\n  //     if (maxDim !== 0) {\n  //       const d = (1.5 * maxDim) / Math.tan(this.fov * DEG_2_RAD);\n  //       this.setPosition([cc[0], cc[1], cc[2] + d]);\n  //     }\n\n  //     this.setFocalPoint(cc);\n  //   }\n  // }\n}\n","import { runtime } from '@antv/g-lite';\nimport { AdvancedCamera } from './AdvancedCamera';\n\nexport { AdvancedCamera };\n\nruntime.CameraContribution = AdvancedCamera;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}