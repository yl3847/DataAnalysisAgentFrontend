{"ast":null,"code":"import { isBoolean } from '@antv/util';\nimport { GraphEvent } from '../constants';\nimport { add, mod, multiply } from '../utils/vector';\nimport { BasePlugin } from './base-plugin';\nimport { createPluginContainer } from './utils/dom';\n/**\n * <zh/> 网格线\n *\n * <en/> Grid line\n * @remarks\n * <zh/> 网格线插件，多用于辅助绘图\n *\n * <en/> Grid line plugin, often used to auxiliary drawing\n */\nexport class GridLine extends BasePlugin {\n  constructor(context, options) {\n    super(context, Object.assign({}, GridLine.defaultOptions, options));\n    this.$element = createPluginContainer('grid-line', true);\n    this.offset = [0, 0];\n    this.currentScale = 1;\n    this.followZoom = event => {\n      const {\n        data: {\n          scale,\n          origin\n        }\n      } = event;\n      if (!scale) return;\n      const prevScale = this.currentScale;\n      this.currentScale = scale;\n      const deltaScale = scale / prevScale;\n      const positionOffset = multiply(origin || this.context.graph.getCanvasCenter(), 1 - deltaScale);\n      const scaledSize = this.baseSize * scale;\n      const scaledOffset = multiply(this.offset, deltaScale);\n      const modulatedOffset = mod(scaledOffset, scaledSize);\n      const newOffset = add(modulatedOffset, positionOffset);\n      this.$element.style.backgroundSize = `${scaledSize}px ${scaledSize}px`;\n      this.$element.style.backgroundPosition = `${newOffset[0]}px ${newOffset[1]}px`;\n      this.offset = mod(newOffset, scaledSize);\n    };\n    this.followTranslate = event => {\n      if (!this.options.follow) return;\n      const {\n        data: {\n          translate\n        }\n      } = event;\n      if (translate) this.updateOffset(translate);\n    };\n    this.onTransform = event => {\n      const follow = this.parseFollow(this.options.follow);\n      if (follow.zoom) this.followZoom(event);\n      if (follow.translate) this.followTranslate(event);\n    };\n    const $container = this.context.canvas.getContainer();\n    $container.prepend(this.$element);\n    this.baseSize = this.options.size;\n    this.updateStyle();\n    this.bindEvents();\n  }\n  /**\n   * <zh/> 更新网格线配置\n   *\n   * <en/> Update the configuration of the grid line\n   * @param options - <zh/> 配置项 | <en/> options\n   * @internal\n   */\n  update(options) {\n    super.update(options);\n    if (options.size !== undefined) {\n      this.baseSize = options.size;\n    }\n    this.updateStyle();\n  }\n  bindEvents() {\n    const {\n      graph\n    } = this.context;\n    graph.on(GraphEvent.AFTER_TRANSFORM, this.onTransform);\n  }\n  updateStyle() {\n    const {\n      stroke,\n      lineWidth,\n      border,\n      borderLineWidth,\n      borderStroke,\n      borderStyle\n    } = this.options;\n    const scaledSize = this.baseSize * this.currentScale;\n    Object.assign(this.$element.style, {\n      border: border ? `${borderLineWidth}px ${borderStyle} ${borderStroke}` : 'none',\n      backgroundImage: `linear-gradient(${stroke} ${lineWidth}px, transparent ${lineWidth}px), linear-gradient(90deg, ${stroke} ${lineWidth}px, transparent ${lineWidth}px)`,\n      backgroundSize: `${scaledSize}px ${scaledSize}px`,\n      backgroundRepeat: 'repeat'\n    });\n  }\n  updateOffset(delta) {\n    const scaledSize = this.baseSize * this.currentScale;\n    this.offset = mod(add(this.offset, delta), scaledSize);\n    this.$element.style.backgroundPosition = `${this.offset[0]}px ${this.offset[1]}px`;\n  }\n  parseFollow(follow) {\n    var _a, _b;\n    return isBoolean(follow) ? {\n      translate: follow,\n      zoom: follow\n    } : {\n      translate: (_a = follow === null || follow === void 0 ? void 0 : follow.translate) !== null && _a !== void 0 ? _a : false,\n      zoom: (_b = follow === null || follow === void 0 ? void 0 : follow.zoom) !== null && _b !== void 0 ? _b : false\n    };\n  }\n  /**\n   * <zh/> 销毁网格线\n   *\n   * <en/> Destroy the grid line\n   * @internal\n   */\n  destroy() {\n    this.context.graph.off(GraphEvent.AFTER_TRANSFORM, this.onTransform);\n    this.$element.remove();\n    super.destroy();\n  }\n}\nGridLine.defaultOptions = {\n  border: true,\n  borderLineWidth: 1,\n  borderStroke: '#eee',\n  borderStyle: 'solid',\n  lineWidth: 1,\n  size: 20,\n  stroke: '#eee'\n};","map":{"version":3,"names":["isBoolean","GraphEvent","add","mod","multiply","BasePlugin","createPluginContainer","GridLine","constructor","context","options","Object","assign","defaultOptions","$element","offset","currentScale","followZoom","event","data","scale","origin","prevScale","deltaScale","positionOffset","graph","getCanvasCenter","scaledSize","baseSize","scaledOffset","modulatedOffset","newOffset","style","backgroundSize","backgroundPosition","followTranslate","follow","translate","updateOffset","onTransform","parseFollow","zoom","$container","canvas","getContainer","prepend","size","updateStyle","bindEvents","update","undefined","on","AFTER_TRANSFORM","stroke","lineWidth","border","borderLineWidth","borderStroke","borderStyle","backgroundImage","backgroundRepeat","delta","_a","_b","destroy","off","remove"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/grid-line.ts"],"sourcesContent":["import { isBoolean } from '@antv/util';\nimport { GraphEvent } from '../constants';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { IViewportEvent, Point } from '../types';\nimport { ViewportEvent } from '../utils/event';\nimport { add, mod, multiply } from '../utils/vector';\nimport { BasePlugin, BasePluginOptions } from './base-plugin';\nimport { createPluginContainer } from './utils/dom';\n\n/**\n * <zh/> 网格线配置项\n *\n * <en/> Grid line options\n */\nexport interface GridLineOptions extends BasePluginOptions {\n  /**\n   * <zh/> 网格线颜色\n   *\n   * <en/> Grid line color\n   * @defaultValue '#0001'\n   */\n  stroke?: string;\n  /**\n   * <zh/> 网格线宽\n   *\n   * <en/> Grid line width\n   * @defaultValue 1\n   */\n  lineWidth?: number | string;\n  /**\n   * <zh/> 单个网格的大小\n   *\n   * <en/> The size of a single grid\n   * @defaultValue 20\n   */\n  size?: number;\n  /**\n   * <zh/> 是否显示边框\n   *\n   * <en/> Whether to show the border\n   * @defaultValue true\n   */\n  border?: boolean;\n  /**\n   * <zh/> 边框线宽\n   *\n   * <en/> Border line width\n   * @defaultValue 1\n   */\n  borderLineWidth?: number;\n  /**\n   * <zh/> 边框颜色\n   *\n   * <en/> Border color\n   * @defaultValue '#0001'\n   * @remarks\n   * <zh/> 完整属性定义参考 [CSS border-color](https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-color)\n   *\n   * <en/> Refer to [CSS border-color](https://developer.mozilla.org/en-US/docs/Web/CSS/border-color) for the complete property definition\n   */\n  borderStroke?: string;\n  /**\n   * <zh/> 边框样式\n   *\n   * <en/> Border style\n   * @defaultValue 'solid'\n   * @remarks\n   * <zh/> 完整属性定义参考 [CSS border-style](https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-style)\n   *\n   * <en/> Refer to [CSS border-style](https://developer.mozilla.org/en-US/docs/Web/CSS/border-style) for the complete property definition\n   */\n  borderStyle?: string;\n  /**\n   * <zh/> 是否跟随图移动\n   *\n   * <en/> Whether to follow with the graph\n   * @defaultValue false\n   */\n  follow?:\n    | boolean\n    | {\n        /**\n         * <zh/> 是否跟随图平移\n         *\n         * <en/> Whether to follow the graph translation\n         */\n        translate?: boolean;\n        /**\n         * <zh/> 是否跟随图缩放\n         *\n         * <en/> Whether to follow the graph zoom\n         */\n        zoom?: boolean;\n      };\n}\n\n/**\n * <zh/> 网格线\n *\n * <en/> Grid line\n * @remarks\n * <zh/> 网格线插件，多用于辅助绘图\n *\n * <en/> Grid line plugin, often used to auxiliary drawing\n */\nexport class GridLine extends BasePlugin<GridLineOptions> {\n  static defaultOptions: Partial<GridLineOptions> = {\n    border: true,\n    borderLineWidth: 1,\n    borderStroke: '#eee',\n    borderStyle: 'solid',\n    lineWidth: 1,\n    size: 20,\n    stroke: '#eee',\n  };\n\n  private $element: HTMLElement = createPluginContainer('grid-line', true);\n  private offset: Point = [0, 0];\n  private currentScale: number = 1;\n  private baseSize: number;\n\n  constructor(context: RuntimeContext, options: GridLineOptions) {\n    super(context, Object.assign({}, GridLine.defaultOptions, options));\n\n    const $container = this.context.canvas.getContainer()!;\n    $container.prepend(this.$element);\n\n    this.baseSize = this.options.size;\n\n    this.updateStyle();\n    this.bindEvents();\n  }\n\n  /**\n   * <zh/> 更新网格线配置\n   *\n   * <en/> Update the configuration of the grid line\n   * @param options - <zh/> 配置项 | <en/> options\n   * @internal\n   */\n  public update(options: Partial<GridLineOptions>) {\n    super.update(options);\n\n    if (options.size !== undefined) {\n      this.baseSize = options.size;\n    }\n\n    this.updateStyle();\n  }\n\n  private bindEvents() {\n    const { graph } = this.context;\n    graph.on(GraphEvent.AFTER_TRANSFORM, this.onTransform);\n  }\n\n  private updateStyle() {\n    const { stroke, lineWidth, border, borderLineWidth, borderStroke, borderStyle } = this.options;\n\n    const scaledSize = this.baseSize * this.currentScale;\n\n    Object.assign(this.$element.style, {\n      border: border ? `${borderLineWidth}px ${borderStyle} ${borderStroke}` : 'none',\n      backgroundImage: `linear-gradient(${stroke} ${lineWidth}px, transparent ${lineWidth}px), linear-gradient(90deg, ${stroke} ${lineWidth}px, transparent ${lineWidth}px)`,\n      backgroundSize: `${scaledSize}px ${scaledSize}px`,\n      backgroundRepeat: 'repeat',\n    });\n  }\n\n  private updateOffset(delta: Point) {\n    const scaledSize = this.baseSize * this.currentScale;\n    this.offset = mod(add(this.offset, delta), scaledSize);\n    this.$element.style.backgroundPosition = `${this.offset[0]}px ${this.offset[1]}px`;\n  }\n\n  private followZoom = (event: IViewportEvent) => {\n    const {\n      data: { scale, origin },\n    } = event;\n\n    if (!scale) return;\n\n    const prevScale = this.currentScale;\n    this.currentScale = scale;\n\n    const deltaScale = scale / prevScale;\n    const positionOffset = multiply(origin || this.context.graph.getCanvasCenter(), 1 - deltaScale);\n    const scaledSize = this.baseSize * scale;\n\n    const scaledOffset = multiply(this.offset, deltaScale);\n    const modulatedOffset = mod(scaledOffset, scaledSize);\n    const newOffset = add(modulatedOffset, positionOffset);\n\n    this.$element.style.backgroundSize = `${scaledSize}px ${scaledSize}px`;\n    this.$element.style.backgroundPosition = `${newOffset[0]}px ${newOffset[1]}px`;\n\n    this.offset = mod(newOffset, scaledSize);\n  };\n\n  private followTranslate = (event: IViewportEvent) => {\n    if (!this.options.follow) return;\n    const {\n      data: { translate },\n    } = event;\n    if (translate) this.updateOffset(translate);\n  };\n\n  private parseFollow(follow: GridLineOptions['follow']): { translate: boolean; zoom: boolean } {\n    return isBoolean(follow)\n      ? { translate: follow, zoom: follow }\n      : { translate: follow?.translate ?? false, zoom: follow?.zoom ?? false };\n  }\n\n  private onTransform = (event: ViewportEvent) => {\n    const follow = this.parseFollow(this.options.follow);\n\n    if (follow.zoom) this.followZoom(event);\n    if (follow.translate) this.followTranslate(event);\n  };\n\n  /**\n   * <zh/> 销毁网格线\n   *\n   * <en/> Destroy the grid line\n   * @internal\n   */\n  public destroy(): void {\n    this.context.graph.off(GraphEvent.AFTER_TRANSFORM, this.onTransform);\n    this.$element.remove();\n    super.destroy();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}