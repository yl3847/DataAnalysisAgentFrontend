{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport { Component } from '../../core';\nimport { maybeAppend, subStyleProps } from '../../util';\nimport { CHECKBOX_RECT_STYLE, CHECKED_SHAPE_STYLE, LABEL_TEXT_STYLE } from './constant';\nfunction getLablePosition(shape, spacing) {\n  var bounds = shape.getLocalBounds();\n  return {\n    x: bounds.halfExtents[0] ? bounds.max[0] + (spacing || 0) : shape.style.x,\n    y: bounds.halfExtents[1] ? (bounds.min[1] + bounds.max[1]) / 2 : shape.style.y\n  };\n}\nvar Checkbox = /** @class */function (_super) {\n  __extends(Checkbox, _super);\n  function Checkbox(options) {\n    return _super.call(this, options, __assign({\n      labelText: '',\n      spacing: 4,\n      checked: false\n    }, LABEL_TEXT_STYLE)) || this;\n  }\n  Checkbox.prototype.render = function (attributes, container) {\n    var checked = attributes.checked,\n      spacing = attributes.spacing;\n    this.checked = !!checked;\n    var group = maybeAppend(container, '.checkbox-content', 'g').attr('className', 'checkbox-content').node();\n    var boxStyle = subStyleProps(attributes, 'box');\n    var checkedStyle = subStyleProps(attributes, 'checked');\n    var labelStyle = subStyleProps(attributes, 'label');\n    var checkboxStyle = __assign(__assign({}, this.checked ? CHECKBOX_RECT_STYLE.selected : CHECKBOX_RECT_STYLE.default), boxStyle);\n    var checkboxBoxCheckedStyle = __assign(__assign({}, CHECKED_SHAPE_STYLE), checkedStyle);\n    this.checkboxBoxShape = maybeAppend(group, '.checkbox-box', 'rect').styles(__assign({\n      className: 'checkbox-box',\n      zIndex: (group.style.zIndex || 0) - 1\n    }, checkboxStyle)).node();\n    maybeAppend(this.checkboxBoxShape, '.checkbox-checked', 'path').styles(__assign({\n      className: 'checkbox-box-checked',\n      stroke: '#fff'\n    }, checkboxBoxCheckedStyle));\n    var _a = getLablePosition(this.checkboxBoxShape, Number(spacing)),\n      x = _a.x,\n      y = _a.y;\n    maybeAppend(group, '.checkbox-label', 'text').styles(__assign({\n      className: 'checkbox-label',\n      x: x,\n      y: y\n    }, labelStyle));\n  };\n  /**\n   * 组件 checkbox\n   */\n  Checkbox.tag = 'checkbox';\n  return Checkbox;\n}(Component);\nexport { Checkbox };","map":{"version":3,"names":["Component","maybeAppend","subStyleProps","CHECKBOX_RECT_STYLE","CHECKED_SHAPE_STYLE","LABEL_TEXT_STYLE","getLablePosition","shape","spacing","bounds","getLocalBounds","x","halfExtents","max","style","y","min","Checkbox","_super","__extends","options","call","__assign","labelText","checked","prototype","render","attributes","container","group","attr","node","boxStyle","checkedStyle","labelStyle","checkboxStyle","selected","default","checkboxBoxCheckedStyle","checkboxBoxShape","styles","className","zIndex","stroke","_a","Number","tag"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/checkbox/index.ts"],"sourcesContent":["import { Component } from '../../core';\nimport type { Group, Rect } from '../../shapes';\nimport { maybeAppend, subStyleProps } from '../../util';\nimport type { CheckboxOptions, CheckboxStyleProps } from './types';\n\nimport { CHECKBOX_RECT_STYLE, CHECKED_SHAPE_STYLE, LABEL_TEXT_STYLE } from './constant';\n\nexport type { CheckboxStyleProps, CheckboxOptions };\n\nfunction getLablePosition(shape: Rect, spacing?: number) {\n  const bounds = shape.getLocalBounds();\n\n  return {\n    x: bounds.halfExtents[0] ? bounds.max[0] + (spacing || 0) : (shape.style.x as number),\n    y: bounds.halfExtents[1] ? (bounds.min[1] + bounds.max[1]) / 2 : (shape.style.y as number),\n  };\n}\n\nexport class Checkbox extends Component<CheckboxStyleProps> {\n  /**\n   * 组件 checkbox\n   */\n  public static tag = 'checkbox';\n\n  /**  checkbox 的背景方框组件 */\n  private checkboxBoxShape!: Rect;\n\n  /** 值 */\n  private checked!: boolean;\n\n  constructor(options: CheckboxOptions) {\n    super(options, {\n      labelText: '',\n      spacing: 4,\n      checked: false,\n      ...LABEL_TEXT_STYLE,\n    });\n  }\n\n  public render(attributes: Required<CheckboxStyleProps>, container: Group) {\n    const { checked, spacing } = attributes;\n    this.checked = !!checked;\n    const group = maybeAppend(container, '.checkbox-content', 'g').attr('className', 'checkbox-content').node();\n    const boxStyle = subStyleProps(attributes, 'box');\n    const checkedStyle = subStyleProps(attributes, 'checked');\n    const labelStyle = subStyleProps(attributes, 'label');\n    const checkboxStyle = {\n      ...(this.checked ? CHECKBOX_RECT_STYLE.selected : CHECKBOX_RECT_STYLE.default),\n      ...boxStyle,\n    };\n    const checkboxBoxCheckedStyle = { ...CHECKED_SHAPE_STYLE, ...checkedStyle };\n\n    this.checkboxBoxShape = maybeAppend(group, '.checkbox-box', 'rect')\n      .styles({\n        className: 'checkbox-box',\n        zIndex: (group.style.zIndex || 0) - 1,\n        ...checkboxStyle,\n      })\n      .node();\n\n    maybeAppend(this.checkboxBoxShape, '.checkbox-checked', 'path').styles({\n      className: 'checkbox-box-checked',\n      stroke: '#fff',\n      ...checkboxBoxCheckedStyle,\n    });\n\n    const { x, y } = getLablePosition(this.checkboxBoxShape, Number(spacing));\n\n    maybeAppend(group, '.checkbox-label', 'text').styles({\n      className: 'checkbox-label',\n      x,\n      y,\n      ...labelStyle,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}