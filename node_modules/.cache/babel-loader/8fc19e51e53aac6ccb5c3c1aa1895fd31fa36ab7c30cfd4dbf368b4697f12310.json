{"ast":null,"code":"import { register } from '@antv/g2';\nexport var reisterShape = function () {\n  /**\n   * Draw 2.5d column shape.\n   */\n  var draw25DColumn = function (style, context) {\n    return function (points) {\n      var _a = style.fill,\n        fill = _a === void 0 ? '#2888FF' : _a,\n        stroke = style.stroke,\n        _b = style.fillOpacity,\n        fillOpacity = _b === void 0 ? 1 : _b,\n        _c = style.strokeOpacity,\n        strokeOpacity = _c === void 0 ? 0.2 : _c,\n        _d = style.pitch,\n        pitch = _d === void 0 ? 8 : _d;\n      var x3 = points[1][0] - points[0][0];\n      var x4 = x3 / 2 + points[0][0];\n      var document = context.document;\n      var g = document.createElement('g', {});\n      var left = document.createElement('polygon', {\n        style: {\n          points: [[points[0][0], points[0][1]], [x4, points[1][1] + pitch], [x4, points[3][1] + pitch], [points[3][0], points[3][1]]],\n          fill: fill,\n          fillOpacity: fillOpacity,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          inset: 30\n        }\n      });\n      var right = document.createElement('polygon', {\n        style: {\n          points: [[x4, points[1][1] + pitch], [points[1][0], points[1][1]], [points[2][0], points[2][1]], [x4, points[2][1] + pitch]],\n          fill: fill,\n          fillOpacity: fillOpacity,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity\n        }\n      });\n      var top = document.createElement('polygon', {\n        style: {\n          points: [[points[0][0], points[0][1]], [x4, points[1][1] - pitch], [points[1][0], points[1][1]], [x4, points[1][1] + pitch]],\n          fill: fill,\n          fillOpacity: fillOpacity - 0.2\n        }\n      });\n      g.appendChild(right);\n      g.appendChild(left);\n      g.appendChild(top);\n      return g;\n    };\n  };\n  // @ts-ignore\n  register('shape.interval.column25D', draw25DColumn);\n};","map":{"version":3,"names":["register","reisterShape","draw25DColumn","style","context","points","_a","fill","stroke","_b","fillOpacity","_c","strokeOpacity","_d","pitch","x3","x4","document","g","createElement","left","inset","right","top","appendChild"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/plots/column/shape.js"],"sourcesContent":["import { register } from '@antv/g2';\nexport var reisterShape = function () {\n    /**\n     * Draw 2.5d column shape.\n     */\n    var draw25DColumn = function (style, context) {\n        return function (points) {\n            var _a = style.fill, fill = _a === void 0 ? '#2888FF' : _a, stroke = style.stroke, _b = style.fillOpacity, fillOpacity = _b === void 0 ? 1 : _b, _c = style.strokeOpacity, strokeOpacity = _c === void 0 ? 0.2 : _c, _d = style.pitch, pitch = _d === void 0 ? 8 : _d;\n            var x3 = points[1][0] - points[0][0];\n            var x4 = x3 / 2 + points[0][0];\n            var document = context.document;\n            var g = document.createElement('g', {});\n            var left = document.createElement('polygon', {\n                style: {\n                    points: [\n                        [points[0][0], points[0][1]],\n                        [x4, points[1][1] + pitch],\n                        [x4, points[3][1] + pitch],\n                        [points[3][0], points[3][1]],\n                    ],\n                    fill: fill,\n                    fillOpacity: fillOpacity,\n                    stroke: stroke,\n                    strokeOpacity: strokeOpacity,\n                    inset: 30,\n                },\n            });\n            var right = document.createElement('polygon', {\n                style: {\n                    points: [\n                        [x4, points[1][1] + pitch],\n                        [points[1][0], points[1][1]],\n                        [points[2][0], points[2][1]],\n                        [x4, points[2][1] + pitch],\n                    ],\n                    fill: fill,\n                    fillOpacity: fillOpacity,\n                    stroke: stroke,\n                    strokeOpacity: strokeOpacity,\n                },\n            });\n            var top = document.createElement('polygon', {\n                style: {\n                    points: [\n                        [points[0][0], points[0][1]],\n                        [x4, points[1][1] - pitch],\n                        [points[1][0], points[1][1]],\n                        [x4, points[1][1] + pitch],\n                    ],\n                    fill: fill,\n                    fillOpacity: fillOpacity - 0.2,\n                },\n            });\n            g.appendChild(right);\n            g.appendChild(left);\n            g.appendChild(top);\n            return g;\n        };\n    };\n    // @ts-ignore\n    register('shape.interval.column25D', draw25DColumn);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}