{"ast":null,"code":"import { memoize } from '../lodash';\nimport { arr2rgb } from './arr2rgb';\nvar RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\n/**\n * 创建辅助 tag 取颜色\n * @returns\n */\nfunction getTmp() {\n  var i = document.getElementById('antv-web-colour-picker');\n  if (i) {\n    return i;\n  }\n  i = document.createElement('i');\n  i.id = 'antv-web-colour-picker';\n  i.title = 'Web Colour Picker';\n  i.style.display = 'none';\n  document.body.appendChild(i);\n  return i;\n}\n/**\n * 将颜色转换到 rgb 的格式\n * @param {color} color 颜色\n * @return 将颜色转换到 '#ffffff' 的格式\n */\nfunction toRGBString(color) {\n  // 如果已经是 rgb的格式\n  if (color[0] === '#' && color.length === 7) {\n    return color;\n  }\n  var iEl = getTmp();\n  iEl.style.color = color;\n  var rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n  var matches = RGB_REG.exec(rst);\n  var cArray = matches[1].split(/\\s*,\\s*/).map(function (s) {\n    return Number(s);\n  });\n  rst = arr2rgb(cArray);\n  return rst;\n}\n/**\n * export with memoize.\n * @param color\n * @returns\n */\nexport var toRGB = memoize(toRGBString, function (color) {\n  return color;\n}, 256);","map":{"version":3,"names":["memoize","arr2rgb","RGB_REG","getTmp","i","document","getElementById","createElement","id","title","style","display","body","appendChild","toRGBString","color","length","iEl","rst","defaultView","getComputedStyle","getPropertyValue","matches","exec","cArray","split","map","s","Number","toRGB"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/color/torgb.ts"],"sourcesContent":["import { memoize } from '../lodash';\nimport { arr2rgb } from './arr2rgb';\n\nconst RGB_REG = /rgba?\\(([\\s.,0-9]+)\\)/;\n\n/**\n * 创建辅助 tag 取颜色\n * @returns\n */\nfunction getTmp(): HTMLElement {\n  let i = document.getElementById('antv-web-colour-picker');\n  if (i) {\n    return i;\n  }\n  i = document.createElement('i');\n  i.id = 'antv-web-colour-picker';\n  i.title = 'Web Colour Picker';\n  i.style.display = 'none';\n  document.body.appendChild(i);\n  return i;\n}\n\n/**\n * 将颜色转换到 rgb 的格式\n * @param {color} color 颜色\n * @return 将颜色转换到 '#ffffff' 的格式\n */\nfunction toRGBString(color: string): string {\n  // 如果已经是 rgb的格式\n  if (color[0] === '#' && color.length === 7) {\n    return color;\n  }\n\n  const iEl = getTmp();\n\n  iEl.style.color = color;\n\n  let rst = document.defaultView.getComputedStyle(iEl, '').getPropertyValue('color');\n  const matches = RGB_REG.exec(rst) as string[];\n  const cArray: number[] = matches[1].split(/\\s*,\\s*/).map((s) => Number(s));\n\n  rst = arr2rgb(cArray);\n\n  return rst;\n}\n\n/**\n * export with memoize.\n * @param color\n * @returns\n */\nexport const toRGB = memoize(toRGBString, (color) => color, 256);\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,OAAO,QAAQ,WAAW;AAEnC,IAAMC,OAAO,GAAG,uBAAuB;AAEvC;;;;AAIA,SAASC,MAAMA,CAAA;EACb,IAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,wBAAwB,CAAC;EACzD,IAAIF,CAAC,EAAE;IACL,OAAOA,CAAC;EACV;EACAA,CAAC,GAAGC,QAAQ,CAACE,aAAa,CAAC,GAAG,CAAC;EAC/BH,CAAC,CAACI,EAAE,GAAG,wBAAwB;EAC/BJ,CAAC,CAACK,KAAK,GAAG,mBAAmB;EAC7BL,CAAC,CAACM,KAAK,CAACC,OAAO,GAAG,MAAM;EACxBN,QAAQ,CAACO,IAAI,CAACC,WAAW,CAACT,CAAC,CAAC;EAC5B,OAAOA,CAAC;AACV;AAEA;;;;;AAKA,SAASU,WAAWA,CAACC,KAAa;EAChC;EACA,IAAIA,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC1C,OAAOD,KAAK;EACd;EAEA,IAAME,GAAG,GAAGd,MAAM,EAAE;EAEpBc,GAAG,CAACP,KAAK,CAACK,KAAK,GAAGA,KAAK;EAEvB,IAAIG,GAAG,GAAGb,QAAQ,CAACc,WAAW,CAACC,gBAAgB,CAACH,GAAG,EAAE,EAAE,CAAC,CAACI,gBAAgB,CAAC,OAAO,CAAC;EAClF,IAAMC,OAAO,GAAGpB,OAAO,CAACqB,IAAI,CAACL,GAAG,CAAa;EAC7C,IAAMM,MAAM,GAAaF,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,SAAS,CAAC,CAACC,GAAG,CAAC,UAACC,CAAC;IAAK,OAAAC,MAAM,CAACD,CAAC,CAAC;EAAT,CAAS,CAAC;EAE1ET,GAAG,GAAGjB,OAAO,CAACuB,MAAM,CAAC;EAErB,OAAON,GAAG;AACZ;AAEA;;;;;AAKA,OAAO,IAAMW,KAAK,GAAG7B,OAAO,CAACc,WAAW,EAAE,UAACC,KAAK;EAAK,OAAAA,KAAK;AAAL,CAAK,EAAE,GAAG,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}