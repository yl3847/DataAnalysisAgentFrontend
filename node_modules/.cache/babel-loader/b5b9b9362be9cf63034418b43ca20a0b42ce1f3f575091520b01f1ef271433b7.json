{"ast":null,"code":"// Mock data service for local testing\nexport const getMockResponse=async query=>{// Simulate network delay\nawait new Promise(resolve=>setTimeout(resolve,800));const lowerQuery=query.toLowerCase();// Mock responses based on query patterns\nif(lowerQuery.includes('teenage')||lowerQuery.includes('male')){return{success:true,message:`Found 3 teenage male applicants in the database.`,data:{rows:[{id:1,name:'John Smith',age:17,gender:'Male',state:'California'},{id:3,name:'Michael Brown',age:19,gender:'Male',state:'Texas'},{id:7,name:'Robert Garcia',age:16,gender:'Male',state:'Arizona'}],rowCount:3},charts:null};}if(lowerQuery.includes('chart')||lowerQuery.includes('distribution')){return{success:true,message:`Generated age distribution chart for all applicants.`,data:{rows:generateAgeDistribution(),rowCount:10},charts:[{type:'bar',title:'Age Distribution',data:[{age:'16-18',count:3},{age:'19-21',count:4},{age:'22-24',count:2},{age:'25+',count:1}],config:{xField:'count',yField:'age'},description:'Distribution of applicants by age group'}]};}if(lowerQuery.includes('average')||lowerQuery.includes('gender')){return{success:true,message:`Calculated average age by gender.`,data:{rows:[{gender:'Male',average_age:20.2,count:5},{gender:'Female',average_age:22.4,count:5}],rowCount:2},charts:[{type:'pie',title:'Gender Distribution',data:[{type:'Male',value:5},{type:'Female',value:5}],config:{angleField:'value',colorField:'type'}}]};}if(lowerQuery.includes('california')){return{success:true,message:`Found 4 applicants from California.`,data:{rows:[{id:1,name:'John Smith',age:17,gender:'Male',state:'California'},{id:4,name:'Sarah Davis',age:22,gender:'Female',state:'California'},{id:6,name:'Linda Martinez',age:30,gender:'Female',state:'California'},{id:10,name:'Maria Hernandez',age:19,gender:'Female',state:'California'}],rowCount:4},charts:null};}// Default response\nreturn{success:true,message:`I've processed your query: \"${query}\". Here's what I found in the sample data.`,data:{rows:generateSampleData(),rowCount:10},charts:null};};// Helper function to generate sample data\nconst generateSampleData=()=>{return[{id:1,name:'John Smith',age:17,gender:'Male',state:'California',status:'Pending'},{id:2,name:'Emily Johnson',age:25,gender:'Female',state:'New York',status:'Approved'},{id:3,name:'Michael Brown',age:19,gender:'Male',state:'Texas',status:'Pending'},{id:4,name:'Sarah Davis',age:22,gender:'Female',state:'California',status:'Approved'},{id:5,name:'James Wilson',age:18,gender:'Male',state:'Florida',status:'Rejected'},{id:6,name:'Linda Martinez',age:30,gender:'Female',state:'California',status:'Approved'},{id:7,name:'Robert Garcia',age:16,gender:'Male',state:'Arizona',status:'Pending'},{id:8,name:'Patricia Rodriguez',age:24,gender:'Female',state:'Illinois',status:'Approved'},{id:9,name:'Christopher Lee',age:21,gender:'Male',state:'Washington',status:'Pending'},{id:10,name:'Maria Hernandez',age:19,gender:'Female',state:'California',status:'Approved'}];};const generateAgeDistribution=()=>{return generateSampleData().map(person=>({name:person.name,age:person.age,age_group:person.age<=18?'16-18':person.age<=21?'19-21':person.age<=24?'22-24':'25+'}));};// Mock chart configurations\nexport const mockChartConfigs={line:{type:'line',data:Array.from({length:10},(_,i)=>({x:`Day ${i+1}`,y:Math.floor(Math.random()*100)})),config:{xField:'x',yField:'y'}},bar:{type:'bar',data:[{category:'Category A',value:30},{category:'Category B',value:45},{category:'Category C',value:28},{category:'Category D',value:50}],config:{xField:'value',yField:'category'}}};export default{getMockResponse,mockChartConfigs};","map":{"version":3,"names":["getMockResponse","query","Promise","resolve","setTimeout","lowerQuery","toLowerCase","includes","success","message","data","rows","id","name","age","gender","state","rowCount","charts","generateAgeDistribution","type","title","count","config","xField","yField","description","average_age","value","angleField","colorField","generateSampleData","status","map","person","age_group","mockChartConfigs","line","Array","from","length","_","i","x","y","Math","floor","random","bar","category"],"sources":["/Users/yizelu/Desktop/mcp/frontend/src/services/mockData.js"],"sourcesContent":["// Mock data service for local testing\nexport const getMockResponse = async (query) => {\n  // Simulate network delay\n  await new Promise(resolve => setTimeout(resolve, 800));\n\n  const lowerQuery = query.toLowerCase();\n\n  // Mock responses based on query patterns\n  if (lowerQuery.includes('teenage') || lowerQuery.includes('male')) {\n    return {\n      success: true,\n      message: `Found 3 teenage male applicants in the database.`,\n      data: {\n        rows: [\n          { id: 1, name: 'John Smith', age: 17, gender: 'Male', state: 'California' },\n          { id: 3, name: 'Michael Brown', age: 19, gender: 'Male', state: 'Texas' },\n          { id: 7, name: 'Robert Garcia', age: 16, gender: 'Male', state: 'Arizona' },\n        ],\n        rowCount: 3,\n      },\n      charts: null,\n    };\n  }\n\n  if (lowerQuery.includes('chart') || lowerQuery.includes('distribution')) {\n    return {\n      success: true,\n      message: `Generated age distribution chart for all applicants.`,\n      data: {\n        rows: generateAgeDistribution(),\n        rowCount: 10,\n      },\n      charts: [{\n        type: 'bar',\n        title: 'Age Distribution',\n        data: [\n          { age: '16-18', count: 3 },\n          { age: '19-21', count: 4 },\n          { age: '22-24', count: 2 },\n          { age: '25+', count: 1 },\n        ],\n        config: {\n          xField: 'count',\n          yField: 'age',\n        },\n        description: 'Distribution of applicants by age group',\n      }],\n    };\n  }\n\n  if (lowerQuery.includes('average') || lowerQuery.includes('gender')) {\n    return {\n      success: true,\n      message: `Calculated average age by gender.`,\n      data: {\n        rows: [\n          { gender: 'Male', average_age: 20.2, count: 5 },\n          { gender: 'Female', average_age: 22.4, count: 5 },\n        ],\n        rowCount: 2,\n      },\n      charts: [{\n        type: 'pie',\n        title: 'Gender Distribution',\n        data: [\n          { type: 'Male', value: 5 },\n          { type: 'Female', value: 5 },\n        ],\n        config: {\n          angleField: 'value',\n          colorField: 'type',\n        },\n      }],\n    };\n  }\n\n  if (lowerQuery.includes('california')) {\n    return {\n      success: true,\n      message: `Found 4 applicants from California.`,\n      data: {\n        rows: [\n          { id: 1, name: 'John Smith', age: 17, gender: 'Male', state: 'California' },\n          { id: 4, name: 'Sarah Davis', age: 22, gender: 'Female', state: 'California' },\n          { id: 6, name: 'Linda Martinez', age: 30, gender: 'Female', state: 'California' },\n          { id: 10, name: 'Maria Hernandez', age: 19, gender: 'Female', state: 'California' },\n        ],\n        rowCount: 4,\n      },\n      charts: null,\n    };\n  }\n\n  // Default response\n  return {\n    success: true,\n    message: `I've processed your query: \"${query}\". Here's what I found in the sample data.`,\n    data: {\n      rows: generateSampleData(),\n      rowCount: 10,\n    },\n    charts: null,\n  };\n};\n\n// Helper function to generate sample data\nconst generateSampleData = () => {\n  return [\n    { id: 1, name: 'John Smith', age: 17, gender: 'Male', state: 'California', status: 'Pending' },\n    { id: 2, name: 'Emily Johnson', age: 25, gender: 'Female', state: 'New York', status: 'Approved' },\n    { id: 3, name: 'Michael Brown', age: 19, gender: 'Male', state: 'Texas', status: 'Pending' },\n    { id: 4, name: 'Sarah Davis', age: 22, gender: 'Female', state: 'California', status: 'Approved' },\n    { id: 5, name: 'James Wilson', age: 18, gender: 'Male', state: 'Florida', status: 'Rejected' },\n    { id: 6, name: 'Linda Martinez', age: 30, gender: 'Female', state: 'California', status: 'Approved' },\n    { id: 7, name: 'Robert Garcia', age: 16, gender: 'Male', state: 'Arizona', status: 'Pending' },\n    { id: 8, name: 'Patricia Rodriguez', age: 24, gender: 'Female', state: 'Illinois', status: 'Approved' },\n    { id: 9, name: 'Christopher Lee', age: 21, gender: 'Male', state: 'Washington', status: 'Pending' },\n    { id: 10, name: 'Maria Hernandez', age: 19, gender: 'Female', state: 'California', status: 'Approved' },\n  ];\n};\n\nconst generateAgeDistribution = () => {\n  return generateSampleData().map(person => ({\n    name: person.name,\n    age: person.age,\n    age_group: \n      person.age <= 18 ? '16-18' :\n      person.age <= 21 ? '19-21' :\n      person.age <= 24 ? '22-24' : '25+',\n  }));\n};\n\n// Mock chart configurations\nexport const mockChartConfigs = {\n  line: {\n    type: 'line',\n    data: Array.from({ length: 10 }, (_, i) => ({\n      x: `Day ${i + 1}`,\n      y: Math.floor(Math.random() * 100),\n    })),\n    config: {\n      xField: 'x',\n      yField: 'y',\n    },\n  },\n  bar: {\n    type: 'bar',\n    data: [\n      { category: 'Category A', value: 30 },\n      { category: 'Category B', value: 45 },\n      { category: 'Category C', value: 28 },\n      { category: 'Category D', value: 50 },\n    ],\n    config: {\n      xField: 'value',\n      yField: 'category',\n    },\n  },\n};\n\nexport default {\n  getMockResponse,\n  mockChartConfigs,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}