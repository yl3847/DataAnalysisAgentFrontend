{"ast":null,"code":"/**\n * <zh/> 判断是否为边数据\n *\n * <en/> judge whether the data is edge data\n * @param data - <zh/> 元素数据 | <en/> element data\n * @returns - <zh/> 是否为边数据 | <en/> whether the data is edge data\n */\nexport function isEdgeData(data) {\n  if ('source' in data && 'target' in data) return true;\n  return false;\n}\n/**\n * <zh/> 判断是否为二维向量\n *\n * <en/> Judge whether the vector is 2d\n * @param vector - <zh/> 向量 | <en/> vector\n * @returns <zh/> 是否为二维向量 | <en/> whether the vector is 2d\n */\nexport function isVector2(vector) {\n  return vector.length === 2;\n}\n/**\n * <zh/> 判断是否为三维向量\n *\n * <en/> Judge whether the vector is 3d\n * @param vector - <zh/> 向量 | <en/> vector\n * @returns <zh/> 是否为三维向量 | <en/> whether the vector is 3d\n */\nexport function isVector3(vector) {\n  return vector.length === 3;\n}\n/**\n * <zh/> 判断是否为点\n *\n * <en/> Judge whether the point is valid\n * @param p - <zh/> 点 | <en/> point\n * @returns <zh/> 是否为点 | <en/> whether the point is valid\n */\nexport function isPoint(p) {\n  if (p instanceof Float32Array) return true;\n  if (Array.isArray(p) && (p.length === 2 || p.length === 3)) {\n    return p.every(elem => typeof elem === 'number');\n  }\n  return false;\n}","map":{"version":3,"names":["isEdgeData","data","isVector2","vector","length","isVector3","isPoint","p","Float32Array","Array","isArray","every","elem"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/is.ts"],"sourcesContent":["import type { EdgeData } from '../spec';\nimport type { ElementDatum, Point, Vector2, Vector3 } from '../types';\n\n/**\n * <zh/> 判断是否为边数据\n *\n * <en/> judge whether the data is edge data\n * @param data - <zh/> 元素数据 | <en/> element data\n * @returns - <zh/> 是否为边数据 | <en/> whether the data is edge data\n */\nexport function isEdgeData(data: Partial<ElementDatum>): data is EdgeData {\n  if ('source' in data && 'target' in data) return true;\n  return false;\n}\n\n/**\n * <zh/> 判断是否为二维向量\n *\n * <en/> Judge whether the vector is 2d\n * @param vector - <zh/> 向量 | <en/> vector\n * @returns <zh/> 是否为二维向量 | <en/> whether the vector is 2d\n */\nexport function isVector2(vector: Point): vector is Vector2 {\n  return vector.length === 2;\n}\n\n/**\n * <zh/> 判断是否为三维向量\n *\n * <en/> Judge whether the vector is 3d\n * @param vector - <zh/> 向量 | <en/> vector\n * @returns <zh/> 是否为三维向量 | <en/> whether the vector is 3d\n */\nexport function isVector3(vector: Point): vector is Vector3 {\n  return vector.length === 3;\n}\n\n/**\n * <zh/> 判断是否为点\n *\n * <en/> Judge whether the point is valid\n * @param p - <zh/> 点 | <en/> point\n * @returns <zh/> 是否为点 | <en/> whether the point is valid\n */\nexport function isPoint(p: any): p is Point {\n  if (p instanceof Float32Array) return true;\n\n  if (Array.isArray(p) && (p.length === 2 || p.length === 3)) {\n    return p.every((elem) => typeof elem === 'number');\n  }\n\n  return false;\n}\n"],"mappings":"AAGA;;;;;;;AAOA,OAAM,SAAUA,UAAUA,CAACC,IAA2B;EACpD,IAAI,QAAQ,IAAIA,IAAI,IAAI,QAAQ,IAAIA,IAAI,EAAE,OAAO,IAAI;EACrD,OAAO,KAAK;AACd;AAEA;;;;;;;AAOA,OAAM,SAAUC,SAASA,CAACC,MAAa;EACrC,OAAOA,MAAM,CAACC,MAAM,KAAK,CAAC;AAC5B;AAEA;;;;;;;AAOA,OAAM,SAAUC,SAASA,CAACF,MAAa;EACrC,OAAOA,MAAM,CAACC,MAAM,KAAK,CAAC;AAC5B;AAEA;;;;;;;AAOA,OAAM,SAAUE,OAAOA,CAACC,CAAM;EAC5B,IAAIA,CAAC,YAAYC,YAAY,EAAE,OAAO,IAAI;EAE1C,IAAIC,KAAK,CAACC,OAAO,CAACH,CAAC,CAAC,KAAKA,CAAC,CAACH,MAAM,KAAK,CAAC,IAAIG,CAAC,CAACH,MAAM,KAAK,CAAC,CAAC,EAAE;IAC1D,OAAOG,CAAC,CAACI,KAAK,CAAEC,IAAI,IAAK,OAAOA,IAAI,KAAK,QAAQ,CAAC;EACpD;EAEA,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}