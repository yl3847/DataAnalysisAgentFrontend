{"ast":null,"code":"import { Rect as GRect } from '@antv/g';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport { BaseNode } from './base-node';\n/**\n * <zh/> 矩形节点\n *\n * <en/> Rect node\n */\nexport class Rect extends BaseNode {\n  constructor(options) {\n    super(options);\n  }\n  getKeyStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    return Object.assign(Object.assign({}, super.getKeyStyle(attributes)), {\n      width,\n      height,\n      x: -width / 2,\n      y: -height / 2\n    });\n  }\n  getIconStyle(attributes) {\n    const style = super.getIconStyle(attributes);\n    const {\n      width,\n      height\n    } = this.getShape('key').attributes;\n    return style ? Object.assign({\n      width: width * ICON_SIZE_RATIO,\n      height: height * ICON_SIZE_RATIO\n    }, style) : false;\n  }\n  drawKeyShape(attributes, container) {\n    return this.upsert('key', GRect, this.getKeyStyle(attributes), container);\n  }\n}","map":{"version":3,"names":["Rect","GRect","ICON_SIZE_RATIO","BaseNode","constructor","options","getKeyStyle","attributes","width","height","getSize","Object","assign","x","y","getIconStyle","style","getShape","drawKeyShape","container","upsert"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/nodes/rect.ts"],"sourcesContent":["import type { DisplayObjectConfig, RectStyleProps as GRectStyleProps, Group } from '@antv/g';\nimport { Rect as GRect } from '@antv/g';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport type { IconStyleProps } from '../shapes';\nimport type { BaseNodeStyleProps } from './base-node';\nimport { BaseNode } from './base-node';\n\n/**\n * <zh/> 矩形节点样式配置项\n *\n * <en/> Rect node style props\n */\nexport interface RectStyleProps extends BaseNodeStyleProps {}\ntype ParsedRectStyleProps = Required<RectStyleProps>;\n\n/**\n * <zh/> 矩形节点\n *\n * <en/> Rect node\n */\nexport class Rect extends BaseNode<RectStyleProps> {\n  constructor(options: DisplayObjectConfig<RectStyleProps>) {\n    super(options);\n  }\n\n  protected getKeyStyle(attributes: ParsedRectStyleProps): GRectStyleProps {\n    const [width, height] = this.getSize(attributes);\n    return {\n      ...super.getKeyStyle(attributes),\n      width,\n      height,\n      x: -width / 2,\n      y: -height / 2,\n    };\n  }\n\n  protected getIconStyle(attributes: ParsedRectStyleProps): false | IconStyleProps {\n    const style = super.getIconStyle(attributes);\n    const { width, height } = this.getShape<GRect>('key').attributes;\n\n    return style\n      ? ({\n          width: (width as number) * ICON_SIZE_RATIO,\n          height: (height as number) * ICON_SIZE_RATIO,\n          ...style,\n        } as IconStyleProps)\n      : false;\n  }\n\n  protected drawKeyShape(attributes: ParsedRectStyleProps, container: Group): GRect | undefined {\n    return this.upsert('key', GRect, this.getKeyStyle(attributes), container);\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,IAAIC,KAAK,QAAQ,SAAS;AACvC,SAASC,eAAe,QAAQ,yBAAyB;AAGzD,SAASC,QAAQ,QAAQ,aAAa;AAUtC;;;;;AAKA,OAAM,MAAOH,IAAK,SAAQG,QAAwB;EAChDC,YAAYC,OAA4C;IACtD,KAAK,CAACA,OAAO,CAAC;EAChB;EAEUC,WAAWA,CAACC,UAAgC;IACpD,MAAM,CAACC,KAAK,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,OAAO,CAACH,UAAU,CAAC;IAChD,OAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACK,KAAK,CAACN,WAAW,CAACC,UAAU,CAAC;MAChCC,KAAK;MACLC,MAAM;MACNI,CAAC,EAAE,CAACL,KAAK,GAAG,CAAC;MACbM,CAAC,EAAE,CAACL,MAAM,GAAG;IAAC;EAElB;EAEUM,YAAYA,CAACR,UAAgC;IACrD,MAAMS,KAAK,GAAG,KAAK,CAACD,YAAY,CAACR,UAAU,CAAC;IAC5C,MAAM;MAAEC,KAAK;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACQ,QAAQ,CAAQ,KAAK,CAAC,CAACV,UAAU;IAEhE,OAAOS,KAAK,GACPL,MAAA,CAAAC,MAAA;MACCJ,KAAK,EAAGA,KAAgB,GAAGN,eAAe;MAC1CO,MAAM,EAAGA,MAAiB,GAAGP;IAAe,GACzCc,KAAK,CACU,GACpB,KAAK;EACX;EAEUE,YAAYA,CAACX,UAAgC,EAAEY,SAAgB;IACvE,OAAO,IAAI,CAACC,MAAM,CAAC,KAAK,EAAEnB,KAAK,EAAE,IAAI,CAACK,WAAW,CAACC,UAAU,CAAC,EAAEY,SAAS,CAAC;EAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}