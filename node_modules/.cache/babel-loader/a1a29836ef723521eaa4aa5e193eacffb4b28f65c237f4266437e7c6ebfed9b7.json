{"ast":null,"code":"import { LinearAxis, rotateAxis } from './axis';\n/**\n * LinearAxis component bind to y scale.\n */\nexport const AxisY = options => {\n  return (...args) => {\n    const axisY = LinearAxis(Object.assign({}, {\n      crossPadding: 10\n    }, options))(...args);\n    rotateAxis(axisY, options);\n    return axisY;\n  };\n};\nAxisY.props = Object.assign(Object.assign({}, LinearAxis.props), {\n  defaultPosition: 'left'\n});","map":{"version":3,"names":["LinearAxis","rotateAxis","AxisY","options","args","axisY","Object","assign","crossPadding","props","defaultPosition"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/component/axisY.ts"],"sourcesContent":["import { GuideComponentComponent as GCC } from '../runtime';\nimport { AxisOptions, LinearAxis, rotateAxis } from './axis';\n\nexport type AxisYOptions = AxisOptions;\n\n/**\n * LinearAxis component bind to y scale.\n */\nexport const AxisY: GCC<AxisYOptions> = (options) => {\n  return (...args) => {\n    const axisY = LinearAxis(Object.assign({}, { crossPadding: 10 }, options))(\n      ...args,\n    );\n    rotateAxis(axisY, options);\n    return axisY;\n  };\n};\n\nAxisY.props = {\n  ...LinearAxis.props,\n  defaultPosition: 'left',\n};\n"],"mappings":"AACA,SAAsBA,UAAU,EAAEC,UAAU,QAAQ,QAAQ;AAI5D;;;AAGA,OAAO,MAAMC,KAAK,GAAuBC,OAAO,IAAI;EAClD,OAAO,CAAC,GAAGC,IAAI,KAAI;IACjB,MAAMC,KAAK,GAAGL,UAAU,CAACM,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE;MAAEC,YAAY,EAAE;IAAE,CAAE,EAAEL,OAAO,CAAC,CAAC,CACxE,GAAGC,IAAI,CACR;IACDH,UAAU,CAACI,KAAK,EAAEF,OAAO,CAAC;IAC1B,OAAOE,KAAK;EACd,CAAC;AACH,CAAC;AAEDH,KAAK,CAACO,KAAK,GAAAH,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACNP,UAAU,CAACS,KAAK;EACnBC,eAAe,EAAE;AAAM,EACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}