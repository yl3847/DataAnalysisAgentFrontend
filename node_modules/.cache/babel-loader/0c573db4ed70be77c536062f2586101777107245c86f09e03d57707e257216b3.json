{"ast":null,"code":"import isArray from './is-array';\nimport isPlainObject from './is-plain-object';\nvar MAX_MIX_LEVEL = 5;\nfunction _deepMix(dist, src, level, maxLevel) {\n  level = level || 0;\n  maxLevel = maxLevel || MAX_MIX_LEVEL;\n  for (var key in src) {\n    if (src.hasOwnProperty(key)) {\n      var value = src[key];\n      if (value !== null && isPlainObject(value)) {\n        if (!isPlainObject(dist[key])) {\n          dist[key] = {};\n        }\n        if (level < maxLevel) {\n          _deepMix(dist[key], value, level + 1, maxLevel);\n        } else {\n          dist[key] = src[key];\n        }\n      } else if (isArray(value)) {\n        dist[key] = [];\n        dist[key] = dist[key].concat(value);\n      } else if (value !== undefined) {\n        dist[key] = value;\n      }\n    }\n  }\n}\n// todo 重写\nvar deepMix = function (rst) {\n  var args = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n  for (var i = 0; i < args.length; i += 1) {\n    _deepMix(rst, args[i]);\n  }\n  return rst;\n};\nexport default deepMix;","map":{"version":3,"names":["isArray","isPlainObject","MAX_MIX_LEVEL","_deepMix","dist","src","level","maxLevel","key","hasOwnProperty","value","concat","undefined","deepMix","rst","args","_i","arguments","length","i"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/node_modules/@antv/util/src/deep-mix.ts"],"sourcesContent":["import isArray from './is-array';\nimport isPlainObject from './is-plain-object';\n\nconst MAX_MIX_LEVEL = 5;\n\nfunction _deepMix(dist, src, level?, maxLevel?) {\n  level = level || 0;\n  maxLevel = maxLevel || MAX_MIX_LEVEL;\n  for (const key in src) {\n    if (src.hasOwnProperty(key)) {\n      const value = src[key];\n      if (value !== null && isPlainObject(value)) {\n        if (!isPlainObject(dist[key])) {\n          dist[key] = {};\n        }\n        if (level < maxLevel) {\n          _deepMix(dist[key], value, level + 1, maxLevel);\n        } else {\n          dist[key] = src[key];\n        }\n      } else if (isArray(value)) {\n        dist[key] = [];\n        dist[key] = dist[key].concat(value);\n      } else if (value !== undefined) {\n        dist[key] = value;\n      }\n    }\n  }\n}\n\n// todo 重写\nconst deepMix = function(rst:any, ...args:any[]) {\n  for (let i = 0; i < args.length; i += 1) {\n    _deepMix(rst, args[i]);\n  }\n  return rst;\n};\n\nexport default deepMix;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,mBAAmB;AAE7C,IAAMC,aAAa,GAAG,CAAC;AAEvB,SAASC,QAAQA,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAM,EAAEC,QAAS;EAC5CD,KAAK,GAAGA,KAAK,IAAI,CAAC;EAClBC,QAAQ,GAAGA,QAAQ,IAAIL,aAAa;EACpC,KAAK,IAAMM,GAAG,IAAIH,GAAG,EAAE;IACrB,IAAIA,GAAG,CAACI,cAAc,CAACD,GAAG,CAAC,EAAE;MAC3B,IAAME,KAAK,GAAGL,GAAG,CAACG,GAAG,CAAC;MACtB,IAAIE,KAAK,KAAK,IAAI,IAAIT,aAAa,CAACS,KAAK,CAAC,EAAE;QAC1C,IAAI,CAACT,aAAa,CAACG,IAAI,CAACI,GAAG,CAAC,CAAC,EAAE;UAC7BJ,IAAI,CAACI,GAAG,CAAC,GAAG,EAAE;;QAEhB,IAAIF,KAAK,GAAGC,QAAQ,EAAE;UACpBJ,QAAQ,CAACC,IAAI,CAACI,GAAG,CAAC,EAAEE,KAAK,EAAEJ,KAAK,GAAG,CAAC,EAAEC,QAAQ,CAAC;SAChD,MAAM;UACLH,IAAI,CAACI,GAAG,CAAC,GAAGH,GAAG,CAACG,GAAG,CAAC;;OAEvB,MAAM,IAAIR,OAAO,CAACU,KAAK,CAAC,EAAE;QACzBN,IAAI,CAACI,GAAG,CAAC,GAAG,EAAE;QACdJ,IAAI,CAACI,GAAG,CAAC,GAAGJ,IAAI,CAACI,GAAG,CAAC,CAACG,MAAM,CAACD,KAAK,CAAC;OACpC,MAAM,IAAIA,KAAK,KAAKE,SAAS,EAAE;QAC9BR,IAAI,CAACI,GAAG,CAAC,GAAGE,KAAK;;;;AAIzB;AAEA;AACA,IAAMG,OAAO,GAAG,SAAAA,CAASC,GAAO;EAAE,IAAAC,IAAA;OAAA,IAAAC,EAAA,IAAa,EAAbA,EAAA,GAAAC,SAAA,CAAAC,MAAa,EAAbF,EAAA,EAAa;IAAbD,IAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;EAChC,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;IACvChB,QAAQ,CAACW,GAAG,EAAEC,IAAI,CAACI,CAAC,CAAC,CAAC;;EAExB,OAAOL,GAAG;AACZ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}