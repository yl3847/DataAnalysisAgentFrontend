{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Timebar as TimebarComponent } from '@antv/component';\nimport { isArray, isDate, isNumber } from '@antv/util';\nimport { idOf } from '../utils/id';\nimport { parsePadding } from '../utils/padding';\nimport { BasePlugin } from './base-plugin';\nimport { createPluginCanvas } from './utils/canvas';\nconst prospectiveTimeKeys = ['timestamp', 'time', 'date', 'datetime'];\n/**\n * <zh/> 时间组件\n *\n * <en/> Timebar\n */\nexport class Timebar extends BasePlugin {\n  get padding() {\n    return parsePadding(this.options.padding);\n  }\n  constructor(context, options) {\n    super(context, Object.assign({}, Timebar.defaultOptions, options));\n    this.backup();\n    this.upsertTimebar();\n  }\n  /**\n   * <zh/> 播放\n   *\n   * <en/> Play\n   */\n  play() {\n    var _a;\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.play();\n  }\n  /**\n   * <zh/> 暂停\n   *\n   * <en/> Pause\n   */\n  pause() {\n    var _a;\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.pause();\n  }\n  /**\n   * <zh/> 前进\n   *\n   * <en/> Forward\n   */\n  forward() {\n    var _a;\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.forward();\n  }\n  /**\n   * <zh/> 后退\n   *\n   * <en/> Backward\n   */\n  backward() {\n    var _a;\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.backward();\n  }\n  /**\n   * <zh/> 重置\n   *\n   * <en/> Reset\n   */\n  reset() {\n    var _a;\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.reset();\n  }\n  /**\n   * <zh/> 更新时间条配置项\n   *\n   * <en/> Update timebar configuration options\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  update(options) {\n    super.update(options);\n    this.backup();\n    this.upsertTimebar();\n  }\n  /**\n   * <zh/> 备份数据\n   *\n   * <en/> Backup data\n   */\n  backup() {\n    this.originalData = shallowCopy(this.context.graph.getData());\n  }\n  upsertTimebar() {\n    const {\n      canvas\n    } = this.context;\n    const _a = this.options,\n      {\n        onChange,\n        timebarType,\n        data,\n        x,\n        y,\n        width,\n        height,\n        mode\n      } = _a,\n      restOptions = __rest(_a, [\"onChange\", \"timebarType\", \"data\", \"x\", \"y\", \"width\", \"height\", \"mode\"]);\n    const canvasSize = canvas.getSize();\n    const [top] = this.padding;\n    this.upsertCanvas().ready.then(() => {\n      var _a;\n      const style = Object.assign(Object.assign({\n        x: canvasSize[0] / 2 - width / 2,\n        y: top,\n        onChange: value => {\n          const range = (isArray(value) ? value : [value, value]).map(time => isDate(time) ? time.getTime() : time);\n          if (this.options.mode === 'modify') this.filterElements(range);else this.hiddenElements(range);\n          onChange === null || onChange === void 0 ? void 0 : onChange(range);\n        }\n      }, restOptions), {\n        data: data.map(datum => isNumber(datum) ? {\n          time: datum,\n          value: 0\n        } : datum),\n        width,\n        height,\n        type: timebarType\n      });\n      if (!this.timebar) {\n        this.timebar = new TimebarComponent({\n          style\n        });\n        (_a = this.canvas) === null || _a === void 0 ? void 0 : _a.appendChild(this.timebar);\n      } else {\n        this.timebar.update(style);\n      }\n    });\n  }\n  upsertCanvas() {\n    if (this.canvas) return this.canvas;\n    const {\n      className,\n      height,\n      position\n    } = this.options;\n    const graphCanvas = this.context.canvas;\n    const [width] = graphCanvas.getSize();\n    const [top,, bottom] = this.padding;\n    const [$container, canvas] = createPluginCanvas({\n      width,\n      height: height + top + bottom,\n      graphCanvas,\n      className: 'timebar',\n      placement: position\n    });\n    this.container = $container;\n    if (className) $container.classList.add(className);\n    this.canvas = canvas;\n    return this.canvas;\n  }\n  filterElements(range) {\n    return __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      if (!this.originalData) return;\n      const {\n        elementTypes,\n        getTime\n      } = this.options;\n      const {\n        graph,\n        element\n      } = this.context;\n      const newData = shallowCopy(this.originalData);\n      elementTypes.forEach(type => {\n        const key = `${type}s`;\n        newData[key] = (this.originalData[key] || []).filter(datum => {\n          const time = getTime(datum);\n          if (match(time, range)) return true;\n          return false;\n        });\n      });\n      const nodeLikeIds = [...newData.nodes, ...newData.combos].map(datum => idOf(datum));\n      newData.edges = newData.edges.filter(edge => {\n        const source = edge.source;\n        const target = edge.target;\n        return nodeLikeIds.includes(source) && nodeLikeIds.includes(target);\n      });\n      graph.setData(newData);\n      yield (_a = element.draw({\n        animation: false,\n        silence: true\n      })) === null || _a === void 0 ? void 0 : _a.finished;\n    });\n  }\n  hiddenElements(range) {\n    const {\n      graph\n    } = this.context;\n    const {\n      elementTypes,\n      getTime\n    } = this.options;\n    const hideElementId = [];\n    const showElementId = [];\n    elementTypes.forEach(elementType => {\n      var _a;\n      const key = `${elementType}s`;\n      const elementData = ((_a = this.originalData) === null || _a === void 0 ? void 0 : _a[key]) || [];\n      elementData.forEach(elementDatum => {\n        const id = idOf(elementDatum);\n        const time = getTime(elementDatum);\n        if (match(time, range)) showElementId.push(id);else hideElementId.push(id);\n      });\n    });\n    graph.hideElement(hideElementId, false);\n    graph.showElement(showElementId, false);\n  }\n  /**\n   * <zh/> 销毁时间条\n   *\n   * <en/> Destroy the timebar\n   * @internal\n   */\n  destroy() {\n    var _a, _b, _c;\n    const {\n      graph\n    } = this.context;\n    this.originalData && graph.setData(Object.assign({}, this.originalData));\n    (_a = this.timebar) === null || _a === void 0 ? void 0 : _a.destroy();\n    (_b = this.canvas) === null || _b === void 0 ? void 0 : _b.destroy();\n    (_c = this.container) === null || _c === void 0 ? void 0 : _c.remove();\n    this.originalData = undefined;\n    this.container = undefined;\n    this.timebar = undefined;\n    this.canvas = undefined;\n    super.destroy();\n  }\n}\nTimebar.defaultOptions = {\n  position: 'bottom',\n  enable: true,\n  timebarType: 'time',\n  className: 'g6-timebar',\n  width: 450,\n  height: 60,\n  zIndex: 3,\n  elementTypes: ['node'],\n  padding: 10,\n  mode: 'modify',\n  getTime: datum => inferTime(datum, prospectiveTimeKeys, undefined),\n  loop: false\n};\nconst shallowCopy = data => {\n  const {\n    nodes = [],\n    edges = [],\n    combos = []\n  } = data;\n  return {\n    nodes: [...nodes],\n    edges: [...edges],\n    combos: [...combos]\n  };\n};\nconst match = (time, range) => {\n  if (isNumber(range)) return time === range;\n  const [start, end] = range;\n  return time >= start && time <= end;\n};\nconst inferTime = (datum, optionsKeys, defaultValue) => {\n  var _a;\n  for (let i = 0; i < optionsKeys.length; i++) {\n    const key = optionsKeys[i];\n    const val = (_a = datum.data) === null || _a === void 0 ? void 0 : _a[key];\n    if (val) return val;\n  }\n  return defaultValue;\n};","map":{"version":3,"names":["Timebar","TimebarComponent","isArray","isDate","isNumber","idOf","parsePadding","BasePlugin","createPluginCanvas","prospectiveTimeKeys","padding","options","constructor","context","Object","assign","defaultOptions","backup","upsertTimebar","play","_a","timebar","pause","forward","backward","reset","update","originalData","shallowCopy","graph","getData","canvas","onChange","timebarType","data","x","y","width","height","mode","restOptions","__rest","canvasSize","getSize","top","upsertCanvas","ready","then","style","value","range","map","time","getTime","filterElements","hiddenElements","datum","type","appendChild","className","position","graphCanvas","bottom","$container","placement","container","classList","add","elementTypes","element","newData","forEach","key","filter","match","nodeLikeIds","nodes","combos","edges","edge","source","target","includes","setData","draw","animation","silence","finished","hideElementId","showElementId","elementType","elementData","elementDatum","id","push","hideElement","showElement","destroy","_b","_c","remove","undefined","enable","zIndex","inferTime","loop","start","end","optionsKeys","defaultValue","i","length","val"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/timebar.ts"],"sourcesContent":["import { Timebar as TimebarComponent } from '@antv/component';\nimport { Canvas } from '@antv/g';\nimport { isArray, isDate, isNumber } from '@antv/util';\nimport { idOf } from '../utils/id';\nimport { parsePadding } from '../utils/padding';\nimport { BasePlugin } from './base-plugin';\n\nimport type { TimebarStyleProps as TimebarComponentStyleProps } from '@antv/component';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { GraphData } from '../spec';\nimport type { ElementDatum, ElementType, ID, Padding } from '../types';\nimport type { BasePluginOptions } from './base-plugin';\nimport { createPluginCanvas } from './utils/canvas';\n\nconst prospectiveTimeKeys = ['timestamp', 'time', 'date', 'datetime'];\n\n/**\n * <zh/> Timebar 时间条的配置项。\n * <en/> The options of the Timebar.\n */\nexport interface TimebarOptions extends BasePluginOptions {\n  /**\n   * <zh/> 给工具栏的 DOM 追加的类名，便于自定义样式\n   *\n   * <en/> The class name appended to the menu DOM for custom styles\n   * @defaultValue 'g6-timebar'\n   */\n  className?: string;\n  /**\n   * <zh/> X 位置\n   *\n   * <en/> X position\n   * @remarks\n   * <zh/> 设置后 `position` 会失效\n   *\n   * <en/> `position` will be invalidated after setting `x`\n   */\n  x?: number;\n  /**\n   * <zh/> Y 位置\n   *\n   * <en/> Y position\n   * @remarks\n   * <zh/> 设置后 `position` 会失效\n   *\n   * <en/> `position` will be invalidated after setting `y`\n   */\n  y?: number;\n  /**\n   * <zh/> 时间条宽度\n   *\n   * <en/> Timebar width\n   * @defaultValue 450\n   */\n  width?: number;\n  /**\n   * <zh/> 时间条高度\n   *\n   * <en/> Timebar height\n   * @defaultValue 60\n   */\n  height?: number;\n  /**\n   * <zh/> Timebar 的位置\n   *\n   * <en/> Timebar location\n   * @defaultValue 'bottom'\n   */\n  position?: 'bottom' | 'top';\n  /**\n   * <zh/> 边距\n   *\n   * <en/> Padding\n   */\n  padding?: Padding;\n  /**\n   * <zh/> 获取元素时间\n   *\n   * <en/> Get element time\n   */\n  getTime?: (datum: ElementDatum) => number;\n  /**\n   * <zh/> 时间数据\n   *\n   * <en/> Time data\n   * @remarks\n   * <zh/> `timebarType` 为 `'chart'` 时，需要额外传入 `value` 字段作为图表数据\n   *\n   * <en/> When `timebarType` is `'chart'`, you need to pass in the `value` field as chart data\n   */\n  data: number[] | { time: number; value: number }[];\n  /**\n   * <zh/> Timebar 展示类型\n   * - `'time'`: 显示为时间轴\n   * - `'chart'`: 显示为趋势图\n   *\n   * <en/> Timebar Displays the type\n   * - `'time'`: Display as a timeline\n   * - `'chart'`: Display as a trend chart\n   * @defaultValue 'time'\n   */\n  timebarType?: 'time' | 'chart';\n  /**\n   * <zh/> 筛选类型\n   *\n   * <en/> Filter element types\n   */\n  elementTypes?: ElementType[];\n  /**\n   * <zh/> 筛选模式\n   *  - `'modify'`: 通过修改图数据进行筛选\n   *  - `'visibility'`: 通过修改元素可见性进行筛选\n   *\n   * <en/> Filter mode\n   *  - `'modify'`: Filter by modifying the graph data.\n   *  - `'visibility'`: Filter by modifying element visibility\n   * @defaultValue 'modify'\n   */\n  mode?: 'modify' | 'visibility';\n  /**\n   * <zh/> 当前时间值\n   *\n   * <en/> Current time value\n   */\n  values?: number | [number, number] | Date | [Date, Date];\n  /**\n   * <zh/> 图表模式下自定义时间格式化\n   *\n   * <en/> Custom time formatting in chart mode\n   */\n  labelFormatter?: (time: number | Date) => string;\n  /**\n   * <zh/> 是否循环播放\n   *\n   * <en/> Whether to loop\n   * @defaultValue false\n   */\n  loop?: boolean;\n  /**\n   * <zh/> 时间区间变化时执行的回调\n   *\n   * <en/> Callback executed when the time interval changes\n   */\n  onChange?: (values: number | [number, number]) => void;\n  /**\n   * <zh/> 重置时执行的回调\n   *\n   * <en/> Callback executed when reset\n   */\n  onReset?: () => void;\n  /**\n   * <zh/> 播放速度变化时执行的回调\n   *\n   * <en/> Callback executed when the playback speed changes\n   */\n  onSpeedChange?: (speed: number) => void;\n  /**\n   * <zh/> 开始播放时执行的回调\n   *\n   * <en/> Callback executed when playback starts\n   */\n  onPlay?: () => void;\n  /**\n   * <zh/> 暂停时执行的回调\n   *\n   * <en/> Callback executed when paused\n   */\n  onPause?: () => void;\n  /**\n   * <zh/> 后退时执行的回调\n   *\n   * <en/> Callback executed when backward\n   */\n  onBackward?: () => void;\n  /**\n   * <zh/> 前进时执行的回调\n   *\n   * <en/> Callback executed when forward\n   */\n  onForward?: () => void;\n}\n\n/**\n * <zh/> 时间组件\n *\n * <en/> Timebar\n */\nexport class Timebar extends BasePlugin<TimebarOptions> {\n  static defaultOptions: Partial<TimebarOptions> = {\n    position: 'bottom',\n    enable: true,\n    timebarType: 'time',\n    className: 'g6-timebar',\n    width: 450,\n    height: 60,\n    zIndex: 3,\n    elementTypes: ['node'],\n    padding: 10,\n    mode: 'modify',\n    getTime: (datum) => inferTime(datum, prospectiveTimeKeys, undefined),\n    loop: false,\n  };\n\n  private timebar?: TimebarComponent;\n\n  private canvas?: Canvas;\n\n  private container?: HTMLElement;\n\n  private originalData?: GraphData;\n\n  private get padding() {\n    return parsePadding(this.options.padding);\n  }\n\n  constructor(context: RuntimeContext, options: TimebarOptions) {\n    super(context, Object.assign({}, Timebar.defaultOptions, options));\n    this.backup();\n    this.upsertTimebar();\n  }\n\n  /**\n   * <zh/> 播放\n   *\n   * <en/> Play\n   */\n  public play() {\n    this.timebar?.play();\n  }\n\n  /**\n   * <zh/> 暂停\n   *\n   * <en/> Pause\n   */\n  public pause() {\n    this.timebar?.pause();\n  }\n\n  /**\n   * <zh/> 前进\n   *\n   * <en/> Forward\n   */\n  public forward() {\n    this.timebar?.forward();\n  }\n\n  /**\n   * <zh/> 后退\n   *\n   * <en/> Backward\n   */\n  public backward() {\n    this.timebar?.backward();\n  }\n\n  /**\n   * <zh/> 重置\n   *\n   * <en/> Reset\n   */\n  public reset() {\n    this.timebar?.reset();\n  }\n\n  /**\n   * <zh/> 更新时间条配置项\n   *\n   * <en/> Update timebar configuration options\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  public update(options: Partial<TimebarOptions>) {\n    super.update(options);\n    this.backup();\n\n    this.upsertTimebar();\n  }\n\n  /**\n   * <zh/> 备份数据\n   *\n   * <en/> Backup data\n   */\n  private backup() {\n    this.originalData = shallowCopy(this.context.graph.getData());\n  }\n\n  private upsertTimebar() {\n    const { canvas } = this.context;\n    const { onChange, timebarType, data, x, y, width, height, mode, ...restOptions } = this.options;\n    const canvasSize = canvas.getSize();\n    const [top] = this.padding;\n\n    this.upsertCanvas().ready.then(() => {\n      const style: TimebarComponentStyleProps = {\n        x: canvasSize[0] / 2 - width / 2,\n        y: top,\n        onChange: (value) => {\n          const range = (isArray(value) ? value : [value, value]).map((time) =>\n            isDate(time) ? time.getTime() : time,\n          ) as [number, number];\n\n          if (this.options.mode === 'modify') this.filterElements(range);\n          else this.hiddenElements(range);\n\n          onChange?.(range);\n        },\n        ...restOptions,\n        data: data.map((datum) => (isNumber(datum) ? { time: datum, value: 0 } : datum)),\n        width,\n        height,\n        type: timebarType,\n      };\n\n      if (!this.timebar) {\n        this.timebar = new TimebarComponent({ style });\n        this.canvas?.appendChild(this.timebar);\n      } else {\n        this.timebar.update(style);\n      }\n    });\n  }\n\n  private upsertCanvas() {\n    if (this.canvas) return this.canvas;\n\n    const { className, height, position } = this.options;\n    const graphCanvas = this.context.canvas;\n    const [width] = graphCanvas.getSize();\n    const [top, , bottom] = this.padding;\n\n    const [$container, canvas] = createPluginCanvas({\n      width,\n      height: height + top + bottom,\n      graphCanvas,\n      className: 'timebar',\n      placement: position,\n    });\n\n    this.container = $container;\n    if (className) $container.classList.add(className);\n    this.canvas = canvas;\n\n    return this.canvas;\n  }\n\n  private async filterElements(range: number | [number, number]) {\n    if (!this.originalData) return;\n    const { elementTypes, getTime } = this.options;\n    const { graph, element } = this.context;\n\n    const newData = shallowCopy(this.originalData);\n\n    elementTypes.forEach((type) => {\n      const key = `${type}s` as const;\n      newData[key] = (this.originalData![key] || []).filter((datum) => {\n        const time = getTime(datum);\n        if (match(time, range)) return true;\n        return false;\n      }) as any;\n    });\n\n    const nodeLikeIds = [...newData.nodes, ...newData.combos].map((datum) => idOf(datum));\n    newData.edges = newData.edges!.filter((edge) => {\n      const source = edge.source;\n      const target = edge.target;\n      return nodeLikeIds.includes(source) && nodeLikeIds.includes(target);\n    });\n\n    graph.setData(newData);\n    await element!.draw({ animation: false, silence: true })?.finished;\n  }\n\n  private hiddenElements(range: number | [number, number]) {\n    const { graph } = this.context;\n    const { elementTypes, getTime } = this.options;\n    const hideElementId: ID[] = [];\n    const showElementId: ID[] = [];\n\n    elementTypes.forEach((elementType) => {\n      const key = `${elementType}s` as const;\n      const elementData = this.originalData?.[key] || [];\n\n      elementData.forEach((elementDatum) => {\n        const id = idOf(elementDatum);\n        const time = getTime(elementDatum);\n        if (match(time, range)) showElementId.push(id);\n        else hideElementId.push(id);\n      });\n    });\n\n    graph.hideElement(hideElementId, false);\n    graph.showElement(showElementId, false);\n  }\n\n  /**\n   * <zh/> 销毁时间条\n   *\n   * <en/> Destroy the timebar\n   * @internal\n   */\n  public destroy(): void {\n    const { graph } = this.context;\n    this.originalData && graph.setData({ ...this.originalData });\n    this.timebar?.destroy();\n    this.canvas?.destroy();\n    this.container?.remove();\n    this.originalData = undefined;\n    this.container = undefined;\n    this.timebar = undefined;\n    this.canvas = undefined;\n\n    super.destroy();\n  }\n}\n\nconst shallowCopy = (data: GraphData) => {\n  const { nodes = [], edges = [], combos = [] } = data;\n  return {\n    nodes: [...nodes],\n    edges: [...edges],\n    combos: [...combos],\n  };\n};\n\nconst match = (time: number, range: number | [number, number]) => {\n  if (isNumber(range)) return time === range;\n  const [start, end] = range;\n  return time >= start && time <= end;\n};\n\nconst inferTime = (datum: ElementDatum, optionsKeys: string[], defaultValue?: any): number => {\n  for (let i = 0; i < optionsKeys.length; i++) {\n    const key = optionsKeys[i];\n    const val = datum.data?.[key];\n    if (val) return val as number;\n  }\n  return defaultValue;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}