{"ast":null,"code":"function pick(v, fields = []) {\n  return fields.reduce((datum, field) => {\n    // Pick the data deeply.\n    if (field in v) {\n      datum[field] = v[field];\n    }\n    return datum;\n  }, {});\n}\n/**\n * Immutable data pick by specified fields.\n */\nexport const Pick = options => {\n  const {\n    fields\n  } = options;\n  return data => data.map(d => pick(d, fields));\n};\nPick.props = {};","map":{"version":3,"names":["pick","v","fields","reduce","datum","field","Pick","options","data","map","d","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/pick.ts"],"sourcesContent":["import { DataComponent as DC } from '../runtime';\nimport { PickTransform } from '../spec';\n\nexport type PickOptions = Omit<PickTransform, 'type'>;\n\nfunction pick(v: any, fields: string[] = []) {\n  return fields.reduce((datum, field) => {\n    // Pick the data deeply.\n    if (field in v) {\n      datum[field] = v[field];\n    }\n    return datum;\n  }, {});\n}\n\n/**\n * Immutable data pick by specified fields.\n */\nexport const Pick: DC<PickOptions> = (options) => {\n  const { fields } = options;\n  return (data) => data.map((d) => pick(d, fields));\n};\n\nPick.props = {};\n"],"mappings":"AAKA,SAASA,IAAIA,CAACC,CAAM,EAAEC,MAAA,GAAmB,EAAE;EACzC,OAAOA,MAAM,CAACC,MAAM,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;IACpC;IACA,IAAIA,KAAK,IAAIJ,CAAC,EAAE;MACdG,KAAK,CAACC,KAAK,CAAC,GAAGJ,CAAC,CAACI,KAAK,CAAC;;IAEzB,OAAOD,KAAK;EACd,CAAC,EAAE,EAAE,CAAC;AACR;AAEA;;;AAGA,OAAO,MAAME,IAAI,GAAqBC,OAAO,IAAI;EAC/C,MAAM;IAAEL;EAAM,CAAE,GAAGK,OAAO;EAC1B,OAAQC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAEC,CAAC,IAAKV,IAAI,CAACU,CAAC,EAAER,MAAM,CAAC,CAAC;AACnD,CAAC;AAEDI,IAAI,CAACK,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}