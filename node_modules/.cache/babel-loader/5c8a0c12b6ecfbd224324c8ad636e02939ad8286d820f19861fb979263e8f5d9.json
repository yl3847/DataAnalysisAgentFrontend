{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { Tree as TreeTransform } from '../data/tree';\nimport { maybeAnimation, subTooltip } from '../utils/mark';\nconst DEFAULT_LAYOUT_OPTIONS = {\n  sortBy: (a, b) => b.value - a.value\n};\nconst DEFAULT_NODE_OPTIONS = {\n  axis: false,\n  legend: false,\n  type: 'point',\n  encode: {\n    x: 'x',\n    y: 'y',\n    size: 2,\n    shape: 'point'\n  }\n};\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'link',\n  encode: {\n    x: 'x',\n    y: 'y',\n    shape: 'smooth'\n  }\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  text: '',\n  fontSize: 10\n};\nexport const Tree = options => {\n  const {\n    data,\n    encode = {},\n    scale = {},\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {}\n  } = options;\n  const valueEncode = encode === null || encode === void 0 ? void 0 : encode.value;\n  const {\n    nodes,\n    edges\n  } = TreeTransform(Object.assign(Object.assign(Object.assign({}, DEFAULT_LAYOUT_OPTIONS), layout), {\n    field: valueEncode\n  }))(data);\n  const nodeTooltip = subTooltip(tooltip, 'node', {\n    title: 'name',\n    items: ['value']\n  }, true);\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [d => ({\n      name: 'source',\n      value: d.source.name\n    }), d => ({\n      name: 'target',\n      value: d.target.name\n    })]\n  });\n  return [deepMix({}, DEFAULT_LINK_OPTIONS, {\n    data: edges,\n    encode: subObject(encode, 'link'),\n    scale: subObject(scale, 'link'),\n    labels: linkLabels,\n    style: Object.assign({\n      stroke: '#999'\n    }, subObject(style, 'link')),\n    tooltip: linkTooltip,\n    animate: maybeAnimation(animate, 'link')\n  }), deepMix({}, DEFAULT_NODE_OPTIONS, {\n    data: nodes,\n    scale: subObject(scale, 'node'),\n    encode: subObject(encode, 'node'),\n    labels: [Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), subObject(style, 'label')), ...nodeLabels],\n    style: Object.assign({}, subObject(style, 'node')),\n    tooltip: nodeTooltip,\n    animate: maybeAnimation(animate, 'node')\n  })];\n};\nTree.props = {};","map":{"version":3,"names":["deepMix","subObject","Tree","TreeTransform","maybeAnimation","subTooltip","DEFAULT_LAYOUT_OPTIONS","sortBy","a","b","value","DEFAULT_NODE_OPTIONS","axis","legend","type","encode","x","y","size","shape","DEFAULT_LINK_OPTIONS","DEFAULT_LABEL_OPTIONS","text","fontSize","options","data","scale","style","layout","nodeLabels","linkLabels","animate","tooltip","valueEncode","nodes","edges","Object","assign","field","nodeTooltip","title","items","linkTooltip","d","name","source","target","labels","stroke","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/tree.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { CompositeMarkComponent as CC } from '../runtime';\nimport { TreeMark } from '../spec';\nimport {\n  Tree as TreeTransform,\n  TreeOptions as TreeTransformOptions,\n} from '../data/tree';\nimport { maybeAnimation, subTooltip } from '../utils/mark';\n\nconst DEFAULT_LAYOUT_OPTIONS: TreeTransformOptions = {\n  sortBy: (a, b) => b.value - a.value,\n};\n\nconst DEFAULT_NODE_OPTIONS = {\n  axis: false,\n  legend: false,\n  type: 'point',\n  encode: {\n    x: 'x',\n    y: 'y',\n    size: 2,\n    shape: 'point',\n  },\n};\n\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'link',\n  encode: {\n    x: 'x',\n    y: 'y',\n    shape: 'smooth',\n  },\n};\n\nconst DEFAULT_LABEL_OPTIONS = {\n  text: '',\n  fontSize: 10,\n};\n\nexport type TreeOptions = Omit<TreeMark, 'type'>;\n\nexport const Tree: CC<TreeOptions> = (options) => {\n  const {\n    data,\n    encode = {},\n    scale = {},\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {},\n  } = options;\n  const valueEncode = encode?.value;\n  const { nodes, edges } = TreeTransform({\n    ...DEFAULT_LAYOUT_OPTIONS,\n    ...layout,\n    field: valueEncode,\n  })(data);\n\n  const nodeTooltip = subTooltip(\n    tooltip,\n    'node',\n    {\n      title: 'name',\n      items: ['value'],\n    },\n    true,\n  );\n\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    title: '',\n    items: [\n      (d) => ({ name: 'source', value: d.source.name }),\n      (d) => ({ name: 'target', value: d.target.name }),\n    ],\n  });\n\n  return [\n    deepMix({}, DEFAULT_LINK_OPTIONS, {\n      data: edges,\n      encode: subObject(encode, 'link'),\n      scale: subObject(scale, 'link'),\n      labels: linkLabels,\n      style: { stroke: '#999', ...subObject(style, 'link') },\n      tooltip: linkTooltip,\n      animate: maybeAnimation(animate, 'link'),\n    }),\n    deepMix({}, DEFAULT_NODE_OPTIONS, {\n      data: nodes,\n      scale: subObject(scale, 'node'),\n      encode: subObject(encode, 'node'),\n      labels: [\n        {\n          ...DEFAULT_LABEL_OPTIONS,\n          ...subObject(style, 'label'),\n        },\n        ...nodeLabels,\n      ],\n      style: { ...subObject(style, 'node') },\n      tooltip: nodeTooltip,\n      animate: maybeAnimation(animate, 'node'),\n    }),\n  ];\n};\n\nTree.props = {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}