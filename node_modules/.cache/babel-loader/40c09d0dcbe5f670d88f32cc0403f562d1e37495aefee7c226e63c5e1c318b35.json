{"ast":null,"code":"/*!\n * @antv/g-plugin-image-loader\n * @description A G plugin for loading image\n * @version 2.1.26\n * @date 7/30/2025, 1:35:52 PM\n * @author AntVis\n * @docs https://g.antv.antgroup.com/\n */\nimport _classCallCheck from '@babel/runtime/helpers/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/createClass';\nimport _callSuper from '@babel/runtime/helpers/callSuper';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport { ElementEvent, OffscreenCanvasCreator, parsedTransformToMat4, parseTransform, DisplayObject, GradientType, computeLinearGradient, computeRadialGradient, UnitType, Shape, AbstractRendererPlugin } from '@antv/g-lite';\nimport _regeneratorRuntime from '@babel/runtime/helpers/regeneratorRuntime';\nimport _objectSpread from '@babel/runtime/helpers/objectSpread2';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport { isString } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nvar RefCountCache = /*#__PURE__*/function () {\n  function RefCountCache() {\n    _classCallCheck(this, RefCountCache);\n    this.cacheStore = new Map();\n  }\n  return _createClass(RefCountCache, [{\n    key: \"onRefAdded\",\n    value: function onRefAdded(ref) {}\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.cacheStore.has(key);\n    }\n  }, {\n    key: \"put\",\n    value: function put(key, item, ref) {\n      if (this.cacheStore.has(key)) {\n        return false;\n      }\n      this.cacheStore.set(key, {\n        value: item,\n        counter: new Set([ref.entity])\n      });\n      this.onRefAdded(ref);\n      return true;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, ref) {\n      var cacheItem = this.cacheStore.get(key);\n      if (!cacheItem) {\n        return null;\n      }\n      if (!cacheItem.counter.has(ref.entity)) {\n        cacheItem.counter.add(ref.entity);\n        this.onRefAdded(ref);\n      }\n      return cacheItem.value;\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, value, ref) {\n      var cacheItem = this.cacheStore.get(key);\n      if (!cacheItem) {\n        return false;\n      }\n      cacheItem.value = _objectSpread(_objectSpread({}, cacheItem.value), value);\n      if (!cacheItem.counter.has(ref.entity)) {\n        cacheItem.counter.add(ref.entity);\n        this.onRefAdded(ref);\n      }\n      return true;\n    }\n  }, {\n    key: \"release\",\n    value: function release(key, ref) {\n      var cacheItem = this.cacheStore.get(key);\n      if (!cacheItem) {\n        return false;\n      }\n      cacheItem.counter[\"delete\"](ref.entity);\n      if (cacheItem.counter.size <= 0) {\n        this.cacheStore[\"delete\"](key);\n      }\n      return true;\n    }\n  }, {\n    key: \"releaseRef\",\n    value: function releaseRef(ref) {\n      var _this = this;\n      Array.from(this.cacheStore.keys()).forEach(function (key) {\n        _this.release(key, ref);\n      });\n    }\n  }, {\n    key: \"getSize\",\n    value: function getSize() {\n      return this.cacheStore.size;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.cacheStore.clear();\n    }\n  }]);\n}();\nvar tasks = [];\nvar nextFrameTasks = [];\nvar ImageSlicer = /*#__PURE__*/function () {\n  function ImageSlicer() {\n    _classCallCheck(this, ImageSlicer);\n  }\n  return _createClass(ImageSlicer, null, [{\n    key: \"stop\",\n    value: function stop() {\n      var api = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ImageSlicer.api;\n      if (ImageSlicer.rafId) {\n        api.cancelAnimationFrame(ImageSlicer.rafId);\n        ImageSlicer.rafId = null;\n      }\n    }\n  }, {\n    key: \"executeTask\",\n    value: function executeTask() {\n      var api = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ImageSlicer.api;\n      if (tasks.length <= 0 && nextFrameTasks.length <= 0) {\n        return;\n      }\n      nextFrameTasks.forEach(function (task) {\n        return task();\n      });\n      nextFrameTasks = tasks.splice(0, ImageSlicer.TASK_NUM_PER_FRAME);\n      ImageSlicer.rafId = api.requestAnimationFrame(function () {\n        ImageSlicer.executeTask(api);\n      });\n    }\n  }, {\n    key: \"sliceImage\",\n    value: function sliceImage(image, sliceWidth, sliceHeight, rerender) {\n      var overlap = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n      var api = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : ImageSlicer.api;\n      var imageWidth = image.naturalWidth || image.width;\n      var imageHeight = image.naturalHeight || image.height;\n\n      // 计算步长(考虑重叠区域)\n      var strideW = sliceWidth - overlap;\n      var strideH = sliceHeight - overlap;\n\n      // 计算网格尺寸\n      var gridCols = Math.ceil(imageWidth / strideW);\n      var gridRows = Math.ceil(imageHeight / strideH);\n      var result = {\n        tileSize: [sliceWidth, sliceHeight],\n        gridSize: [gridRows, gridCols],\n        tiles: Array(gridRows).fill(null).map(function () {\n          return Array(gridCols).fill(null);\n        })\n      };\n\n      // 遍历网格创建切片\n      var _loop = function _loop(row) {\n        var _loop2 = function _loop2(col) {\n          tasks.push(function () {\n            // 计算当前切片的坐标\n            var startX = col * strideW;\n            var startY = row * strideH;\n\n            // 处理最后一列/行的特殊情况\n            var _ref = [Math.min(sliceWidth, imageWidth - startX), Math.min(sliceHeight, imageHeight - startY)],\n              tempSliceWidth = _ref[0],\n              tempSliceHeight = _ref[1];\n\n            // 创建切片canvas\n            var sliceCanvas = api.createCanvas();\n            sliceCanvas.width = sliceWidth;\n            sliceCanvas.height = sliceHeight;\n            var sliceCtx = sliceCanvas.getContext('2d');\n\n            // 将图像部分绘制到切片canvas上\n            sliceCtx.drawImage(image, startX, startY, tempSliceWidth, tempSliceHeight, 0, 0, tempSliceWidth, tempSliceHeight);\n\n            // 存储切片信息\n            result.tiles[row][col] = {\n              x: startX,\n              y: startY,\n              tileX: col,\n              tileY: row,\n              data: sliceCanvas\n            };\n            rerender();\n          });\n        };\n        for (var col = 0; col < gridCols; col++) {\n          _loop2(col);\n        }\n      };\n      for (var row = 0; row < gridRows; row++) {\n        _loop(row);\n      }\n      ImageSlicer.stop();\n      ImageSlicer.executeTask();\n      return result;\n    }\n  }]);\n}();\nImageSlicer.TASK_NUM_PER_FRAME = 10;\nvar IMAGE_CACHE = new RefCountCache();\nIMAGE_CACHE.onRefAdded = function onRefAdded(ref) {\n  var _this = this;\n  ref.addEventListener(ElementEvent.DESTROY, function () {\n    _this.releaseRef(ref);\n  }, {\n    once: true\n  });\n};\nvar ImagePool = /*#__PURE__*/function () {\n  function ImagePool(context, runtime) {\n    _classCallCheck(this, ImagePool);\n    this.gradientCache = {};\n    this.patternCache = {};\n    this.context = context;\n    this.runtime = runtime;\n  }\n  return _createClass(ImagePool, [{\n    key: \"getImageSync\",\n    value: function getImageSync(src, ref, callback) {\n      var imageSource = isString(src) ? src : src.src;\n      if (IMAGE_CACHE.has(imageSource)) {\n        var imageCache = IMAGE_CACHE.get(imageSource, ref);\n        if (imageCache.img.complete) {\n          callback === null || callback === void 0 || callback(imageCache);\n          return imageCache;\n        }\n      }\n      this.getOrCreateImage(src, ref).then(function (cache) {\n        callback === null || callback === void 0 || callback(cache);\n      })[\"catch\"](function (reason) {\n        console.error(reason);\n      });\n      return null;\n    }\n  }, {\n    key: \"getOrCreateImage\",\n    value: function getOrCreateImage(src, ref) {\n      var _this2 = this;\n      var imageSource = isString(src) ? src : src.src;\n      if (!isString(src) && !IMAGE_CACHE.has(imageSource)) {\n        var imageCache = {\n          img: src,\n          size: [src.naturalWidth || src.width, src.naturalHeight || src.height],\n          tileSize: calculateImageTileSize(src)\n        };\n        IMAGE_CACHE.put(imageSource, imageCache, ref);\n      }\n      if (IMAGE_CACHE.has(imageSource)) {\n        var _imageCache = IMAGE_CACHE.get(imageSource, ref);\n        if (_imageCache.img.complete) {\n          return Promise.resolve(_imageCache);\n        }\n        return new Promise(function (resolve, reject) {\n          _imageCache.img.addEventListener('load', function () {\n            _imageCache.size = [_imageCache.img.naturalWidth || _imageCache.img.width, _imageCache.img.naturalHeight || _imageCache.img.height];\n            _imageCache.tileSize = calculateImageTileSize(_imageCache.img);\n            resolve(_imageCache);\n          });\n          _imageCache.img.addEventListener('error', function (ev) {\n            reject(ev);\n          });\n        });\n      }\n      return new Promise(function (resolve, reject) {\n        // @see https://github.com/antvis/g/issues/938\n        var image = _this2.context.config.createImage();\n        if (image) {\n          var _imageCache2 = {\n            img: image,\n            size: [0, 0],\n            tileSize: calculateImageTileSize(image)\n          };\n          IMAGE_CACHE.put(imageSource, _imageCache2, ref);\n          image.onload = function () {\n            _imageCache2.size = [image.naturalWidth || image.width, image.naturalHeight || image.height];\n            _imageCache2.tileSize = calculateImageTileSize(_imageCache2.img);\n            resolve(_imageCache2);\n          };\n          image.onerror = function (ev) {\n            reject(ev);\n          };\n          image.crossOrigin = 'Anonymous';\n          image.src = imageSource;\n        }\n      });\n    }\n  }, {\n    key: \"createDownSampledImage\",\n    value: function () {\n      var _createDownSampledImage = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(src, ref) {\n        var imageCache, enableLargeImageOptimization, _ref, _ref$maxDownSampledIm, maxDownSampledImageSize, _ref$downSamplingRate, downSamplingRateThreshold, createImageBitmapFunc, _imageCache$size, originWidth, originHeight, resizedImage, downSamplingRate, updateCache;\n        return _regeneratorRuntime().wrap(function (_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 1;\n              return this.getOrCreateImage(src, ref);\n            case 1:\n              imageCache = _context.sent;\n              if (!(typeof imageCache.downSamplingRate !== 'undefined')) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", imageCache);\n            case 2:\n              enableLargeImageOptimization = this.context.config.enableLargeImageOptimization;\n              _ref = typeof enableLargeImageOptimization === 'boolean' ? {} : enableLargeImageOptimization, _ref$maxDownSampledIm = _ref.maxDownSampledImageSize, maxDownSampledImageSize = _ref$maxDownSampledIm === void 0 ? 2048 : _ref$maxDownSampledIm, _ref$downSamplingRate = _ref.downSamplingRateThreshold, downSamplingRateThreshold = _ref$downSamplingRate === void 0 ? 0.5 : _ref$downSamplingRate;\n              createImageBitmapFunc = this.runtime.globalThis.createImageBitmap;\n              _imageCache$size = _slicedToArray(imageCache.size, 2), originWidth = _imageCache$size[0], originHeight = _imageCache$size[1];\n              resizedImage = imageCache.img;\n              downSamplingRate = Math.min((maxDownSampledImageSize + maxDownSampledImageSize) / (originWidth + originHeight), Math.max(0.01, Math.min(downSamplingRateThreshold, 0.5)));\n              updateCache = _objectSpread(_objectSpread({}, imageCache), {}, {\n                downSamplingRate: downSamplingRate\n              });\n              IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n              if (!createImageBitmapFunc) {\n                _context.next = 7;\n                break;\n              }\n              _context.prev = 3;\n              _context.next = 4;\n              return createImageBitmapFunc(imageCache.img, {\n                resizeWidth: originWidth * downSamplingRate,\n                resizeHeight: originHeight * downSamplingRate\n              });\n            case 4:\n              resizedImage = _context.sent;\n              _context.next = 6;\n              break;\n            case 5:\n              _context.prev = 5;\n              _context[\"catch\"](3);\n              downSamplingRate = 1;\n            case 6:\n              _context.next = 8;\n              break;\n            case 7:\n              downSamplingRate = 1;\n            case 8:\n              updateCache = _objectSpread(_objectSpread({}, this.getImageSync(src, ref)), {}, {\n                downSampled: resizedImage,\n                downSamplingRate: downSamplingRate\n              });\n              IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n              return _context.abrupt(\"return\", updateCache);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[3, 5]]);\n      }));\n      function createDownSampledImage(_x, _x2) {\n        return _createDownSampledImage.apply(this, arguments);\n      }\n      return createDownSampledImage;\n    }()\n  }, {\n    key: \"createImageTiles\",\n    value: function () {\n      var _createImageTiles = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(src, tiles, rerender, ref) {\n        var imageCache, _ref$ownerDocument$de, requestAnimationFrame, cancelAnimationFrame, updateCache;\n        return _regeneratorRuntime().wrap(function (_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 1;\n              return this.getOrCreateImage(src, ref);\n            case 1:\n              imageCache = _context2.sent;\n              _ref$ownerDocument$de = ref.ownerDocument.defaultView, requestAnimationFrame = _ref$ownerDocument$de.requestAnimationFrame, cancelAnimationFrame = _ref$ownerDocument$de.cancelAnimationFrame;\n              ImageSlicer.api = {\n                requestAnimationFrame: requestAnimationFrame,\n                cancelAnimationFrame: cancelAnimationFrame,\n                createCanvas: function createCanvas() {\n                  return OffscreenCanvasCreator.createCanvas();\n                }\n              };\n              updateCache = _objectSpread(_objectSpread({}, imageCache), ImageSlicer.sliceImage(imageCache.img, imageCache.tileSize[0], imageCache.tileSize[0], rerender));\n              IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n              return _context2.abrupt(\"return\", updateCache);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function createImageTiles(_x3, _x4, _x5, _x6) {\n        return _createImageTiles.apply(this, arguments);\n      }\n      return createImageTiles;\n    }()\n  }, {\n    key: \"releaseImage\",\n    value: function releaseImage(src, ref) {\n      IMAGE_CACHE.release(isString(src) ? src : src.src, ref);\n    }\n  }, {\n    key: \"releaseImageRef\",\n    value: function releaseImageRef(ref) {\n      IMAGE_CACHE.releaseRef(ref);\n    }\n  }, {\n    key: \"getOrCreatePatternSync\",\n    value: function getOrCreatePatternSync(object, pattern, context, $offscreenCanvas, dpr, min, callback) {\n      var patternKey = this.generatePatternKey(pattern);\n      if (patternKey && this.patternCache[patternKey]) {\n        return this.patternCache[patternKey];\n      }\n      var image = pattern.image,\n        repetition = pattern.repetition,\n        transform = pattern.transform;\n      var src;\n      var needScaleWithDPR = false;\n      // Image URL\n      if (isString(image)) {\n        var imageCache = this.getImageSync(image, object, callback);\n        src = imageCache === null || imageCache === void 0 ? void 0 : imageCache.img;\n      } else if ($offscreenCanvas) {\n        src = $offscreenCanvas;\n        needScaleWithDPR = true;\n      } else {\n        src = image;\n      }\n\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n      var canvasPattern = src && context.createPattern(src, repetition);\n      if (canvasPattern) {\n        var mat;\n        // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern/setTransform\n        if (transform) {\n          mat = parsedTransformToMat4(parseTransform(transform), new DisplayObject({}));\n        } else {\n          mat = mat4.identity(mat4.create());\n        }\n        if (needScaleWithDPR) {\n          mat4.scale(mat, mat, [1 / dpr, 1 / dpr, 1]);\n        }\n        canvasPattern.setTransform({\n          a: mat[0],\n          b: mat[1],\n          c: mat[4],\n          d: mat[5],\n          e: mat[12] + min[0],\n          f: mat[13] + min[1]\n        });\n      }\n      if (patternKey && canvasPattern) {\n        this.patternCache[patternKey] = canvasPattern;\n      }\n      return canvasPattern;\n    }\n  }, {\n    key: \"getOrCreateGradient\",\n    value: function getOrCreateGradient(params, context) {\n      var key = this.generateGradientKey(params);\n      var type = params.type,\n        steps = params.steps,\n        min = params.min,\n        width = params.width,\n        height = params.height,\n        angle = params.angle,\n        cx = params.cx,\n        cy = params.cy,\n        size = params.size;\n      if (this.gradientCache[key]) {\n        return this.gradientCache[key];\n      }\n      var gradient = null;\n      if (type === GradientType.LinearGradient) {\n        var _computeLinearGradien = computeLinearGradient(min, width, height, angle),\n          x1 = _computeLinearGradien.x1,\n          y1 = _computeLinearGradien.y1,\n          x2 = _computeLinearGradien.x2,\n          y2 = _computeLinearGradien.y2;\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n        gradient = context.createLinearGradient(x1, y1, x2, y2);\n      } else if (type === GradientType.RadialGradient) {\n        var _computeRadialGradien = computeRadialGradient(min, width, height, cx, cy, size),\n          x = _computeRadialGradien.x,\n          y = _computeRadialGradien.y,\n          r = _computeRadialGradien.r;\n        // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n        gradient = context.createRadialGradient(x, y, 0, x, y, r);\n      }\n      if (gradient) {\n        steps.forEach(function (_ref2) {\n          var offset = _ref2.offset,\n            color = _ref2.color;\n          if (offset.unit === UnitType.kPercentage) {\n            var _gradient;\n            (_gradient = gradient) === null || _gradient === void 0 || _gradient.addColorStop(offset.value / 100, color.toString());\n          }\n        });\n        this.gradientCache[key] = gradient;\n      }\n      return this.gradientCache[key];\n    }\n  }, {\n    key: \"generateGradientKey\",\n    value: function generateGradientKey(params) {\n      var type = params.type,\n        min = params.min,\n        width = params.width,\n        height = params.height,\n        steps = params.steps,\n        angle = params.angle,\n        cx = params.cx,\n        cy = params.cy,\n        size = params.size;\n      return \"gradient-\".concat(type, \"-\").concat((angle === null || angle === void 0 ? void 0 : angle.toString()) || 0, \"-\").concat((cx === null || cx === void 0 ? void 0 : cx.toString()) || 0, \"-\").concat((cy === null || cy === void 0 ? void 0 : cy.toString()) || 0, \"-\").concat((size === null || size === void 0 ? void 0 : size.toString()) || 0, \"-\").concat(min[0], \"-\").concat(min[1], \"-\").concat(width, \"-\").concat(height, \"-\").concat(steps.map(function (_ref3) {\n        var offset = _ref3.offset,\n          color = _ref3.color;\n        return \"\".concat(offset).concat(color);\n      }).join('-'));\n    }\n  }, {\n    key: \"generatePatternKey\",\n    value: function generatePatternKey(pattern) {\n      var image = pattern.image,\n        repetition = pattern.repetition;\n      // only generate cache for Image\n      if (isString(image)) {\n        return \"pattern-\".concat(image, \"-\").concat(repetition);\n      }\n      if (image.nodeName === 'rect') {\n        return \"pattern-\".concat(image.entity, \"-\").concat(repetition);\n      }\n    }\n  }]);\n}();\nImagePool.isSupportTile = !!OffscreenCanvasCreator.createCanvas();\nfunction calculateImageTileSize(img) {\n  if (!img.complete) {\n    return [0, 0];\n  }\n  var width = img.naturalWidth || img.width,\n    height = img.naturalHeight || img.height;\n  var tileSize = 256;\n  [256, 512].forEach(function (size) {\n    var rows = Math.ceil(height / size);\n    var cols = Math.ceil(width / size);\n    if (rows * cols < 1e3) {\n      tileSize = size;\n    }\n  });\n  return [tileSize, tileSize];\n}\nvar LoadImagePlugin = /*#__PURE__*/function () {\n  function LoadImagePlugin() {\n    _classCallCheck(this, LoadImagePlugin);\n  }\n  return _createClass(LoadImagePlugin, [{\n    key: \"apply\",\n    value: function apply(context) {\n      var renderingService = context.renderingService,\n        renderingContext = context.renderingContext,\n        imagePool = context.imagePool;\n      var canvas = renderingContext.root.ownerDocument.defaultView;\n      var calculateWithAspectRatio = function calculateWithAspectRatio(object, imageWidth, imageHeight) {\n        var _object$parsedStyle = object.parsedStyle,\n          width = _object$parsedStyle.width,\n          height = _object$parsedStyle.height;\n        if (width && !height) {\n          object.setAttribute('height', imageHeight / imageWidth * width);\n        } else if (!width && height) {\n          object.setAttribute('width', imageWidth / imageHeight * height);\n        }\n      };\n      var handleMounted = function handleMounted(e) {\n        var object = e.target;\n        var nodeName = object.nodeName,\n          attributes = object.attributes;\n        if (nodeName === Shape.IMAGE) {\n          var src = attributes.src,\n            keepAspectRatio = attributes.keepAspectRatio;\n          imagePool.getImageSync(src, object, function (_ref) {\n            var _ref$img = _ref.img,\n              width = _ref$img.width,\n              height = _ref$img.height;\n            if (keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          });\n        }\n      };\n      var handleAttributeChanged = function handleAttributeChanged(e) {\n        var object = e.target;\n        var attrName = e.attrName,\n          prevValue = e.prevValue,\n          newValue = e.newValue;\n        if (object.nodeName !== Shape.IMAGE || attrName !== 'src') {\n          return;\n        }\n        if (prevValue !== newValue) {\n          imagePool.releaseImage(prevValue, object);\n        }\n        if (isString(newValue)) {\n          imagePool.getOrCreateImage(newValue, object).then(function (_ref2) {\n            var _ref2$img = _ref2.img,\n              width = _ref2$img.width,\n              height = _ref2$img.height;\n            if (object.attributes.keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          })[\"catch\"](function () {\n            //\n          });\n        }\n      };\n      renderingService.hooks.init.tap(LoadImagePlugin.tag, function () {\n        canvas.addEventListener(ElementEvent.MOUNTED, handleMounted);\n        canvas.addEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n      });\n      renderingService.hooks.destroy.tap(LoadImagePlugin.tag, function () {\n        canvas.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n        canvas.removeEventListener(ElementEvent.ATTR_MODIFIED, handleAttributeChanged);\n      });\n    }\n  }]);\n}();\nLoadImagePlugin.tag = 'LoadImage';\nvar Plugin = /*#__PURE__*/function (_AbstractRendererPlug) {\n  function Plugin() {\n    var _this;\n    _classCallCheck(this, Plugin);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, Plugin, [].concat(args));\n    _this.name = 'image-loader';\n    return _this;\n  }\n  _inherits(Plugin, _AbstractRendererPlug);\n  return _createClass(Plugin, [{\n    key: \"init\",\n    value: function init(runtime) {\n      // @ts-ignore\n      this.context.imagePool = new ImagePool(this.context, runtime);\n      this.addRenderingPlugin(new LoadImagePlugin());\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.removeAllRenderingPlugins();\n    }\n  }]);\n}(AbstractRendererPlugin);\nexport { ImagePool, Plugin };","map":{"version":3,"names":["RefCountCache","_classCallCheck","cacheStore","Map","_createClass","key","value","onRefAdded","ref","has","put","item","set","counter","Set","entity","get","cacheItem","add","update","_objectSpread","release","size","releaseRef","_this","Array","from","keys","forEach","getSize","clear","tasks","nextFrameTasks","ImageSlicer","stop","api","arguments","length","undefined","rafId","cancelAnimationFrame","executeTask","task","splice","TASK_NUM_PER_FRAME","requestAnimationFrame","sliceImage","image","sliceWidth","sliceHeight","rerender","overlap","imageWidth","naturalWidth","width","imageHeight","naturalHeight","height","strideW","strideH","gridCols","Math","ceil","gridRows","result","tileSize","gridSize","tiles","fill","map","_loop","row","_loop2","col","push","startX","startY","_ref","min","tempSliceWidth","tempSliceHeight","sliceCanvas","createCanvas","sliceCtx","getContext","drawImage","x","y","tileX","tileY","data","IMAGE_CACHE","addEventListener","ElementEvent","DESTROY","once","ImagePool","context","runtime","gradientCache","patternCache","getImageSync","src","callback","imageSource","isString","imageCache","img","complete","getOrCreateImage","then","cache","reason","console","error","_this2","calculateImageTileSize","_imageCache","Promise","resolve","reject","ev","config","createImage","_imageCache2","onload","onerror","crossOrigin","_createDownSampledImage","_asyncToGenerator","_regeneratorRuntime","mark","_callee","enableLargeImageOptimization","_ref$maxDownSampledIm","maxDownSampledImageSize","_ref$downSamplingRate","downSamplingRateThreshold","createImageBitmapFunc","_imageCache$size","originWidth","originHeight","resizedImage","downSamplingRate","updateCache","wrap","_context","prev","next","sent","abrupt","globalThis","createImageBitmap","_slicedToArray","max","resizeWidth","resizeHeight","downSampled","createDownSampledImage","_x","_x2","apply","_createImageTiles","_callee2","_ref$ownerDocument$de","_context2","ownerDocument","defaultView","OffscreenCanvasCreator","createImageTiles","_x3","_x4","_x5","_x6","releaseImage","releaseImageRef","getOrCreatePatternSync","object","pattern","$offscreenCanvas","dpr","patternKey","generatePatternKey","repetition","transform","needScaleWithDPR","canvasPattern","createPattern","mat","parsedTransformToMat4","parseTransform","DisplayObject","mat4","identity","create","scale","setTransform","a","b","c","d","e","f","getOrCreateGradient","params","generateGradientKey","type","steps","angle","cx","cy","gradient","GradientType","LinearGradient","_computeLinearGradien","computeLinearGradient","x1","y1","x2","y2","createLinearGradient","RadialGradient","_computeRadialGradien","computeRadialGradient","r","createRadialGradient","_ref2","offset","color","unit","UnitType","kPercentage","_gradient","addColorStop","toString","concat","_ref3","join","nodeName","isSupportTile","rows","cols","LoadImagePlugin","renderingService","renderingContext","imagePool","canvas","root","calculateWithAspectRatio","_object$parsedStyle","parsedStyle","setAttribute","handleMounted","target","attributes","Shape","IMAGE","keepAspectRatio","_ref$img","renderable","dirty","dirtify","handleAttributeChanged","attrName","prevValue","newValue","_ref2$img","hooks","init","tap","tag","MOUNTED","ATTR_MODIFIED","destroy","removeEventListener","Plugin","_AbstractRendererPlug","_len","args","_key","_callSuper","name","_inherits","addRenderingPlugin","removeAllRenderingPlugins","AbstractRendererPlugin"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-plugin-image-loader/src/RefCountCache.ts","/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-plugin-image-loader/src/ImageSlicer.ts","/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-plugin-image-loader/src/ImagePool.ts","/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-plugin-image-loader/src/LoadImagePlugin.ts","/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g-plugin-image-loader/src/index.ts"],"sourcesContent":["import { DisplayObject } from '@antv/g-lite';\n\nexport class RefCountCache<CacheValue> {\n  private cacheStore = new Map<\n    string,\n    { value: CacheValue; counter: Set<number> }\n  >();\n\n  onRefAdded(ref: DisplayObject) {}\n\n  has(key: string) {\n    return this.cacheStore.has(key);\n  }\n\n  put(key: string, item: CacheValue, ref: DisplayObject) {\n    if (this.cacheStore.has(key)) {\n      return false;\n    }\n\n    this.cacheStore.set(key, {\n      value: item,\n      counter: new Set([ref.entity]),\n    });\n    this.onRefAdded(ref);\n\n    return true;\n  }\n\n  get(key: string, ref: DisplayObject) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return null;\n    }\n\n    if (!cacheItem.counter.has(ref.entity)) {\n      cacheItem.counter.add(ref.entity);\n      this.onRefAdded(ref);\n    }\n\n    return cacheItem.value;\n  }\n\n  update(key: string, value: CacheValue, ref: DisplayObject) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.value = { ...cacheItem.value, ...value };\n    if (!cacheItem.counter.has(ref.entity)) {\n      cacheItem.counter.add(ref.entity);\n      this.onRefAdded(ref);\n    }\n\n    return true;\n  }\n\n  release(key: string, ref: DisplayObject) {\n    const cacheItem = this.cacheStore.get(key);\n    if (!cacheItem) {\n      return false;\n    }\n\n    cacheItem.counter.delete(ref.entity);\n\n    if (cacheItem.counter.size <= 0) {\n      this.cacheStore.delete(key);\n    }\n\n    return true;\n  }\n\n  releaseRef(ref: DisplayObject) {\n    Array.from(this.cacheStore.keys()).forEach((key) => {\n      this.release(key, ref);\n    });\n  }\n\n  getSize() {\n    return this.cacheStore.size;\n  }\n\n  clear() {\n    this.cacheStore.clear();\n  }\n}\n","const tasks: (() => void)[] = [];\nlet nextFrameTasks: (() => void)[] = [];\n\ninterface API {\n  requestAnimationFrame: typeof requestAnimationFrame;\n  cancelAnimationFrame: typeof cancelAnimationFrame;\n  createCanvas: () => HTMLCanvasElement | OffscreenCanvas;\n}\n\nexport interface SliceResult {\n  tileSize: [number, number];\n  /** [rows, cols] */\n  gridSize: [number, number];\n  /**\n   * @example\n   * ```\n   * [\n   *  // tileY=0\n   *  [tileX=0, tileX=1, ...],\n   *  // tileY=1\n   *  [tileX=0, tileX=1, ...],\n   * ]\n   * ```\n   */\n  tiles: (null | {\n    x: number;\n    y: number;\n    tileX: number;\n    tileY: number;\n    data: HTMLCanvasElement | OffscreenCanvas;\n  })[][];\n}\n\nexport class ImageSlicer {\n  static api: API;\n  static TASK_NUM_PER_FRAME = 10;\n  static rafId: ReturnType<typeof requestAnimationFrame>;\n\n  static stop(api = ImageSlicer.api) {\n    if (ImageSlicer.rafId) {\n      api.cancelAnimationFrame(ImageSlicer.rafId);\n      ImageSlicer.rafId = null;\n    }\n  }\n\n  static executeTask(api = ImageSlicer.api) {\n    if (tasks.length <= 0 && nextFrameTasks.length <= 0) {\n      return;\n    }\n\n    nextFrameTasks.forEach((task) => task());\n    nextFrameTasks = tasks.splice(0, ImageSlicer.TASK_NUM_PER_FRAME);\n\n    ImageSlicer.rafId = api.requestAnimationFrame(() => {\n      ImageSlicer.executeTask(api);\n    });\n  }\n\n  static sliceImage(\n    image: HTMLImageElement,\n    sliceWidth: number,\n    sliceHeight: number,\n    rerender: () => void,\n    overlap = 0,\n    api = ImageSlicer.api,\n  ) {\n    const imageWidth = image.naturalWidth || image.width;\n    const imageHeight = image.naturalHeight || image.height;\n\n    // 计算步长(考虑重叠区域)\n    const strideW = sliceWidth - overlap;\n    const strideH = sliceHeight - overlap;\n\n    // 计算网格尺寸\n    const gridCols = Math.ceil(imageWidth / strideW);\n    const gridRows = Math.ceil(imageHeight / strideH);\n\n    const result: SliceResult = {\n      tileSize: [sliceWidth, sliceHeight],\n      gridSize: [gridRows, gridCols],\n      tiles: Array(gridRows)\n        .fill(null)\n        .map(() => Array(gridCols).fill(null) as SliceResult['tiles'][number]),\n    };\n\n    // 遍历网格创建切片\n    for (let row = 0; row < gridRows; row++) {\n      for (let col = 0; col < gridCols; col++) {\n        tasks.push(() => {\n          // 计算当前切片的坐标\n          const startX = col * strideW;\n          const startY = row * strideH;\n\n          // 处理最后一列/行的特殊情况\n          const [tempSliceWidth, tempSliceHeight] = [\n            Math.min(sliceWidth, imageWidth - startX),\n            Math.min(sliceHeight, imageHeight - startY),\n          ];\n\n          // 创建切片canvas\n          const sliceCanvas = api.createCanvas();\n          sliceCanvas.width = sliceWidth;\n          sliceCanvas.height = sliceHeight;\n          const sliceCtx = sliceCanvas.getContext('2d');\n\n          // 将图像部分绘制到切片canvas上\n          sliceCtx.drawImage(\n            image,\n            startX,\n            startY,\n            tempSliceWidth,\n            tempSliceHeight,\n            0,\n            0,\n            tempSliceWidth,\n            tempSliceHeight,\n          );\n\n          // 存储切片信息\n          result.tiles[row][col] = {\n            x: startX,\n            y: startY,\n            tileX: col,\n            tileY: row,\n            data: sliceCanvas,\n          };\n\n          rerender();\n        });\n      }\n    }\n\n    ImageSlicer.stop();\n    ImageSlicer.executeTask();\n\n    return result;\n  }\n}\n","import {\n  DisplayObject,\n  GradientType,\n  LinearGradient,\n  Pattern,\n  RadialGradient,\n  Rect,\n  Tuple3Number,\n  UnitType,\n  computeLinearGradient,\n  computeRadialGradient,\n  parseTransform,\n  parsedTransformToMat4,\n  Image,\n  OffscreenCanvasCreator,\n  ElementEvent,\n  type CanvasContext,\n  type GlobalRuntime,\n} from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { mat4 } from 'gl-matrix';\nimport { RefCountCache } from './RefCountCache';\nimport { type SliceResult, ImageSlicer } from './ImageSlicer';\n\nexport interface ImageCache extends Partial<SliceResult> {\n  img: HTMLImageElement;\n  /** [width, height] */\n  size: [number, number];\n  downSampled?: ImageBitmap | HTMLImageElement;\n  downSamplingRate?: number;\n}\n\nconst IMAGE_CACHE = new RefCountCache<ImageCache>();\nIMAGE_CACHE.onRefAdded = function onRefAdded(\n  this: RefCountCache<ImageCache>,\n  ref,\n) {\n  ref.addEventListener(\n    ElementEvent.DESTROY,\n    () => {\n      this.releaseRef(ref);\n    },\n    { once: true },\n  );\n};\n\nexport type GradientParams = (LinearGradient & RadialGradient) & {\n  width: number;\n  height: number;\n  /**\n   * Top-left corner\n   */\n  min: [number, number];\n  type: GradientType;\n};\n\nexport class ImagePool {\n  static isSupportTile = !!OffscreenCanvasCreator.createCanvas();\n  private gradientCache: Record<string, CanvasGradient> = {};\n  private patternCache: Record<string, CanvasPattern> = {};\n\n  constructor(\n    public context: CanvasContext,\n    private runtime: GlobalRuntime,\n  ) {}\n\n  getImageSync(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n    callback?: (cache: ImageCache) => void,\n  ): ImageCache | null {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        callback?.(imageCache);\n\n        return imageCache;\n      }\n    }\n\n    this.getOrCreateImage(src, ref)\n      .then((cache) => {\n        callback?.(cache);\n      })\n      .catch((reason) => {\n        console.error(reason);\n      });\n\n    return null;\n  }\n\n  getOrCreateImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageSource = isString(src) ? src : src.src;\n\n    if (!isString(src) && !IMAGE_CACHE.has(imageSource)) {\n      const imageCache: ImageCache = {\n        img: src,\n        size: [src.naturalWidth || src.width, src.naturalHeight || src.height],\n        tileSize: calculateImageTileSize(src),\n      };\n\n      IMAGE_CACHE.put(imageSource, imageCache, ref);\n    }\n\n    if (IMAGE_CACHE.has(imageSource)) {\n      const imageCache = IMAGE_CACHE.get(imageSource, ref);\n\n      if (imageCache.img.complete) {\n        return Promise.resolve(imageCache);\n      }\n\n      return new Promise((resolve, reject) => {\n        imageCache.img.addEventListener('load', () => {\n          imageCache.size = [\n            imageCache.img.naturalWidth || imageCache.img.width,\n            imageCache.img.naturalHeight || imageCache.img.height,\n          ];\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        });\n\n        imageCache.img.addEventListener('error', (ev) => {\n          reject(ev);\n        });\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      // @see https://github.com/antvis/g/issues/938\n      const image = this.context.config.createImage();\n\n      if (image) {\n        const imageCache: ImageCache = {\n          img: image,\n          size: [0, 0],\n          tileSize: calculateImageTileSize(image),\n        };\n\n        IMAGE_CACHE.put(imageSource, imageCache, ref);\n\n        image.onload = () => {\n          imageCache.size = [\n            image.naturalWidth || image.width,\n            image.naturalHeight || image.height,\n          ];\n          imageCache.tileSize = calculateImageTileSize(imageCache.img);\n          resolve(imageCache);\n        };\n        image.onerror = (ev) => {\n          reject(ev);\n        };\n        image.crossOrigin = 'Anonymous';\n        image.src = imageSource;\n      }\n    });\n  }\n\n  async createDownSampledImage(\n    src: Image['attributes']['src'],\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    if (typeof imageCache.downSamplingRate !== 'undefined') {\n      return imageCache;\n    }\n\n    const { enableLargeImageOptimization } = this.context.config;\n    const { maxDownSampledImageSize = 2048, downSamplingRateThreshold = 0.5 } =\n      typeof enableLargeImageOptimization === 'boolean'\n        ? {}\n        : enableLargeImageOptimization;\n    const createImageBitmapFunc = this.runtime.globalThis\n      .createImageBitmap as typeof createImageBitmap;\n    const [originWidth, originHeight] = imageCache.size;\n    let resizedImage: ImageCache['downSampled'] = imageCache.img;\n    let downSamplingRate = Math.min(\n      (maxDownSampledImageSize + maxDownSampledImageSize) /\n        (originWidth + originHeight),\n      Math.max(0.01, Math.min(downSamplingRateThreshold, 0.5)),\n    );\n\n    let updateCache: ImageCache = {\n      ...imageCache,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    if (createImageBitmapFunc) {\n      try {\n        resizedImage = await createImageBitmapFunc(imageCache.img, {\n          resizeWidth: originWidth * downSamplingRate,\n          resizeHeight: originHeight * downSamplingRate,\n        });\n      } catch {\n        downSamplingRate = 1;\n      }\n    } else {\n      downSamplingRate = 1;\n    }\n\n    updateCache = {\n      ...this.getImageSync(src, ref),\n      downSampled: resizedImage,\n      downSamplingRate,\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  async createImageTiles(\n    src: Image['attributes']['src'],\n    tiles: [number, number][],\n    rerender: () => void,\n    ref: DisplayObject,\n  ): Promise<ImageCache> {\n    const imageCache = await this.getOrCreateImage(src, ref);\n    const { requestAnimationFrame, cancelAnimationFrame } =\n      ref.ownerDocument.defaultView;\n\n    ImageSlicer.api = {\n      requestAnimationFrame,\n      cancelAnimationFrame,\n      createCanvas: () => OffscreenCanvasCreator.createCanvas(),\n    };\n\n    const updateCache: ImageCache = {\n      ...imageCache,\n      ...ImageSlicer.sliceImage(\n        imageCache.img,\n        imageCache.tileSize[0],\n        imageCache.tileSize[0],\n        rerender,\n      ),\n    };\n\n    IMAGE_CACHE.update(imageCache.img.src, updateCache, ref);\n\n    return updateCache;\n  }\n\n  releaseImage(src: Image['attributes']['src'], ref: DisplayObject) {\n    IMAGE_CACHE.release(isString(src) ? src : src.src, ref);\n  }\n\n  releaseImageRef(ref: DisplayObject) {\n    IMAGE_CACHE.releaseRef(ref);\n  }\n\n  getOrCreatePatternSync(\n    object: DisplayObject,\n    pattern: Pattern,\n    context: CanvasRenderingContext2D,\n    $offscreenCanvas: HTMLCanvasElement,\n    dpr: number,\n    min: Tuple3Number,\n    callback: () => void,\n  ) {\n    const patternKey = this.generatePatternKey(pattern);\n    if (patternKey && this.patternCache[patternKey]) {\n      return this.patternCache[patternKey];\n    }\n\n    const { image, repetition, transform } = pattern;\n    let src: CanvasImageSource;\n    let needScaleWithDPR = false;\n    // Image URL\n    if (isString(image)) {\n      const imageCache = this.getImageSync(image, object, callback);\n      src = imageCache?.img;\n    } else if ($offscreenCanvas) {\n      src = $offscreenCanvas;\n      needScaleWithDPR = true;\n    } else {\n      src = image as CanvasImageSource;\n    }\n\n    // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createPattern\n    const canvasPattern = src && context.createPattern(src, repetition);\n\n    if (canvasPattern) {\n      let mat: mat4;\n      // @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern/setTransform\n      if (transform) {\n        mat = parsedTransformToMat4(\n          parseTransform(transform),\n          new DisplayObject({}),\n        );\n      } else {\n        mat = mat4.identity(mat4.create());\n      }\n\n      if (needScaleWithDPR) {\n        mat4.scale(mat, mat, [1 / dpr, 1 / dpr, 1]);\n      }\n\n      canvasPattern.setTransform({\n        a: mat[0],\n        b: mat[1],\n        c: mat[4],\n        d: mat[5],\n        e: mat[12] + min[0],\n        f: mat[13] + min[1],\n      });\n    }\n\n    if (patternKey && canvasPattern) {\n      this.patternCache[patternKey] = canvasPattern;\n    }\n\n    return canvasPattern;\n  }\n\n  getOrCreateGradient(\n    params: GradientParams,\n    context: CanvasRenderingContext2D,\n  ) {\n    const key = this.generateGradientKey(params);\n    const { type, steps, min, width, height, angle, cx, cy, size } = params;\n\n    if (this.gradientCache[key]) {\n      return this.gradientCache[key];\n    }\n\n    let gradient: CanvasGradient | null = null;\n    if (type === GradientType.LinearGradient) {\n      const { x1, y1, x2, y2 } = computeLinearGradient(\n        min,\n        width,\n        height,\n        angle,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createLinearGradient\n      gradient = context.createLinearGradient(x1, y1, x2, y2);\n    } else if (type === GradientType.RadialGradient) {\n      const { x, y, r } = computeRadialGradient(\n        min,\n        width,\n        height,\n        cx,\n        cy,\n        size,\n      );\n      // @see https://developer.mozilla.org/zh-CN/docs/Web/API/CanvasRenderingContext2D/createRadialGradient\n      gradient = context.createRadialGradient(x, y, 0, x, y, r);\n    }\n\n    if (gradient) {\n      steps.forEach(({ offset, color }) => {\n        if (offset.unit === UnitType.kPercentage) {\n          gradient?.addColorStop(offset.value / 100, color.toString());\n        }\n      });\n\n      this.gradientCache[key] = gradient;\n    }\n\n    return this.gradientCache[key];\n  }\n\n  private generateGradientKey(params: GradientParams): string {\n    const { type, min, width, height, steps, angle, cx, cy, size } = params;\n    return `gradient-${type}-${angle?.toString() || 0}-${cx?.toString() || 0}-${\n      cy?.toString() || 0\n    }-${size?.toString() || 0}-${min[0]}-${min[1]}-${width}-${height}-${steps\n      .map(({ offset, color }) => `${offset}${color}`)\n      .join('-')}`;\n  }\n\n  private generatePatternKey(pattern: Pattern) {\n    const { image, repetition } = pattern;\n    // only generate cache for Image\n    if (isString(image)) {\n      return `pattern-${image}-${repetition}`;\n    }\n    if ((image as Rect).nodeName === 'rect') {\n      return `pattern-${(image as Rect).entity}-${repetition}`;\n    }\n  }\n}\n\nfunction calculateImageTileSize(img: HTMLImageElement): [number, number] {\n  if (!img.complete) {\n    return [0, 0];\n  }\n\n  const [width, height] = [\n    img.naturalWidth || img.width,\n    img.naturalHeight || img.height,\n  ];\n\n  let tileSize = 256;\n\n  [256, 512].forEach((size) => {\n    const rows = Math.ceil(height / size);\n    const cols = Math.ceil(width / size);\n\n    if (rows * cols < 1e3) {\n      tileSize = size;\n    }\n  });\n\n  return [tileSize, tileSize];\n}\n","import type {\n  FederatedEvent,\n  Image,\n  MutationEvent,\n  RenderingPlugin,\n  RenderingPluginContext,\n  DisplayObject,\n} from '@antv/g-lite';\nimport { ElementEvent, Shape } from '@antv/g-lite';\nimport { isString } from '@antv/util';\nimport { ImagePool } from './ImagePool';\n\nexport class LoadImagePlugin implements RenderingPlugin {\n  static tag = 'LoadImage';\n\n  apply(context: RenderingPluginContext & { imagePool: ImagePool }) {\n    const { renderingService, renderingContext, imagePool } = context;\n    const canvas = renderingContext.root.ownerDocument.defaultView;\n\n    const calculateWithAspectRatio = (\n      object: Image,\n      imageWidth: number,\n      imageHeight: number,\n    ) => {\n      const { width, height } = object.parsedStyle;\n      if (width && !height) {\n        object.setAttribute('height', (imageHeight / imageWidth) * width);\n      } else if (!width && height) {\n        object.setAttribute('width', (imageWidth / imageHeight) * height);\n      }\n    };\n\n    const handleMounted = (e: FederatedEvent) => {\n      const object = e.target as Image;\n      const { nodeName, attributes } = object;\n      if (nodeName === Shape.IMAGE) {\n        const { src, keepAspectRatio } = attributes;\n\n        imagePool.getImageSync(\n          src,\n          object as DisplayObject,\n          ({ img: { width, height } }) => {\n            if (keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          },\n        );\n      }\n    };\n\n    const handleAttributeChanged = (e: MutationEvent) => {\n      const object = e.target as Image;\n      const { attrName, prevValue, newValue } = e;\n\n      if (object.nodeName !== Shape.IMAGE || attrName !== 'src') {\n        return;\n      }\n\n      if (prevValue !== newValue) {\n        imagePool.releaseImage(\n          prevValue as Image['attributes']['src'],\n          object as DisplayObject,\n        );\n      }\n\n      if (isString(newValue)) {\n        imagePool\n          .getOrCreateImage(newValue, object as DisplayObject)\n          .then(({ img: { width, height } }) => {\n            if (object.attributes.keepAspectRatio) {\n              calculateWithAspectRatio(object, width, height);\n            }\n\n            // set dirty rectangle flag\n            object.renderable.dirty = true;\n            renderingService.dirtify();\n          })\n          .catch(() => {\n            //\n          });\n      }\n    };\n\n    renderingService.hooks.init.tap(LoadImagePlugin.tag, () => {\n      canvas.addEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.addEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n    });\n\n    renderingService.hooks.destroy.tap(LoadImagePlugin.tag, () => {\n      canvas.removeEventListener(ElementEvent.MOUNTED, handleMounted);\n      canvas.removeEventListener(\n        ElementEvent.ATTR_MODIFIED,\n        handleAttributeChanged,\n      );\n    });\n  }\n}\n","import { AbstractRendererPlugin, type GlobalRuntime } from '@antv/g-lite';\nimport { ImagePool, type ImageCache } from './ImagePool';\nimport { LoadImagePlugin } from './LoadImagePlugin';\n\nexport { ImagePool, type ImageCache };\n\nexport class Plugin extends AbstractRendererPlugin {\n  name = 'image-loader';\n  init(runtime: GlobalRuntime): void {\n    // @ts-ignore\n    this.context.imagePool = new ImagePool(this.context, runtime);\n    this.addRenderingPlugin(new LoadImagePlugin());\n  }\n  destroy(): void {\n    this.removeAllRenderingPlugins();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}