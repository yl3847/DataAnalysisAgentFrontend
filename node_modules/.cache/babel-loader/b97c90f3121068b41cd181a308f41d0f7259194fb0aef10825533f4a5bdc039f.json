{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix, get, last } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { maybeTooltip } from '../utils/mark';\nimport { treeDataTransform } from '../utils/treeDataTransform';\n// Defaults\nconst GET_DEFAULT_LAYOUT_OPTIONS = (width, height) => ({\n  tile: 'treemapSquarify',\n  ratio: 0.5 * (1 + Math.sqrt(5)),\n  size: [width, height],\n  round: false,\n  ignoreParentValue: true,\n  padding: 0,\n  paddingInner: 0,\n  paddingOuter: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  sort: (a, b) => b.value - a.value,\n  layer: 0\n});\nconst GET_DEFAULT_OPTIONS = (width, height) => ({\n  type: 'rect',\n  axis: false,\n  encode: {\n    x: 'x',\n    y: 'y',\n    key: 'id',\n    color: d => d.path[1]\n  },\n  scale: {\n    x: {\n      domain: [0, width],\n      range: [0, 1]\n    },\n    y: {\n      domain: [0, height],\n      range: [0, 1]\n    }\n  },\n  style: {\n    stroke: '#fff'\n  },\n  state: {\n    active: {\n      opacity: 0.6\n    },\n    inactive: {\n      opacity: 1\n    }\n  }\n});\nconst DEFAULT_LABEL_OPTIONS = {\n  fontSize: 10,\n  text: d => last(d.path),\n  position: 'inside',\n  fill: '#000',\n  textOverflow: 'clip',\n  wordWrap: true,\n  maxLines: 1,\n  wordWrapWidth: d => d.x1 - d.x0,\n  isTreemapLabel: true\n};\nconst DEFAULT_TOOLTIP_OPTIONS = {\n  title: d => {\n    var _a, _b;\n    return (_b = (_a = d.path) === null || _a === void 0 ? void 0 : _a.join) === null || _b === void 0 ? void 0 : _b.call(_a, '.');\n  },\n  items: [{\n    field: 'value'\n  }]\n};\nconst DEFAULT_TOOLTIP_OPTIONS_DRILL = {\n  title: d => last(d.path),\n  items: [{\n    field: 'value'\n  }]\n};\nexport const Treemap = (options, context) => {\n  const {\n    width,\n    height,\n    options: markOptions\n  } = context;\n  const {\n      data,\n      encode = {},\n      scale,\n      style = {},\n      layout = {},\n      labels = [],\n      tooltip = {}\n    } = options,\n    resOptions = __rest(options, [\"data\", \"encode\", \"scale\", \"style\", \"layout\", \"labels\", \"tooltip\"]);\n  const treemapDrillDown = get(markOptions, ['interaction', 'treemapDrillDown']) || get(markOptions, ['marks', 0, 'interaction', 'treemapDrillDown']);\n  // Layout\n  const layoutOptions = deepMix({}, GET_DEFAULT_LAYOUT_OPTIONS(width, height), layout, {\n    layer: treemapDrillDown ? d => {\n      return d.depth === 1;\n    } : layout.layer\n  });\n  // Data\n  const [transformedData, transformedDataAll] = treeDataTransform(data, layoutOptions, encode);\n  // Label\n  const labelStyle = subObject(style, 'label');\n  return deepMix({}, GET_DEFAULT_OPTIONS(width, height), Object.assign(Object.assign({\n    data: transformedData,\n    scale,\n    style,\n    labels: [Object.assign(Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), labelStyle), treemapDrillDown && {\n      cursor: 'pointer'\n    }), ...labels]\n  }, resOptions), {\n    encode,\n    tooltip: maybeTooltip(tooltip, DEFAULT_TOOLTIP_OPTIONS),\n    axis: false\n  }), treemapDrillDown ? {\n    interaction: Object.assign(Object.assign({}, resOptions.interaction), {\n      treemapDrillDown: treemapDrillDown ? Object.assign(Object.assign({}, treemapDrillDown), {\n        originData: transformedDataAll,\n        layout: layoutOptions\n      }) : undefined\n    }),\n    encode: Object.assign({\n      color: d => last(d.path)\n    }, encode),\n    tooltip: maybeTooltip(tooltip, DEFAULT_TOOLTIP_OPTIONS_DRILL)\n  } : {});\n};\nTreemap.props = {};","map":{"version":3,"names":["deepMix","get","last","subObject","maybeTooltip","treeDataTransform","GET_DEFAULT_LAYOUT_OPTIONS","width","height","tile","ratio","Math","sqrt","size","round","ignoreParentValue","padding","paddingInner","paddingOuter","paddingTop","paddingRight","paddingBottom","paddingLeft","sort","a","b","value","layer","GET_DEFAULT_OPTIONS","type","axis","encode","x","y","key","color","d","path","scale","domain","range","style","stroke","state","active","opacity","inactive","DEFAULT_LABEL_OPTIONS","fontSize","text","position","fill","textOverflow","wordWrap","maxLines","wordWrapWidth","x1","x0","isTreemapLabel","DEFAULT_TOOLTIP_OPTIONS","title","_a","_b","join","call","items","field","DEFAULT_TOOLTIP_OPTIONS_DRILL","Treemap","options","context","markOptions","data","layout","labels","tooltip","resOptions","__rest","treemapDrillDown","layoutOptions","depth","transformedData","transformedDataAll","labelStyle","Object","assign","cursor","interaction","originData","undefined","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/treemap.ts"],"sourcesContent":["import { deepMix, get, last } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { CompositionComponent as CC } from '../runtime';\nimport { TreemapMark } from '../spec';\nimport { maybeTooltip } from '../utils/mark';\nimport { treeDataTransform } from '../utils/treeDataTransform';\n\nexport type TreemapOptions = Omit<TreemapMark, 'type'>;\n\n// Defaults\nconst GET_DEFAULT_LAYOUT_OPTIONS = (width, height) => ({\n  tile: 'treemapSquarify',\n  ratio: 0.5 * (1 + Math.sqrt(5)),\n  size: [width, height],\n  round: false,\n  ignoreParentValue: true,\n  padding: 0,\n  paddingInner: 0,\n  paddingOuter: 0,\n  paddingTop: 0,\n  paddingRight: 0,\n  paddingBottom: 0,\n  paddingLeft: 0,\n  sort: (a, b) => b.value - a.value,\n  layer: 0,\n});\n\nconst GET_DEFAULT_OPTIONS = (width, height) => ({\n  type: 'rect',\n  axis: false,\n  encode: {\n    x: 'x',\n    y: 'y',\n    key: 'id',\n    color: (d) => d.path[1],\n  },\n  scale: {\n    x: { domain: [0, width], range: [0, 1] },\n    y: { domain: [0, height], range: [0, 1] },\n  },\n  style: {\n    stroke: '#fff',\n  },\n  state: {\n    active: { opacity: 0.6 },\n    inactive: { opacity: 1 },\n  },\n});\n\nconst DEFAULT_LABEL_OPTIONS = {\n  fontSize: 10,\n  text: (d) => last(d.path),\n  position: 'inside',\n  fill: '#000',\n  textOverflow: 'clip',\n  wordWrap: true,\n  maxLines: 1,\n  wordWrapWidth: (d) => d.x1 - d.x0,\n  isTreemapLabel: true,\n};\n\nconst DEFAULT_TOOLTIP_OPTIONS = {\n  title: (d) => d.path?.join?.('.'),\n  items: [{ field: 'value' }],\n};\n\nconst DEFAULT_TOOLTIP_OPTIONS_DRILL = {\n  title: (d) => last(d.path),\n  items: [{ field: 'value' }],\n};\n\nexport const Treemap: CC<TreemapOptions> = (options, context) => {\n  const { width, height, options: markOptions } = context;\n\n  const {\n    data,\n    encode = {},\n    scale,\n    style = {},\n    layout = {},\n    labels = [],\n    tooltip = {},\n    ...resOptions\n  } = options;\n\n  const treemapDrillDown =\n    get(markOptions, ['interaction', 'treemapDrillDown']) ||\n    get(markOptions, ['marks', 0, 'interaction', 'treemapDrillDown']);\n\n  // Layout\n  const layoutOptions = deepMix(\n    {},\n    GET_DEFAULT_LAYOUT_OPTIONS(width, height),\n    layout,\n    {\n      layer: treemapDrillDown\n        ? (d) => {\n            return d.depth === 1;\n          }\n        : layout.layer,\n    },\n  );\n\n  // Data\n  const [transformedData, transformedDataAll] = treeDataTransform(\n    data,\n    layoutOptions,\n    encode,\n  );\n\n  // Label\n  const labelStyle = subObject(style, 'label');\n\n  return deepMix(\n    {},\n    GET_DEFAULT_OPTIONS(width, height),\n    {\n      data: transformedData,\n      scale,\n      style,\n      labels: [\n        {\n          ...DEFAULT_LABEL_OPTIONS,\n          ...labelStyle,\n          ...(treemapDrillDown && { cursor: 'pointer' }),\n        },\n        ...labels,\n      ],\n      ...resOptions,\n      encode,\n      tooltip: maybeTooltip(tooltip, DEFAULT_TOOLTIP_OPTIONS),\n      axis: false,\n    },\n    treemapDrillDown\n      ? {\n          interaction: {\n            ...resOptions.interaction,\n            treemapDrillDown: treemapDrillDown\n              ? {\n                  ...treemapDrillDown,\n                  originData: transformedDataAll,\n                  layout: layoutOptions,\n                }\n              : undefined,\n          },\n          encode: {\n            color: (d) => last(d.path),\n            ...encode,\n          },\n          tooltip: maybeTooltip(tooltip, DEFAULT_TOOLTIP_OPTIONS_DRILL),\n        }\n      : {},\n  );\n};\n\nTreemap.props = {};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}