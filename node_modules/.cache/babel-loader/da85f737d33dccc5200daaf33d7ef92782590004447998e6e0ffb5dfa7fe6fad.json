{"ast":null,"code":"import LinkedList from './linked-list';\nvar Queue = /** @class */function () {\n  function Queue() {\n    this.linkedList = new LinkedList();\n  }\n  /**\n   * 队列是否为空\n   */\n  Queue.prototype.isEmpty = function () {\n    return !this.linkedList.head;\n  };\n  /**\n   * 读取队列头部的元素， 不删除队列中的元素\n   */\n  Queue.prototype.peek = function () {\n    if (!this.linkedList.head) {\n      return null;\n    }\n    return this.linkedList.head.value;\n  };\n  /**\n   * 在队列的尾部新增一个元素\n   * @param value\n   */\n  Queue.prototype.enqueue = function (value) {\n    this.linkedList.append(value);\n  };\n  /**\n   * 删除队列中的头部元素，如果队列为空，则返回 null\n   */\n  Queue.prototype.dequeue = function () {\n    var removeHead = this.linkedList.deleteHead();\n    return removeHead ? removeHead.value : null;\n  };\n  Queue.prototype.toString = function (callback) {\n    return this.linkedList.toString(callback);\n  };\n  return Queue;\n}();\nexport default Queue;","map":{"version":3,"names":["LinkedList","Queue","linkedList","prototype","isEmpty","head","peek","value","enqueue","append","dequeue","removeHead","deleteHead","toString","callback"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/structs/queue.js"],"sourcesContent":["import LinkedList from './linked-list';\nvar Queue = /** @class */function () {\n  function Queue() {\n    this.linkedList = new LinkedList();\n  }\n  /**\n   * 队列是否为空\n   */\n  Queue.prototype.isEmpty = function () {\n    return !this.linkedList.head;\n  };\n  /**\n   * 读取队列头部的元素， 不删除队列中的元素\n   */\n  Queue.prototype.peek = function () {\n    if (!this.linkedList.head) {\n      return null;\n    }\n    return this.linkedList.head.value;\n  };\n  /**\n   * 在队列的尾部新增一个元素\n   * @param value\n   */\n  Queue.prototype.enqueue = function (value) {\n    this.linkedList.append(value);\n  };\n  /**\n   * 删除队列中的头部元素，如果队列为空，则返回 null\n   */\n  Queue.prototype.dequeue = function () {\n    var removeHead = this.linkedList.deleteHead();\n    return removeHead ? removeHead.value : null;\n  };\n  Queue.prototype.toString = function (callback) {\n    return this.linkedList.toString(callback);\n  };\n  return Queue;\n}();\nexport default Queue;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;AACtC,IAAIC,KAAK,GAAG,aAAa,YAAY;EACnC,SAASA,KAAKA,CAAA,EAAG;IACf,IAAI,CAACC,UAAU,GAAG,IAAIF,UAAU,CAAC,CAAC;EACpC;EACA;AACF;AACA;EACEC,KAAK,CAACE,SAAS,CAACC,OAAO,GAAG,YAAY;IACpC,OAAO,CAAC,IAAI,CAACF,UAAU,CAACG,IAAI;EAC9B,CAAC;EACD;AACF;AACA;EACEJ,KAAK,CAACE,SAAS,CAACG,IAAI,GAAG,YAAY;IACjC,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACG,IAAI,EAAE;MACzB,OAAO,IAAI;IACb;IACA,OAAO,IAAI,CAACH,UAAU,CAACG,IAAI,CAACE,KAAK;EACnC,CAAC;EACD;AACF;AACA;AACA;EACEN,KAAK,CAACE,SAAS,CAACK,OAAO,GAAG,UAAUD,KAAK,EAAE;IACzC,IAAI,CAACL,UAAU,CAACO,MAAM,CAACF,KAAK,CAAC;EAC/B,CAAC;EACD;AACF;AACA;EACEN,KAAK,CAACE,SAAS,CAACO,OAAO,GAAG,YAAY;IACpC,IAAIC,UAAU,GAAG,IAAI,CAACT,UAAU,CAACU,UAAU,CAAC,CAAC;IAC7C,OAAOD,UAAU,GAAGA,UAAU,CAACJ,KAAK,GAAG,IAAI;EAC7C,CAAC;EACDN,KAAK,CAACE,SAAS,CAACU,QAAQ,GAAG,UAAUC,QAAQ,EAAE;IAC7C,OAAO,IAAI,CAACZ,UAAU,CAACW,QAAQ,CAACC,QAAQ,CAAC;EAC3C,CAAC;EACD,OAAOb,KAAK;AACd,CAAC,CAAC,CAAC;AACH,eAAeA,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}