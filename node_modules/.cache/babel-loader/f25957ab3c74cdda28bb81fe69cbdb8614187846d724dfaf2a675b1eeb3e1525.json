{"ast":null,"code":"import { ConnectorShape } from '../shape';\nimport { baseAnnotationChannels, basePostInference, basePreInference } from './utils';\nimport { Link } from './link';\nconst shape = {\n  connector: ConnectorShape\n};\nexport const Connector = (...args) => {\n  return Link(...args);\n};\nConnector.props = {\n  defaultShape: 'connector',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [...baseAnnotationChannels({\n    shapes: Object.keys(shape)\n  }), {\n    name: 'x',\n    required: true\n  }, {\n    name: 'y',\n    required: true\n  }],\n  preInference: [...basePreInference()],\n  postInference: [...basePostInference()]\n};","map":{"version":3,"names":["ConnectorShape","baseAnnotationChannels","basePostInference","basePreInference","Link","shape","connector","Connector","args","props","defaultShape","defaultLabelShape","composite","channels","shapes","Object","keys","name","required","preInference","postInference"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/connector.ts"],"sourcesContent":["import { MarkComponent as MC } from '../runtime';\nimport { ConnectorMark } from '../spec';\nimport { ConnectorShape } from '../shape';\nimport {\n  baseAnnotationChannels,\n  basePostInference,\n  basePreInference,\n} from './utils';\nimport { Link } from './link';\n\nconst shape = {\n  connector: ConnectorShape,\n};\n\nexport type ConnectorOptions = Omit<ConnectorMark, 'type'>;\n\nexport const Connector: MC<ConnectorOptions> = (...args) => {\n  return Link(...args);\n};\n\nConnector.props = {\n  defaultShape: 'connector',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [\n    ...baseAnnotationChannels({ shapes: Object.keys(shape) }),\n    { name: 'x', required: true },\n    { name: 'y', required: true },\n  ],\n  preInference: [...basePreInference()],\n  postInference: [...basePostInference()],\n};\n"],"mappings":"AAEA,SAASA,cAAc,QAAQ,UAAU;AACzC,SACEC,sBAAsB,EACtBC,iBAAiB,EACjBC,gBAAgB,QACX,SAAS;AAChB,SAASC,IAAI,QAAQ,QAAQ;AAE7B,MAAMC,KAAK,GAAG;EACZC,SAAS,EAAEN;CACZ;AAID,OAAO,MAAMO,SAAS,GAAyBA,CAAC,GAAGC,IAAI,KAAI;EACzD,OAAOJ,IAAI,CAAC,GAAGI,IAAI,CAAC;AACtB,CAAC;AAEDD,SAAS,CAACE,KAAK,GAAG;EAChBC,YAAY,EAAE,WAAW;EACzBC,iBAAiB,EAAE,OAAO;EAC1BC,SAAS,EAAE,KAAK;EAChBP,KAAK;EACLQ,QAAQ,EAAE,CACR,GAAGZ,sBAAsB,CAAC;IAAEa,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACX,KAAK;EAAC,CAAE,CAAC,EACzD;IAAEY,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,EAC7B;IAAED,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,CAC9B;EACDC,YAAY,EAAE,CAAC,GAAGhB,gBAAgB,EAAE,CAAC;EACrCiB,aAAa,EAAE,CAAC,GAAGlB,iBAAiB,EAAE;CACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}