{"ast":null,"code":"import { mergeOptions } from '../../utils/style';\nimport { BaseShape } from './base-shape';\nimport { Label } from './label';\n/**\n * <zh/> 徽标\n *\n * <en/> Badge\n * @remarks\n * <zh/> 徽标是一种特殊的标签，通常用于展示数量或状态信息。\n *\n * <en/> Badge is a special label, usually used to display quantity or status information.\n */\nexport class Badge extends BaseShape {\n  constructor(options) {\n    super(mergeOptions({\n      style: Badge.defaultStyleProps\n    }, options));\n  }\n  getBadgeStyle(attributes) {\n    return this.getGraphicStyle(attributes);\n  }\n  render(attributes = this.parsedAttributes, container = this) {\n    this.upsert('label', Label, this.getBadgeStyle(attributes), container);\n  }\n  getGeometryBounds() {\n    const labelShape = this.getShape('label');\n    const shape = labelShape.getShape('background') || labelShape.getShape('text');\n    return shape.getGeometryBounds();\n  }\n}\nBadge.defaultStyleProps = {\n  padding: [2, 4, 2, 4],\n  fontSize: 10,\n  wordWrap: false,\n  backgroundRadius: '50%',\n  backgroundOpacity: 1\n};","map":{"version":3,"names":["mergeOptions","BaseShape","Label","Badge","constructor","options","style","defaultStyleProps","getBadgeStyle","attributes","getGraphicStyle","render","parsedAttributes","container","upsert","getGeometryBounds","labelShape","getShape","shape","padding","fontSize","wordWrap","backgroundRadius","backgroundOpacity"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/shapes/badge.ts"],"sourcesContent":["import type { DisplayObjectConfig, Group } from '@antv/g';\nimport { mergeOptions } from '../../utils/style';\nimport { BaseShape } from './base-shape';\nimport type { LabelStyleProps } from './label';\nimport { Label } from './label';\n\n/**\n * <zh/> 徽标样式\n *\n * <en/> Badge style\n */\nexport interface BadgeStyleProps extends LabelStyleProps {}\n\n/**\n * <zh/> 徽标\n *\n * <en/> Badge\n * @remarks\n * <zh/> 徽标是一种特殊的标签，通常用于展示数量或状态信息。\n *\n * <en/> Badge is a special label, usually used to display quantity or status information.\n */\nexport class Badge extends BaseShape<BadgeStyleProps> {\n  static defaultStyleProps: Partial<BadgeStyleProps> = {\n    padding: [2, 4, 2, 4],\n    fontSize: 10,\n    wordWrap: false,\n    backgroundRadius: '50%',\n    backgroundOpacity: 1,\n  };\n\n  constructor(options: DisplayObjectConfig<BadgeStyleProps>) {\n    super(mergeOptions({ style: Badge.defaultStyleProps }, options));\n  }\n\n  protected getBadgeStyle(attributes: Required<BadgeStyleProps>) {\n    return this.getGraphicStyle(attributes);\n  }\n\n  public render(attributes: Required<BadgeStyleProps> = this.parsedAttributes, container: Group = this) {\n    this.upsert('label', Label, this.getBadgeStyle(attributes), container);\n  }\n\n  public getGeometryBounds() {\n    const labelShape = this.getShape<BaseShape<LabelStyleProps>>('label');\n    const shape = labelShape.getShape('background') || labelShape.getShape('text');\n    return shape.getGeometryBounds();\n  }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,mBAAmB;AAChD,SAASC,SAAS,QAAQ,cAAc;AAExC,SAASC,KAAK,QAAQ,SAAS;AAS/B;;;;;;;;;AASA,OAAM,MAAOC,KAAM,SAAQF,SAA0B;EASnDG,YAAYC,OAA6C;IACvD,KAAK,CAACL,YAAY,CAAC;MAAEM,KAAK,EAAEH,KAAK,CAACI;IAAiB,CAAE,EAAEF,OAAO,CAAC,CAAC;EAClE;EAEUG,aAAaA,CAACC,UAAqC;IAC3D,OAAO,IAAI,CAACC,eAAe,CAACD,UAAU,CAAC;EACzC;EAEOE,MAAMA,CAACF,UAAA,GAAwC,IAAI,CAACG,gBAAgB,EAAEC,SAAA,GAAmB,IAAI;IAClG,IAAI,CAACC,MAAM,CAAC,OAAO,EAAEZ,KAAK,EAAE,IAAI,CAACM,aAAa,CAACC,UAAU,CAAC,EAAEI,SAAS,CAAC;EACxE;EAEOE,iBAAiBA,CAAA;IACtB,MAAMC,UAAU,GAAG,IAAI,CAACC,QAAQ,CAA6B,OAAO,CAAC;IACrE,MAAMC,KAAK,GAAGF,UAAU,CAACC,QAAQ,CAAC,YAAY,CAAC,IAAID,UAAU,CAACC,QAAQ,CAAC,MAAM,CAAC;IAC9E,OAAOC,KAAK,CAACH,iBAAiB,EAAE;EAClC;;AAxBOZ,KAAA,CAAAI,iBAAiB,GAA6B;EACnDY,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,KAAK;EACfC,gBAAgB,EAAE,KAAK;EACvBC,iBAAiB,EAAE;CACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}