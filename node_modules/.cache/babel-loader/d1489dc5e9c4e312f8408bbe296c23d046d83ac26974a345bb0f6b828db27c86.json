{"ast":null,"code":"import { intersectionAreaPath, scaleSolution, venn } from './utils/venn';\n/**\n * Layout venn data, get the path string for each set.\n */\nexport const Venn = options => {\n  const {\n    sets = 'sets',\n    size = 'size',\n    as = ['key', 'path'],\n    padding = 0\n  } = options;\n  const [key, path] = as;\n  return data => {\n    // Transform the data, venn layout use `sets` and `size` field.\n    const vennData = data.map(d => Object.assign(Object.assign({}, d), {\n      sets: d[sets],\n      size: d[size],\n      [key]: d.sets.join('&')\n    }));\n    // Sort data, avoid data occlusion.\n    vennData.sort((a, b) => a.sets.length - b.sets.length);\n    // Layout venn data.\n    const solution = venn(vennData);\n    let circles;\n    return vennData.map(datum => {\n      const setsValue = datum[sets];\n      const pathFunc = ({\n        width,\n        height\n      }) => {\n        circles = circles ? circles : scaleSolution(solution, width, height, padding);\n        const setCircles = setsValue.map(set => circles[set]);\n        let p = intersectionAreaPath(setCircles);\n        // Close the path for event picker.\n        if (!/[zZ]$/.test(p)) p += ' Z';\n        return p;\n      };\n      return Object.assign(Object.assign({}, datum), {\n        [path]: pathFunc\n      });\n    });\n  };\n};\nVenn.props = {};","map":{"version":3,"names":["intersectionAreaPath","scaleSolution","venn","Venn","options","sets","size","as","padding","key","path","data","vennData","map","d","Object","assign","join","sort","a","b","length","solution","circles","datum","setsValue","pathFunc","width","height","setCircles","set","p","test","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/venn.ts"],"sourcesContent":["import { DataComponent as DC } from '../runtime';\nimport { VennDataTransform } from '../spec';\nimport { intersectionAreaPath, scaleSolution, venn } from './utils/venn';\n\nexport type VennOptions = Omit<VennDataTransform, 'type'>;\n\ntype VennData = {\n  key?: string;\n  sets: string[];\n  size: number;\n};\n\n/**\n * Layout venn data, get the path string for each set.\n */\nexport const Venn: DC<VennOptions> = (options) => {\n  const {\n    sets = 'sets',\n    size = 'size',\n    as = ['key', 'path'],\n    padding = 0,\n  } = options;\n  const [key, path] = as;\n  return (data) => {\n    // Transform the data, venn layout use `sets` and `size` field.\n    const vennData: VennData[] = data.map((d) => ({\n      ...d,\n      sets: d[sets],\n      size: d[size],\n      [key]: d.sets.join('&'),\n    }));\n    // Sort data, avoid data occlusion.\n    vennData.sort((a, b) => a.sets.length - b.sets.length);\n\n    // Layout venn data.\n    const solution = venn(vennData);\n\n    let circles;\n\n    return vennData.map((datum) => {\n      const setsValue = datum[sets];\n      const pathFunc = ({ width, height }) => {\n        circles = circles\n          ? circles\n          : scaleSolution(solution, width, height, padding);\n        const setCircles = setsValue.map((set) => circles[set]);\n        let p = intersectionAreaPath(setCircles);\n        // Close the path for event picker.\n        if (!/[zZ]$/.test(p)) p += ' Z';\n        return p;\n      };\n\n      return { ...datum, [path]: pathFunc };\n    });\n  };\n};\n\nVenn.props = {};\n"],"mappings":"AAEA,SAASA,oBAAoB,EAAEC,aAAa,EAAEC,IAAI,QAAQ,cAAc;AAUxE;;;AAGA,OAAO,MAAMC,IAAI,GAAqBC,OAAO,IAAI;EAC/C,MAAM;IACJC,IAAI,GAAG,MAAM;IACbC,IAAI,GAAG,MAAM;IACbC,EAAE,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC;IACpBC,OAAO,GAAG;EAAC,CACZ,GAAGJ,OAAO;EACX,MAAM,CAACK,GAAG,EAAEC,IAAI,CAAC,GAAGH,EAAE;EACtB,OAAQI,IAAI,IAAI;IACd;IACA,MAAMC,QAAQ,GAAeD,IAAI,CAACE,GAAG,CAAEC,CAAC,IAAKC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACxCF,CAAC;MACJT,IAAI,EAAES,CAAC,CAACT,IAAI,CAAC;MACbC,IAAI,EAAEQ,CAAC,CAACR,IAAI,CAAC;MACb,CAACG,GAAG,GAAGK,CAAC,CAACT,IAAI,CAACY,IAAI,CAAC,GAAG;IAAC,EACvB,CAAC;IACH;IACAL,QAAQ,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACd,IAAI,CAACgB,MAAM,GAAGD,CAAC,CAACf,IAAI,CAACgB,MAAM,CAAC;IAEtD;IACA,MAAMC,QAAQ,GAAGpB,IAAI,CAACU,QAAQ,CAAC;IAE/B,IAAIW,OAAO;IAEX,OAAOX,QAAQ,CAACC,GAAG,CAAEW,KAAK,IAAI;MAC5B,MAAMC,SAAS,GAAGD,KAAK,CAACnB,IAAI,CAAC;MAC7B,MAAMqB,QAAQ,GAAGA,CAAC;QAAEC,KAAK;QAAEC;MAAM,CAAE,KAAI;QACrCL,OAAO,GAAGA,OAAO,GACbA,OAAO,GACPtB,aAAa,CAACqB,QAAQ,EAAEK,KAAK,EAAEC,MAAM,EAAEpB,OAAO,CAAC;QACnD,MAAMqB,UAAU,GAAGJ,SAAS,CAACZ,GAAG,CAAEiB,GAAG,IAAKP,OAAO,CAACO,GAAG,CAAC,CAAC;QACvD,IAAIC,CAAC,GAAG/B,oBAAoB,CAAC6B,UAAU,CAAC;QACxC;QACA,IAAI,CAAC,OAAO,CAACG,IAAI,CAACD,CAAC,CAAC,EAAEA,CAAC,IAAI,IAAI;QAC/B,OAAOA,CAAC;MACV,CAAC;MAED,OAAAhB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAYQ,KAAK;QAAE,CAACd,IAAI,GAAGgB;MAAQ;IACrC,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAEDvB,IAAI,CAAC8B,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}