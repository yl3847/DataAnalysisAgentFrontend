{"ast":null,"code":"import { __assign, __extends, __rest } from \"tslib\";\nimport { deepMix } from '@antv/util';\nimport { DisplayObject, Group } from '../../shapes';\nimport { deepAssign, select } from '../../util';\nvar Lines = /** @class */function (_super) {\n  __extends(Lines, _super);\n  function Lines(_a) {\n    var _this = this;\n    var style = _a.style,\n      rest = __rest(_a, [\"style\"]);\n    _this = _super.call(this, deepMix({}, {\n      type: 'lines'\n    }, __assign({\n      style: style\n    }, rest))) || this;\n    _this.linesGroup = _this.appendChild(new Group());\n    _this.areasGroup = _this.appendChild(new Group());\n    _this.render();\n    return _this;\n  }\n  Lines.prototype.render = function () {\n    var _a = this.attributes,\n      lines = _a.lines,\n      areas = _a.areas,\n      x = _a.x,\n      y = _a.y;\n    this.style.transform = \"translate(\".concat(x, \", \").concat(y, \")\");\n    if (lines) this.renderLines(lines);\n    if (areas) this.renderAreas(areas);\n  };\n  Lines.prototype.clear = function () {\n    this.linesGroup.removeChildren();\n    this.areasGroup.removeChildren();\n  };\n  Lines.prototype.update = function (attr) {\n    this.attr(deepAssign({}, this.attributes, attr));\n    this.render();\n  };\n  Lines.prototype.renderLines = function (lines) {\n    select(this.linesGroup).selectAll('.line').data(lines).join(function (enter) {\n      return enter.append('path').attr('className', 'line').each(function (style) {\n        this.attr(style);\n      });\n    }, function (update) {\n      return update.each(function (style) {\n        this.attr(style);\n      });\n    }, function (exit) {\n      return exit.remove();\n    });\n  };\n  Lines.prototype.renderAreas = function (areas) {\n    select(this.linesGroup).selectAll('.area').data(areas).join(function (enter) {\n      return enter.append('path').attr('className', 'area').each(function (style) {\n        this.attr(style);\n      });\n    }, function (update) {\n      return update.each(function (style) {\n        this.style(style);\n      });\n    }, function (exit) {\n      return exit.remove();\n    });\n  };\n  return Lines;\n}(DisplayObject);\nexport { Lines };","map":{"version":3,"names":["deepMix","DisplayObject","Group","deepAssign","select","Lines","_super","__extends","_a","_this","style","rest","__rest","call","type","__assign","linesGroup","appendChild","areasGroup","render","prototype","attributes","lines","areas","x","y","transform","concat","renderLines","renderAreas","clear","removeChildren","update","attr","selectAll","data","join","enter","append","each","exit","remove"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/sparkline/lines.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport type { BaseStyleProps, PathStyleProps } from '../../shapes';\nimport { DisplayObject, Group } from '../../shapes';\nimport { deepAssign, select } from '../../util';\n\nexport interface LinesStyleProps extends BaseStyleProps {\n  x?: number;\n  y?: number;\n  lines: PathStyleProps[];\n  areas: PathStyleProps[];\n}\n\nexport class Lines extends DisplayObject<LinesStyleProps> {\n  private linesGroup = this.appendChild(new Group());\n\n  private areasGroup = this.appendChild(new Group());\n\n  constructor({ style, ...rest }: Partial<DisplayObject<LinesStyleProps>>) {\n    super(deepMix({}, { type: 'lines' }, { style, ...rest }));\n    this.render();\n  }\n\n  public render(): void {\n    const { lines, areas, x, y } = this.attributes;\n    this.style.transform = `translate(${x}, ${y})`;\n    if (lines) this.renderLines(lines);\n    if (areas) this.renderAreas(areas);\n  }\n\n  public clear(): void {\n    this.linesGroup.removeChildren();\n    this.areasGroup.removeChildren();\n  }\n\n  public update(attr: Partial<LinesStyleProps>) {\n    this.attr(deepAssign({}, this.attributes, attr));\n    this.render();\n  }\n\n  private renderLines(lines: LinesStyleProps['lines']) {\n    select(this.linesGroup)\n      .selectAll('.line')\n      .data(lines)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('className', 'line')\n            .each(function (style) {\n              this.attr(style);\n            }),\n        (update) =>\n          update.each(function (style) {\n            this.attr(style);\n          }),\n        (exit) => exit.remove()\n      );\n  }\n\n  private renderAreas(areas: LinesStyleProps['areas']) {\n    select(this.linesGroup)\n      .selectAll('.area')\n      .data(areas)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('className', 'area')\n            .each(function (style) {\n              this.attr(style);\n            }),\n        (update) =>\n          update.each(function (style) {\n            this.style(style);\n          }),\n        (exit) => exit.remove()\n      );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}