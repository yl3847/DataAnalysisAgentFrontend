{"ast":null,"code":"/**\n * 将数值从 0-255 转换成 16 进制字符串\n * @param value\n * @returns\n */\nexport function toHex(value) {\n  var x16Value = Math.round(value).toString(16);\n  return x16Value.length === 1 ? \"0\".concat(x16Value) : x16Value;\n}\n/**\n * 数组转换成颜色\n * @param arr\n * @returns\n */\nexport function arr2rgb(arr) {\n  return \"#\".concat(toHex(arr[0])).concat(toHex(arr[1])).concat(toHex(arr[2]));\n}","map":{"version":3,"names":["toHex","value","x16Value","Math","round","toString","length","concat","arr2rgb","arr"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/color/arr2rgb.ts"],"sourcesContent":["/**\n * 将数值从 0-255 转换成 16 进制字符串\n * @param value\n * @returns\n */\nexport function toHex(value: number): string {\n  const x16Value = Math.round(value).toString(16);\n\n  return x16Value.length === 1 ? `0${x16Value}` : x16Value;\n}\n\n/**\n * 数组转换成颜色\n * @param arr\n * @returns\n */\nexport function arr2rgb(arr: number[]): string {\n  return `#${toHex(arr[0])}${toHex(arr[1])}${toHex(arr[2])}`;\n}\n"],"mappings":"AAAA;;;;;AAKA,OAAM,SAAUA,KAAKA,CAACC,KAAa;EACjC,IAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAACI,QAAQ,CAAC,EAAE,CAAC;EAE/C,OAAOH,QAAQ,CAACI,MAAM,KAAK,CAAC,GAAG,IAAAC,MAAA,CAAIL,QAAQ,CAAE,GAAGA,QAAQ;AAC1D;AAEA;;;;;AAKA,OAAM,SAAUM,OAAOA,CAACC,GAAa;EACnC,OAAO,IAAAF,MAAA,CAAIP,KAAK,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC,EAAAF,MAAA,CAAGP,KAAK,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC,EAAAF,MAAA,CAAGP,KAAK,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}