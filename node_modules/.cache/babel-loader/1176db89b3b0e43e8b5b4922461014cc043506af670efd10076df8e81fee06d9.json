{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nconst StyledWrapper = styled.div`\n  ${({\n  $placement\n}) => {\n  switch ($placement) {\n    case 'top':\n      return 'transform: translate(-50%, -100%); flex-direction: column-reverse;';\n    case 'right':\n      return 'transform: translate(0, -50%);';\n    case 'left':\n      return 'transform: translate(-100%, -50%); flex-direction: row-reverse;';\n    default:\n      return 'transform: translate(-50%, 0); flex-direction: column;';\n  }\n}}\n\n  .arrow-count-icon-bar {\n    ${({\n  $placement\n}) => {\n  const isVertical = $placement === 'top' || $placement === 'bottom';\n  return isVertical ? 'width: 3px; height: 8px; margin: 0 7px;' : 'width: 8px; height: 3px; margin: 7px 0;';\n}}\n    background-color: ${({\n  $color\n}) => $color};\n  }\n\n  .arrow-count-icon-circle {\n    width: 16px;\n    height: 16px;\n    color: #fff;\n    font-weight: 600;\n    font-size: 10px;\n    line-height: ${({\n  $isCollapsed\n}) => $isCollapsed ? '16px' : '14px'};\n    text-align: center;\n    background-color: ${({\n  $color\n}) => $color};\n    border-radius: 50%;\n  }\n\n  .arrow-count-icon-circle-arrow {\n    width: 16px;\n    height: 16px;\n    transform: ${({\n  $isCollapsed,\n  $placement\n}) => {\n  if ($isCollapsed) return 'none';\n  switch ($placement) {\n    case 'top':\n      return 'translateY(1px) rotate(-90deg)';\n    case 'right':\n      return 'translateX(-1px) rotate(0deg)';\n    case 'left':\n      return 'translateX(1px) rotate(180deg)';\n    default:\n      return 'translateY(-1px) rotate(90deg)';\n  }\n}};\n  }\n\n  display: ${({\n  $isCollapsed\n}) => $isCollapsed ? 'flex' : 'none'};\n\n  .collapsible-node-wrapper:hover & {\n    display: flex;\n  }\n`;\nexport const ArrowCountIcon = props => {\n  const {\n    className,\n    style,\n    graph,\n    data,\n    isCollapsed,\n    countType = 'descendant',\n    placement = 'bottom'\n  } = props;\n  const color = graph.getNodeData(data.id).style?.color || '#99ADD1';\n  const count = (countType === 'descendant' ? graph.getDescendantsData(data.id) : graph.getChildrenData(data.id)).length;\n  return React.createElement(StyledWrapper, {\n    \"$color\": color,\n    \"$isCollapsed\": isCollapsed,\n    \"$placement\": placement,\n    className: `arrow-count-icon ${isCollapsed ? `arrow-count-icon-collapsed` : ''} ${className || ''}`,\n    style: style\n  }, React.createElement(\"div\", {\n    className: \"arrow-count-icon-bar\"\n  }), React.createElement(\"div\", {\n    className: \"arrow-count-icon-circle\"\n  }, isCollapsed ? count : React.createElement(\"div\", {\n    className: \"arrow-count-icon-circle-arrow\"\n  }, React.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 16 16\",\n    fill: \"none\"\n  }, React.createElement(\"path\", {\n    d: \"M11,4 L5.5,8 L11,12\",\n    stroke: \"white\",\n    strokeWidth: \"1.5\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })))));\n};","map":{"version":3,"names":["React","styled","StyledWrapper","div","$placement","isVertical","$color","$isCollapsed","ArrowCountIcon","props","className","style","graph","data","isCollapsed","countType","placement","color","getNodeData","id","count","getDescendantsData","getChildrenData","length","createElement","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/core/base/collapse-expand-icon/arrow-count-icon.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst StyledWrapper = styled.div `\n  ${({ $placement }) => {\n    switch ($placement) {\n        case 'top':\n            return 'transform: translate(-50%, -100%); flex-direction: column-reverse;';\n        case 'right':\n            return 'transform: translate(0, -50%);';\n        case 'left':\n            return 'transform: translate(-100%, -50%); flex-direction: row-reverse;';\n        default:\n            return 'transform: translate(-50%, 0); flex-direction: column;';\n    }\n}}\n\n  .arrow-count-icon-bar {\n    ${({ $placement }) => {\n    const isVertical = $placement === 'top' || $placement === 'bottom';\n    return isVertical ? 'width: 3px; height: 8px; margin: 0 7px;' : 'width: 8px; height: 3px; margin: 7px 0;';\n}}\n    background-color: ${({ $color }) => $color};\n  }\n\n  .arrow-count-icon-circle {\n    width: 16px;\n    height: 16px;\n    color: #fff;\n    font-weight: 600;\n    font-size: 10px;\n    line-height: ${({ $isCollapsed }) => ($isCollapsed ? '16px' : '14px')};\n    text-align: center;\n    background-color: ${({ $color }) => $color};\n    border-radius: 50%;\n  }\n\n  .arrow-count-icon-circle-arrow {\n    width: 16px;\n    height: 16px;\n    transform: ${({ $isCollapsed, $placement }) => {\n    if ($isCollapsed)\n        return 'none';\n    switch ($placement) {\n        case 'top':\n            return 'translateY(1px) rotate(-90deg)';\n        case 'right':\n            return 'translateX(-1px) rotate(0deg)';\n        case 'left':\n            return 'translateX(1px) rotate(180deg)';\n        default:\n            return 'translateY(-1px) rotate(90deg)';\n    }\n}};\n  }\n\n  display: ${({ $isCollapsed }) => ($isCollapsed ? 'flex' : 'none')};\n\n  .collapsible-node-wrapper:hover & {\n    display: flex;\n  }\n`;\nexport const ArrowCountIcon = (props) => {\n    const { className, style, graph, data, isCollapsed, countType = 'descendant', placement = 'bottom' } = props;\n    const color = graph.getNodeData(data.id).style?.color || '#99ADD1';\n    const count = (countType === 'descendant' ? graph.getDescendantsData(data.id) : graph.getChildrenData(data.id))\n        .length;\n    return (React.createElement(StyledWrapper, { \"$color\": color, \"$isCollapsed\": isCollapsed, \"$placement\": placement, className: `arrow-count-icon ${isCollapsed ? `arrow-count-icon-collapsed` : ''} ${className || ''}`, style: style },\n        React.createElement(\"div\", { className: \"arrow-count-icon-bar\" }),\n        React.createElement(\"div\", { className: \"arrow-count-icon-circle\" }, isCollapsed ? (count) : (React.createElement(\"div\", { className: \"arrow-count-icon-circle-arrow\" },\n            React.createElement(\"svg\", { width: \"16\", height: \"16\", viewBox: \"0 0 16 16\", fill: \"none\" },\n                React.createElement(\"path\", { d: \"M11,4 L5.5,8 L11,12\", stroke: \"white\", strokeWidth: \"1.5\", strokeLinecap: \"round\", strokeLinejoin: \"round\" })))))));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}