{"ast":null,"code":"import { isEmpty } from '@antv/util';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport { getIncircleRadius, getTriangleCenter } from '../../utils/bbox';\nimport { getPortXYByPlacement, getTrianglePoints, getTrianglePorts } from '../../utils/element';\nimport { subStyleProps } from '../../utils/prefix';\nimport { mergeOptions } from '../../utils/style';\nimport { Polygon } from '../shapes/polygon';\n/**\n * <zh/> 三角形节点\n *\n * <en/> Triangle node\n */\nexport class Triangle extends Polygon {\n  constructor(options) {\n    super(mergeOptions({\n      style: Triangle.defaultStyleProps\n    }, options));\n  }\n  getPoints(attributes) {\n    const {\n      direction\n    } = attributes;\n    const [width, height] = this.getSize(attributes);\n    return getTrianglePoints(width, height, direction);\n  }\n  getPortXY(attributes, style) {\n    const {\n      direction\n    } = attributes;\n    const {\n      placement = 'top'\n    } = style;\n    const bbox = this.getShape('key').getLocalBounds();\n    const [width, height] = this.getSize(attributes);\n    const ports = getTrianglePorts(width, height, direction);\n    return getPortXYByPlacement(bbox, placement, ports, false);\n  }\n  // icon 处于内切三角形的重心\n  // icon is at the centroid of the triangle\n  getIconStyle(attributes) {\n    const {\n      icon,\n      iconText,\n      iconSrc,\n      direction\n    } = attributes;\n    if (icon === false || isEmpty(iconText || iconSrc)) return false;\n    const iconStyle = subStyleProps(this.getGraphicStyle(attributes), 'icon');\n    const bbox = this.getShape('key').getLocalBounds();\n    const [x, y] = getTriangleCenter(bbox, direction);\n    const size = getIncircleRadius(bbox, direction) * 2 * ICON_SIZE_RATIO;\n    return Object.assign({\n      x,\n      y,\n      width: size,\n      height: size\n    }, iconStyle);\n  }\n}\nTriangle.defaultStyleProps = {\n  size: 40,\n  direction: 'up'\n};","map":{"version":3,"names":["isEmpty","ICON_SIZE_RATIO","getIncircleRadius","getTriangleCenter","getPortXYByPlacement","getTrianglePoints","getTrianglePorts","subStyleProps","mergeOptions","Polygon","Triangle","constructor","options","style","defaultStyleProps","getPoints","attributes","direction","width","height","getSize","getPortXY","placement","bbox","getShape","getLocalBounds","ports","getIconStyle","icon","iconText","iconSrc","iconStyle","getGraphicStyle","x","y","size","Object","assign"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/nodes/triangle.ts"],"sourcesContent":["import type { DisplayObjectConfig } from '@antv/g';\nimport { isEmpty } from '@antv/util';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport type { NodePortStyleProps, Point, TriangleDirection, TrianglePortPlacement } from '../../types';\nimport { getIncircleRadius, getTriangleCenter } from '../../utils/bbox';\nimport { getPortXYByPlacement, getTrianglePoints, getTrianglePorts } from '../../utils/element';\nimport { subStyleProps } from '../../utils/prefix';\nimport { mergeOptions } from '../../utils/style';\nimport type { PolygonStyleProps } from '../shapes';\nimport { IconStyleProps } from '../shapes';\nimport { Polygon } from '../shapes/polygon';\n\n/**\n * <zh/> 三角形节点样式配置项\n *\n * <en/> Triangle node style props\n */\nexport interface TriangleStyleProps extends PolygonStyleProps {\n  /**\n   * <zh/> 三角形的方向\n   *\n   * <en/> The direction of the triangle\n   * @defaultValue 'up'\n   */\n  direction?: TriangleDirection;\n}\n\n/**\n * <zh/> 三角形节点\n *\n * <en/> Triangle node\n */\nexport class Triangle extends Polygon<TriangleStyleProps> {\n  static defaultStyleProps: Partial<TriangleStyleProps> = {\n    size: 40,\n    direction: 'up',\n  };\n\n  constructor(options: DisplayObjectConfig<TriangleStyleProps>) {\n    super(mergeOptions({ style: Triangle.defaultStyleProps }, options));\n  }\n\n  protected getPoints(attributes: Required<TriangleStyleProps>): Point[] {\n    const { direction } = attributes;\n    const [width, height] = this.getSize(attributes);\n    return getTrianglePoints(width, height, direction);\n  }\n\n  protected getPortXY(attributes: Required<TriangleStyleProps>, style: NodePortStyleProps): Point {\n    const { direction } = attributes;\n    const { placement = 'top' } = style;\n    const bbox = this.getShape('key').getLocalBounds();\n    const [width, height] = this.getSize(attributes);\n    const ports = getTrianglePorts(width, height, direction);\n    return getPortXYByPlacement(bbox, placement as TrianglePortPlacement, ports, false);\n  }\n\n  // icon 处于内切三角形的重心\n  // icon is at the centroid of the triangle\n  protected getIconStyle(attributes: Required<TriangleStyleProps>): false | IconStyleProps {\n    const { icon, iconText, iconSrc, direction } = attributes;\n\n    if (icon === false || isEmpty(iconText || iconSrc)) return false;\n\n    const iconStyle = subStyleProps<IconStyleProps>(this.getGraphicStyle(attributes), 'icon');\n    const bbox = this.getShape('key').getLocalBounds();\n    const [x, y] = getTriangleCenter(bbox, direction);\n    const size = getIncircleRadius(bbox, direction) * 2 * ICON_SIZE_RATIO;\n\n    return {\n      x,\n      y,\n      width: size,\n      height: size,\n      ...iconStyle,\n    };\n  }\n}\n"],"mappings":"AACA,SAASA,OAAO,QAAQ,YAAY;AACpC,SAASC,eAAe,QAAQ,yBAAyB;AAEzD,SAASC,iBAAiB,EAAEC,iBAAiB,QAAQ,kBAAkB;AACvE,SAASC,oBAAoB,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAQ,qBAAqB;AAC/F,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,YAAY,QAAQ,mBAAmB;AAGhD,SAASC,OAAO,QAAQ,mBAAmB;AAiB3C;;;;;AAKA,OAAM,MAAOC,QAAS,SAAQD,OAA2B;EAMvDE,YAAYC,OAAgD;IAC1D,KAAK,CAACJ,YAAY,CAAC;MAAEK,KAAK,EAAEH,QAAQ,CAACI;IAAiB,CAAE,EAAEF,OAAO,CAAC,CAAC;EACrE;EAEUG,SAASA,CAACC,UAAwC;IAC1D,MAAM;MAAEC;IAAS,CAAE,GAAGD,UAAU;IAChC,MAAM,CAACE,KAAK,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,OAAO,CAACJ,UAAU,CAAC;IAChD,OAAOX,iBAAiB,CAACa,KAAK,EAAEC,MAAM,EAAEF,SAAS,CAAC;EACpD;EAEUI,SAASA,CAACL,UAAwC,EAAEH,KAAyB;IACrF,MAAM;MAAEI;IAAS,CAAE,GAAGD,UAAU;IAChC,MAAM;MAAEM,SAAS,GAAG;IAAK,CAAE,GAAGT,KAAK;IACnC,MAAMU,IAAI,GAAG,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,CAACC,cAAc,EAAE;IAClD,MAAM,CAACP,KAAK,EAAEC,MAAM,CAAC,GAAG,IAAI,CAACC,OAAO,CAACJ,UAAU,CAAC;IAChD,MAAMU,KAAK,GAAGpB,gBAAgB,CAACY,KAAK,EAAEC,MAAM,EAAEF,SAAS,CAAC;IACxD,OAAOb,oBAAoB,CAACmB,IAAI,EAAED,SAAkC,EAAEI,KAAK,EAAE,KAAK,CAAC;EACrF;EAEA;EACA;EACUC,YAAYA,CAACX,UAAwC;IAC7D,MAAM;MAAEY,IAAI;MAAEC,QAAQ;MAAEC,OAAO;MAAEb;IAAS,CAAE,GAAGD,UAAU;IAEzD,IAAIY,IAAI,KAAK,KAAK,IAAI5B,OAAO,CAAC6B,QAAQ,IAAIC,OAAO,CAAC,EAAE,OAAO,KAAK;IAEhE,MAAMC,SAAS,GAAGxB,aAAa,CAAiB,IAAI,CAACyB,eAAe,CAAChB,UAAU,CAAC,EAAE,MAAM,CAAC;IACzF,MAAMO,IAAI,GAAG,IAAI,CAACC,QAAQ,CAAC,KAAK,CAAC,CAACC,cAAc,EAAE;IAClD,MAAM,CAACQ,CAAC,EAAEC,CAAC,CAAC,GAAG/B,iBAAiB,CAACoB,IAAI,EAAEN,SAAS,CAAC;IACjD,MAAMkB,IAAI,GAAGjC,iBAAiB,CAACqB,IAAI,EAAEN,SAAS,CAAC,GAAG,CAAC,GAAGhB,eAAe;IAErE,OAAAmC,MAAA,CAAAC,MAAA;MACEJ,CAAC;MACDC,CAAC;MACDhB,KAAK,EAAEiB,IAAI;MACXhB,MAAM,EAAEgB;IAAI,GACTJ,SAAS;EAEhB;;AA3COrB,QAAA,CAAAI,iBAAiB,GAAgC;EACtDqB,IAAI,EAAE,EAAE;EACRlB,SAAS,EAAE;CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}