{"ast":null,"code":"import { Threshold } from './threshold';\nimport { wilkinsonExtended } from '../tick-methods/wilkinson-extended';\nimport { d3LinearNice } from '../utils';\n/**\n * 类似 Threshold 比例尺，区别在于 thresholds 是根据连续的 domain 根据离散的 range 的数量计算而得到的。\n */\nexport class Quantize extends Threshold {\n  getDefaultOptions() {\n    return {\n      domain: [0, 1],\n      range: [0.5],\n      nice: false,\n      tickCount: 5,\n      tickMethod: wilkinsonExtended\n    };\n  }\n  constructor(options) {\n    super(options);\n  }\n  nice() {\n    const {\n      nice\n    } = this.options;\n    if (nice) {\n      const [min, max, tickCount] = this.getTickMethodOptions();\n      this.options.domain = d3LinearNice(min, max, tickCount);\n    }\n  }\n  getTicks() {\n    const {\n      tickMethod\n    } = this.options;\n    const [min, max, tickCount] = this.getTickMethodOptions();\n    return tickMethod(min, max, tickCount);\n  }\n  getTickMethodOptions() {\n    const {\n      domain,\n      tickCount\n    } = this.options;\n    const min = domain[0];\n    const max = domain[domain.length - 1];\n    return [min, max, tickCount];\n  }\n  rescale() {\n    this.nice();\n    const {\n      range,\n      domain\n    } = this.options;\n    const [x0, x1] = domain;\n    this.n = range.length - 1;\n    this.thresholds = new Array(this.n);\n    for (let i = 0; i < this.n; i += 1) {\n      this.thresholds[i] = ((i + 1) * x1 - (i - this.n) * x0) / (this.n + 1);\n    }\n  }\n  /**\n   * 如果是在第一段后或者最后一段就把两端的值添加上\n   */\n  invert(y) {\n    const [a, b] = super.invert(y);\n    const [x0, x1] = this.options.domain;\n    return a === undefined && b === undefined ? [a, b] : [a || x0, b || x1];\n  }\n  getThresholds() {\n    return this.thresholds;\n  }\n  clone() {\n    return new Quantize(this.options);\n  }\n}","map":{"version":3,"names":["Threshold","wilkinsonExtended","d3LinearNice","Quantize","getDefaultOptions","domain","range","nice","tickCount","tickMethod","constructor","options","min","max","getTickMethodOptions","getTicks","length","rescale","x0","x1","n","thresholds","Array","i","invert","y","a","b","undefined","getThresholds","clone"],"sources":["scales/quantize.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}