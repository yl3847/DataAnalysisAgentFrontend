{"ast":null,"code":"import { Color } from './color';\n/**\n * Render rect in different coordinate and using color channel for stroke and fill attribute.\n * The stroke attribute is valid with specified lineWidth attribute which defaults to zero.\n */\nexport const Rect = (options, context) => {\n  return Color(Object.assign({\n    colorAttribute: 'fill'\n  }, options), context);\n};\nRect.props = Object.assign(Object.assign({}, Color.props), {\n  defaultMarker: 'square'\n});","map":{"version":3,"names":["Color","Rect","options","context","Object","assign","colorAttribute","props","defaultMarker"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/shape/interval/rect.ts"],"sourcesContent":["import { ShapeComponent as SC } from '../../runtime';\nimport { Color } from './color';\n\nexport type RectOptions = {\n  /**\n   * Minimum width of each interval.\n   */\n  minWidth?: number;\n  /**\n   * Maximum width of each interval.\n   */\n  maxWidth?: number;\n\n  /**\n   * Minimum height of each interval.\n   */\n  minHeight?: number;\n};\n\n/**\n * Render rect in different coordinate and using color channel for stroke and fill attribute.\n * The stroke attribute is valid with specified lineWidth attribute which defaults to zero.\n */\nexport const Rect: SC<RectOptions> = (options, context) => {\n  return Color({ colorAttribute: 'fill', ...options }, context);\n};\n\nRect.props = {\n  ...Color.props,\n  defaultMarker: 'square',\n};\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,SAAS;AAkB/B;;;;AAIA,OAAO,MAAMC,IAAI,GAAoBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EACxD,OAAOH,KAAK,CAAAI,MAAA,CAAAC,MAAA;IAAGC,cAAc,EAAE;EAAM,GAAKJ,OAAO,GAAIC,OAAO,CAAC;AAC/D,CAAC;AAEDF,IAAI,CAACM,KAAK,GAAAH,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACLL,KAAK,CAACO,KAAK;EACdC,aAAa,EAAE;AAAQ,EACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}