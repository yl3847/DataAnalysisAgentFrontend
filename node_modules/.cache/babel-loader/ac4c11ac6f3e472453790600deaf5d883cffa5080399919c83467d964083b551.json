{"ast":null,"code":"import { Bin } from './bin';\nexport const BinX = (options = {}) => {\n  const {\n    thresholds\n  } = options;\n  return Bin(Object.assign(Object.assign({}, options), {\n    thresholdsX: thresholds,\n    groupChannels: ['color'],\n    binChannels: ['x']\n  }));\n};\nBinX.props = {};","map":{"version":3,"names":["Bin","BinX","options","thresholds","Object","assign","thresholdsX","groupChannels","binChannels","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/binX.ts"],"sourcesContent":["import { TransformComponent as TC } from '../runtime';\nimport { BinXTransform } from '../spec';\nimport { Bin } from './bin';\n\nexport type BinXOptions = Omit<BinXTransform, 'type'>;\n\nexport const BinX: TC<BinXOptions> = (options = {}) => {\n  const { thresholds } = options;\n  return Bin({\n    ...options,\n    thresholdsX: thresholds,\n    groupChannels: ['color'],\n    binChannels: ['x'],\n  });\n};\n\nBinX.props = {};\n"],"mappings":"AAEA,SAASA,GAAG,QAAQ,OAAO;AAI3B,OAAO,MAAMC,IAAI,GAAoBA,CAACC,OAAO,GAAG,EAAE,KAAI;EACpD,MAAM;IAAEC;EAAU,CAAE,GAAGD,OAAO;EAC9B,OAAOF,GAAG,CAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACLH,OAAO;IACVI,WAAW,EAAEH,UAAU;IACvBI,aAAa,EAAE,CAAC,OAAO,CAAC;IACxBC,WAAW,EAAE,CAAC,GAAG;EAAC,GAClB;AACJ,CAAC;AAEDP,IAAI,CAACQ,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}