{"ast":null,"code":"export function fixArc(pathArray, allPathCommands, i) {\n  if (pathArray[i].length > 7) {\n    pathArray[i].shift();\n    var pi = pathArray[i];\n    // const ni = i + 1;\n    var ni = i;\n    while (pi.length) {\n      // if created multiple C:s, their original seg is saved\n      allPathCommands[i] = 'A';\n      // @ts-ignore\n      pathArray.splice(ni += 1, 0, ['C'].concat(pi.splice(0, 6)));\n    }\n    pathArray.splice(i, 1);\n  }\n}","map":{"version":3,"names":["fixArc","pathArray","allPathCommands","i","length","shift","pi","ni","splice","concat"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/path/process/fix-arc.ts"],"sourcesContent":["import type { PathArray } from '../types';\n\nexport function fixArc(pathArray: PathArray, allPathCommands: string[], i: number) {\n  if (pathArray[i].length > 7) {\n    pathArray[i].shift();\n    const pi = pathArray[i];\n    // const ni = i + 1;\n    let ni = i;\n    while (pi.length) {\n      // if created multiple C:s, their original seg is saved\n      allPathCommands[i] = 'A';\n      // @ts-ignore\n      pathArray.splice((ni += 1), 0, ['C'].concat(pi.splice(0, 6)));\n    }\n    pathArray.splice(i, 1);\n  }\n}\n"],"mappings":"AAEA,OAAM,SAAUA,MAAMA,CAACC,SAAoB,EAAEC,eAAyB,EAAEC,CAAS;EAC/E,IAAIF,SAAS,CAACE,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IAC3BH,SAAS,CAACE,CAAC,CAAC,CAACE,KAAK,EAAE;IACpB,IAAMC,EAAE,GAAGL,SAAS,CAACE,CAAC,CAAC;IACvB;IACA,IAAII,EAAE,GAAGJ,CAAC;IACV,OAAOG,EAAE,CAACF,MAAM,EAAE;MAChB;MACAF,eAAe,CAACC,CAAC,CAAC,GAAG,GAAG;MACxB;MACAF,SAAS,CAACO,MAAM,CAAED,EAAE,IAAI,CAAC,EAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAACE,MAAM,CAACH,EAAE,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/D;IACAP,SAAS,CAACO,MAAM,CAACL,CAAC,EAAE,CAAC,CAAC;EACxB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}