{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { path as d3path } from '@antv/vendor/d3-path';\nimport { appendArc, applyStyle } from '../utils';\nimport { select } from '../../utils/selection';\nimport { isTranspose, isPolar } from '../../utils/coordinate';\nimport { dist } from '../../utils/vector';\n/**\n * Get vhv path in different coordinate.\n */\nfunction getVHVPath(from, to, coordinate, ratio) {\n  const path = d3path();\n  if (isPolar(coordinate)) {\n    const center = coordinate.getCenter();\n    const a = dist(from, center);\n    const b = dist(to, center);\n    const radius = (b - a) * ratio + a;\n    path.moveTo(from[0], from[1]);\n    appendArc(path, from, to, center, radius);\n    path.lineTo(to[0], to[1]);\n    return path;\n  }\n  if (isTranspose(coordinate)) {\n    path.moveTo(from[0], from[1]);\n    // VHV in x.\n    path.lineTo(from[0] + (to[0] - from[0]) * ratio, from[1]);\n    path.lineTo(from[0] + (to[0] - from[0]) * ratio, to[1]);\n    path.lineTo(to[0], to[1]);\n    return path;\n  }\n  path.moveTo(from[0], from[1]);\n  // VHV in y.\n  path.lineTo(from[0], from[1] + (to[1] - from[1]) * ratio);\n  path.lineTo(to[0], from[1] + (to[1] - from[1]) * ratio);\n  path.lineTo(to[0], to[1]);\n  return path;\n}\n/**\n * Connect 2 points with a VHV line, used in tree.\n */\nexport const VHV = (options, context) => {\n  const {\n      cornerRatio = 1 / 3\n    } = options,\n    style = __rest(options, [\"cornerRatio\"]);\n  const {\n    coordinate,\n    document\n  } = context;\n  return (points, value, defaults) => {\n    const {\n        defaultColor\n      } = defaults,\n      rest = __rest(defaults, [\"defaultColor\"]);\n    const {\n      color = defaultColor,\n      transform\n    } = value;\n    const [from, to] = points;\n    const path = getVHVPath(from, to, coordinate, cornerRatio);\n    return select(document.createElement('path', {})).call(applyStyle, rest).style('d', path.toString()).style('stroke', color).style('transform', transform).call(applyStyle, style).node();\n  };\n};\nVHV.props = {\n  defaultMarker: 'vhv',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut'\n};","map":{"version":3,"names":["path","d3path","appendArc","applyStyle","select","isTranspose","isPolar","dist","getVHVPath","from","to","coordinate","ratio","center","getCenter","a","b","radius","moveTo","lineTo","VHV","options","context","cornerRatio","style","__rest","document","points","value","defaults","defaultColor","rest","color","transform","createElement","call","toString","node","props","defaultMarker","defaultEnterAnimation","defaultUpdateAnimation","defaultExitAnimation"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/shape/link/vhv.ts"],"sourcesContent":["import { path as d3path } from '@antv/vendor/d3-path';\nimport { Coordinate } from '@antv/coord';\nimport { appendArc, applyStyle } from '../utils';\nimport { select } from '../../utils/selection';\nimport { isTranspose, isPolar } from '../../utils/coordinate';\nimport { Vector2, dist } from '../../utils/vector';\nimport { ShapeComponent as SC } from '../../runtime';\n\nexport type VHVOptions = {\n  /**\n   * The ratio of line corner, default: 1/3.\n   */\n  cornerRatio?: number;\n  [key: string]: any;\n};\n\n/**\n * Get vhv path in different coordinate.\n */\nfunction getVHVPath(\n  from: Vector2,\n  to: Vector2,\n  coordinate: Coordinate,\n  ratio: number,\n) {\n  const path = d3path();\n\n  if (isPolar(coordinate)) {\n    const center = coordinate.getCenter();\n\n    const a = dist(from, center);\n    const b = dist(to, center);\n    const radius = (b - a) * ratio + a;\n\n    path.moveTo(from[0], from[1]);\n    appendArc(path, from, to, center, radius);\n    path.lineTo(to[0], to[1]);\n\n    return path;\n  }\n\n  if (isTranspose(coordinate)) {\n    path.moveTo(from[0], from[1]);\n    // VHV in x.\n    path.lineTo(from[0] + (to[0] - from[0]) * ratio, from[1]);\n    path.lineTo(from[0] + (to[0] - from[0]) * ratio, to[1]);\n    path.lineTo(to[0], to[1]);\n\n    return path;\n  }\n\n  path.moveTo(from[0], from[1]);\n  // VHV in y.\n  path.lineTo(from[0], from[1] + (to[1] - from[1]) * ratio);\n  path.lineTo(to[0], from[1] + (to[1] - from[1]) * ratio);\n  path.lineTo(to[0], to[1]);\n\n  return path;\n}\n\n/**\n * Connect 2 points with a VHV line, used in tree.\n */\nexport const VHV: SC<VHVOptions> = (options, context) => {\n  const { cornerRatio = 1 / 3, ...style } = options;\n  const { coordinate, document } = context;\n  return (points, value, defaults) => {\n    const { defaultColor, ...rest } = defaults;\n    const { color = defaultColor, transform } = value;\n    const [from, to] = points;\n    const path = getVHVPath(from, to, coordinate, cornerRatio);\n    return select(document.createElement('path', {}))\n      .call(applyStyle, rest)\n      .style('d', path.toString())\n      .style('stroke', color)\n      .style('transform', transform)\n      .call(applyStyle, style)\n      .node();\n  };\n};\n\nVHV.props = {\n  defaultMarker: 'vhv',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut',\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}