{"ast":null,"code":"/**\n * Extract a column of data with specified map function from data.\n * Each datum in the array is not visual data by default.\n * Specifying identity scale for related channel explicitly will treat them as visual data.\n */\nexport const Transform = ({\n  value\n}) => {\n  return data => data.map(value);\n};\nTransform.props = {};","map":{"version":3,"names":["Transform","value","data","map","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/encode/transform.ts"],"sourcesContent":["import { EncodeComponent as EC } from '../runtime';\nimport { TransformEncode } from '../spec';\n\nexport type TransformOptions = Omit<TransformEncode, 'type'>;\n\n/**\n * Extract a column of data with specified map function from data.\n * Each datum in the array is not visual data by default.\n * Specifying identity scale for related channel explicitly will treat them as visual data.\n */\nexport const Transform: EC<TransformOptions> = ({ value }) => {\n  return (data) => data.map(value);\n};\n\nTransform.props = {};\n"],"mappings":"AAKA;;;;;AAKA,OAAO,MAAMA,SAAS,GAAyBA,CAAC;EAAEC;AAAK,CAAE,KAAI;EAC3D,OAAQC,IAAI,IAAKA,IAAI,CAACC,GAAG,CAACF,KAAK,CAAC;AAClC,CAAC;AAEDD,SAAS,CAACI,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}