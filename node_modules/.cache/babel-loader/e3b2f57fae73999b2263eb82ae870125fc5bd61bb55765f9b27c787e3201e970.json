{"ast":null,"code":"var degree = function degree(graphData) {\n  var degrees = {};\n  var _a = graphData.nodes,\n    nodes = _a === void 0 ? [] : _a,\n    _b = graphData.edges,\n    edges = _b === void 0 ? [] : _b;\n  nodes.forEach(function (node) {\n    degrees[node.id] = {\n      degree: 0,\n      inDegree: 0,\n      outDegree: 0\n    };\n  });\n  edges.forEach(function (edge) {\n    degrees[edge.source].degree++;\n    degrees[edge.source].outDegree++;\n    degrees[edge.target].degree++;\n    degrees[edge.target].inDegree++;\n  });\n  return degrees;\n};\nexport default degree;\n/**\n * 获取指定节点的入度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\nexport var getInDegree = function getInDegree(graphData, nodeId) {\n  var nodeDegree = degree(graphData);\n  if (nodeDegree[nodeId]) {\n    return degree(graphData)[nodeId].inDegree;\n  }\n  return 0;\n};\n/**\n * 获取指定节点的出度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\nexport var getOutDegree = function getOutDegree(graphData, nodeId) {\n  var nodeDegree = degree(graphData);\n  if (nodeDegree[nodeId]) {\n    return degree(graphData)[nodeId].outDegree;\n  }\n  return 0;\n};","map":{"version":3,"names":["degree","graphData","degrees","_a","nodes","_b","edges","forEach","node","id","inDegree","outDegree","edge","source","target","getInDegree","nodeId","nodeDegree","getOutDegree"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/degree.js"],"sourcesContent":["var degree = function degree(graphData) {\n  var degrees = {};\n  var _a = graphData.nodes,\n    nodes = _a === void 0 ? [] : _a,\n    _b = graphData.edges,\n    edges = _b === void 0 ? [] : _b;\n  nodes.forEach(function (node) {\n    degrees[node.id] = {\n      degree: 0,\n      inDegree: 0,\n      outDegree: 0\n    };\n  });\n  edges.forEach(function (edge) {\n    degrees[edge.source].degree++;\n    degrees[edge.source].outDegree++;\n    degrees[edge.target].degree++;\n    degrees[edge.target].inDegree++;\n  });\n  return degrees;\n};\nexport default degree;\n/**\n * 获取指定节点的入度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\nexport var getInDegree = function getInDegree(graphData, nodeId) {\n  var nodeDegree = degree(graphData);\n  if (nodeDegree[nodeId]) {\n    return degree(graphData)[nodeId].inDegree;\n  }\n  return 0;\n};\n/**\n * 获取指定节点的出度\n * @param graphData 图数据\n * @param nodeId 节点ID\n */\nexport var getOutDegree = function getOutDegree(graphData, nodeId) {\n  var nodeDegree = degree(graphData);\n  if (nodeDegree[nodeId]) {\n    return degree(graphData)[nodeId].outDegree;\n  }\n  return 0;\n};"],"mappings":"AAAA,IAAIA,MAAM,GAAG,SAASA,MAAMA,CAACC,SAAS,EAAE;EACtC,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIC,EAAE,GAAGF,SAAS,CAACG,KAAK;IACtBA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;IAC/BE,EAAE,GAAGJ,SAAS,CAACK,KAAK;IACpBA,KAAK,GAAGD,EAAE,KAAK,KAAK,CAAC,GAAG,EAAE,GAAGA,EAAE;EACjCD,KAAK,CAACG,OAAO,CAAC,UAAUC,IAAI,EAAE;IAC5BN,OAAO,CAACM,IAAI,CAACC,EAAE,CAAC,GAAG;MACjBT,MAAM,EAAE,CAAC;MACTU,QAAQ,EAAE,CAAC;MACXC,SAAS,EAAE;IACb,CAAC;EACH,CAAC,CAAC;EACFL,KAAK,CAACC,OAAO,CAAC,UAAUK,IAAI,EAAE;IAC5BV,OAAO,CAACU,IAAI,CAACC,MAAM,CAAC,CAACb,MAAM,EAAE;IAC7BE,OAAO,CAACU,IAAI,CAACC,MAAM,CAAC,CAACF,SAAS,EAAE;IAChCT,OAAO,CAACU,IAAI,CAACE,MAAM,CAAC,CAACd,MAAM,EAAE;IAC7BE,OAAO,CAACU,IAAI,CAACE,MAAM,CAAC,CAACJ,QAAQ,EAAE;EACjC,CAAC,CAAC;EACF,OAAOR,OAAO;AAChB,CAAC;AACD,eAAeF,MAAM;AACrB;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIe,WAAW,GAAG,SAASA,WAAWA,CAACd,SAAS,EAAEe,MAAM,EAAE;EAC/D,IAAIC,UAAU,GAAGjB,MAAM,CAACC,SAAS,CAAC;EAClC,IAAIgB,UAAU,CAACD,MAAM,CAAC,EAAE;IACtB,OAAOhB,MAAM,CAACC,SAAS,CAAC,CAACe,MAAM,CAAC,CAACN,QAAQ;EAC3C;EACA,OAAO,CAAC;AACV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIQ,YAAY,GAAG,SAASA,YAAYA,CAACjB,SAAS,EAAEe,MAAM,EAAE;EACjE,IAAIC,UAAU,GAAGjB,MAAM,CAACC,SAAS,CAAC;EAClC,IAAIgB,UAAU,CAACD,MAAM,CAAC,EAAE;IACtB,OAAOhB,MAAM,CAACC,SAAS,CAAC,CAACe,MAAM,CAAC,CAACL,SAAS;EAC5C;EACA,OAAO,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}