{"ast":null,"code":"/**\n * <zh/> 获取图形的所有子元素\n *\n * <en/> Get all the child elements of the shape\n * @param shape - <zh/> 图形元素 | <en/> shape\n * @returns <zh/> 子元素数组 | <en/> child elements array\n */\nexport function getDescendantShapes(shape) {\n  const succeeds = [];\n  // 遍历所有子元素，并将子元素的子元素加入到数组中\n  const traverse = shape => {\n    if (shape === null || shape === void 0 ? void 0 : shape.children.length) {\n      shape.children.forEach(child => {\n        succeeds.push(child);\n        traverse(child);\n      });\n    }\n  };\n  traverse(shape);\n  return succeeds;\n}\n/**\n * <zh/> 获取图形的所有祖先元素\n *\n * <en/> Get all the ancestor elements of the shape\n * @param shape - <zh/> 图形元素 | <en/> shape\n * @returns <zh/> 祖先元素数组 | <en/> ancestor elements array\n */\nexport function getAncestorShapes(shape) {\n  const ancestors = [];\n  let currentNode = shape.parentNode;\n  while (currentNode) {\n    ancestors.push(currentNode);\n    currentNode = currentNode.parentNode;\n  }\n  return ancestors;\n}","map":{"version":3,"names":["getDescendantShapes","shape","succeeds","traverse","children","length","forEach","child","push","getAncestorShapes","ancestors","currentNode","parentNode"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/shape.ts"],"sourcesContent":["import type { DisplayObject } from '@antv/g';\n\n/**\n * <zh/> 获取图形的所有子元素\n *\n * <en/> Get all the child elements of the shape\n * @param shape - <zh/> 图形元素 | <en/> shape\n * @returns <zh/> 子元素数组 | <en/> child elements array\n */\nexport function getDescendantShapes<T extends DisplayObject>(shape: T) {\n  const succeeds: DisplayObject[] = [];\n\n  // 遍历所有子元素，并将子元素的子元素加入到数组中\n  const traverse = (shape: DisplayObject) => {\n    if (shape?.children.length) {\n      (shape.children as DisplayObject[]).forEach((child) => {\n        succeeds.push(child);\n        traverse(child);\n      });\n    }\n  };\n\n  traverse(shape);\n\n  return succeeds;\n}\n\n/**\n * <zh/> 获取图形的所有祖先元素\n *\n * <en/> Get all the ancestor elements of the shape\n * @param shape - <zh/> 图形元素 | <en/> shape\n * @returns <zh/> 祖先元素数组 | <en/> ancestor elements array\n */\nexport function getAncestorShapes<T extends DisplayObject>(shape: T) {\n  const ancestors: DisplayObject[] = [];\n  let currentNode = shape.parentNode as DisplayObject;\n  while (currentNode) {\n    ancestors.push(currentNode);\n    currentNode = currentNode.parentNode as DisplayObject;\n  }\n  return ancestors;\n}\n"],"mappings":"AAEA;;;;;;;AAOA,OAAM,SAAUA,mBAAmBA,CAA0BC,KAAQ;EACnE,MAAMC,QAAQ,GAAoB,EAAE;EAEpC;EACA,MAAMC,QAAQ,GAAIF,KAAoB,IAAI;IACxC,IAAIA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,QAAQ,CAACC,MAAM,EAAE;MACzBJ,KAAK,CAACG,QAA4B,CAACE,OAAO,CAAEC,KAAK,IAAI;QACpDL,QAAQ,CAACM,IAAI,CAACD,KAAK,CAAC;QACpBJ,QAAQ,CAACI,KAAK,CAAC;MACjB,CAAC,CAAC;IACJ;EACF,CAAC;EAEDJ,QAAQ,CAACF,KAAK,CAAC;EAEf,OAAOC,QAAQ;AACjB;AAEA;;;;;;;AAOA,OAAM,SAAUO,iBAAiBA,CAA0BR,KAAQ;EACjE,MAAMS,SAAS,GAAoB,EAAE;EACrC,IAAIC,WAAW,GAAGV,KAAK,CAACW,UAA2B;EACnD,OAAOD,WAAW,EAAE;IAClBD,SAAS,CAACF,IAAI,CAACG,WAAW,CAAC;IAC3BA,WAAW,GAAGA,WAAW,CAACC,UAA2B;EACvD;EACA,OAAOF,SAAS;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}