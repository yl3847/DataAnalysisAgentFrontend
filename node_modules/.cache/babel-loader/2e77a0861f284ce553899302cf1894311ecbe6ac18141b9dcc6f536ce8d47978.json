{"ast":null,"code":"import { quadtree } from 'd3-quadtree';\n// @ts-ignore\nimport { octree } from 'd3-octree';\nconst theta2 = 0.81; // Barnes-Hut approximation threshold\nconst epsilon = 0.1; // 为了防止出现除0的情况，加一个epsilon\nexport function forceNBody(calcGraph, factor, coulombDisScale2, accMap, dimensions = 2) {\n  const weightParam = factor / coulombDisScale2;\n  const calcNodes = calcGraph.getAllNodes();\n  const data = calcNodes.map((calcNode, i) => {\n    const {\n      nodeStrength,\n      x,\n      y,\n      z,\n      size\n    } = calcNode.data;\n    return {\n      x,\n      y,\n      z,\n      size,\n      index: i,\n      id: calcNode.id,\n      vx: 0,\n      vy: 0,\n      vz: 0,\n      weight: weightParam * nodeStrength\n    };\n  });\n  const tree = (dimensions === 2 ? quadtree(data, d => d.x, d => d.y) : octree(data, d => d.x, d => d.y, d => d.z)).visitAfter(accumulate); // init internal node\n  const nodeMap = new Map();\n  data.forEach(n => {\n    nodeMap.set(n.id, n);\n    // @ts-ignore\n    computeForce(n, tree, dimensions);\n  });\n  data.map((n, i) => {\n    const {\n      id,\n      data\n    } = calcNodes[i];\n    const {\n      mass = 1\n    } = data;\n    // 从 0 开始，= 初始化 + 加斥力\n    accMap[id] = {\n      x: n.vx / mass,\n      y: n.vy / mass,\n      z: n.vz / mass\n    };\n  });\n  return accMap;\n}\nfunction accumulate(treeNode) {\n  let accWeight = 0;\n  let accX = 0;\n  let accY = 0;\n  let accZ = 0;\n  let accSize = 0;\n  const numChildren = treeNode.length;\n  if (numChildren) {\n    // internal node, accumulate 4 child quads\n    for (let i = 0; i < numChildren; i++) {\n      const q = treeNode[i];\n      if (q && q.weight) {\n        accWeight += q.weight;\n        accX += q.x * q.weight;\n        accY += q.y * q.weight;\n        accZ += q.z * q.weight;\n        accSize += q.size * q.weight;\n      }\n    }\n    treeNode.x = accX / accWeight;\n    treeNode.y = accY / accWeight;\n    treeNode.z = accZ / accWeight;\n    treeNode.size = accSize / accWeight;\n    treeNode.weight = accWeight;\n  } else {\n    // leaf node\n    const q = treeNode;\n    treeNode.x = q.data.x;\n    treeNode.y = q.data.y;\n    treeNode.z = q.data.z;\n    treeNode.size = q.data.size;\n    treeNode.weight = q.data.weight;\n  }\n}\nconst apply = (treeNode, x1, arg1, arg2, arg3, node, dimensions) => {\n  var _a;\n  if (((_a = treeNode.data) === null || _a === void 0 ? void 0 : _a.id) === node.id) return;\n  const x2 = [arg1, arg2, arg3][dimensions - 1];\n  const dx = node.x - treeNode.x || epsilon;\n  const dy = node.y - treeNode.y || epsilon;\n  const dz = node.z - treeNode.z || epsilon;\n  const pos = [dx, dy, dz];\n  const width = x2 - x1;\n  let len2 = 0;\n  for (let i = 0; i < dimensions; i++) {\n    len2 += pos[i] * pos[i];\n  }\n  const len1 = Math.sqrt(len2);\n  const len3 = len1 * len2;\n  // far node, apply Barnes-Hut approximation\n  if (width * width * theta2 < len2) {\n    const param = treeNode.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n    node.vz += dz * param;\n    return true;\n  }\n  // near quad, compute force directly\n  if (treeNode.length) return false; // internal node, visit children\n  // leaf node\n  if (treeNode.data !== node) {\n    const param = treeNode.data.weight / len3;\n    node.vx += dx * param;\n    node.vy += dy * param;\n    node.vz += dz * param;\n  }\n};\n// @ts-ignore\nfunction computeForce(node, tree, dimensions) {\n  // @ts-ignore\n  tree.visit((treeNode, x1, y1, x2, y2) => apply(treeNode, x1, y1, x2, y2, node, dimensions));\n}","map":{"version":3,"names":["quadtree","octree","theta2","epsilon","forceNBody","calcGraph","factor","coulombDisScale2","accMap","dimensions","weightParam","calcNodes","getAllNodes","data","map","calcNode","i","nodeStrength","x","y","z","size","index","id","vx","vy","vz","weight","tree","d","visitAfter","accumulate","nodeMap","Map","forEach","n","set","computeForce","mass","treeNode","accWeight","accX","accY","accZ","accSize","numChildren","length","q","apply","x1","arg1","arg2","arg3","node","_a","x2","dx","dy","dz","pos","width","len2","len1","Math","sqrt","len3","param","visit","y1","y2"],"sources":["../../src/force/force-n-body.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}