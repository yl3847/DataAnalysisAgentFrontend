{"ast":null,"code":"import { mark } from '../../adaptor';\nimport { flow, get, isArray, set, dataTransform, transformOptions } from '../../utils';\nvar defaultTransform = function (params) {\n  var options = params.options;\n  var data = options.data;\n  var transformLinks = [{\n    type: 'custom',\n    callback: function (datum) {\n      return {\n        links: datum\n      };\n    }\n  }];\n  if (isArray(data)) {\n    if (data.length > 0) {\n      set(options, 'data', {\n        value: data,\n        transform: transformLinks\n      });\n    } else {\n      delete options.children;\n    }\n  } else if (get(data, 'type') === 'fetch' && get(data, 'value')) {\n    var transform = get(data, 'transform');\n    if (!isArray(transform)) {\n      set(data, 'transform', transformLinks);\n    }\n  }\n  return params;\n};\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n  return flow(dataTransform, defaultTransform, mark, transformOptions)(params);\n}","map":{"version":3,"names":["mark","flow","get","isArray","set","dataTransform","transformOptions","defaultTransform","params","options","data","transformLinks","type","callback","datum","links","length","value","transform","children","adaptor"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/plots/sankey/adaptor.js"],"sourcesContent":["import { mark } from '../../adaptor';\nimport { flow, get, isArray, set, dataTransform, transformOptions } from '../../utils';\nvar defaultTransform = function (params) {\n    var options = params.options;\n    var data = options.data;\n    var transformLinks = [\n        {\n            type: 'custom',\n            callback: function (datum) { return ({ links: datum }); },\n        },\n    ];\n    if (isArray(data)) {\n        if (data.length > 0) {\n            set(options, 'data', {\n                value: data,\n                transform: transformLinks,\n            });\n        }\n        else {\n            delete options.children;\n        }\n    }\n    else if (get(data, 'type') === 'fetch' && get(data, 'value')) {\n        var transform = get(data, 'transform');\n        if (!isArray(transform)) {\n            set(data, 'transform', transformLinks);\n        }\n    }\n    return params;\n};\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params) {\n    return flow(dataTransform, defaultTransform, mark, transformOptions)(params);\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,eAAe;AACpC,SAASC,IAAI,EAAEC,GAAG,EAAEC,OAAO,EAAEC,GAAG,EAAEC,aAAa,EAAEC,gBAAgB,QAAQ,aAAa;AACtF,IAAIC,gBAAgB,GAAG,SAAAA,CAAUC,MAAM,EAAE;EACrC,IAAIC,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC5B,IAAIC,IAAI,GAAGD,OAAO,CAACC,IAAI;EACvB,IAAIC,cAAc,GAAG,CACjB;IACIC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,SAAAA,CAAUC,KAAK,EAAE;MAAE,OAAQ;QAAEC,KAAK,EAAED;MAAM,CAAC;IAAG;EAC5D,CAAC,CACJ;EACD,IAAIX,OAAO,CAACO,IAAI,CAAC,EAAE;IACf,IAAIA,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MACjBZ,GAAG,CAACK,OAAO,EAAE,MAAM,EAAE;QACjBQ,KAAK,EAAEP,IAAI;QACXQ,SAAS,EAAEP;MACf,CAAC,CAAC;IACN,CAAC,MACI;MACD,OAAOF,OAAO,CAACU,QAAQ;IAC3B;EACJ,CAAC,MACI,IAAIjB,GAAG,CAACQ,IAAI,EAAE,MAAM,CAAC,KAAK,OAAO,IAAIR,GAAG,CAACQ,IAAI,EAAE,OAAO,CAAC,EAAE;IAC1D,IAAIQ,SAAS,GAAGhB,GAAG,CAACQ,IAAI,EAAE,WAAW,CAAC;IACtC,IAAI,CAACP,OAAO,CAACe,SAAS,CAAC,EAAE;MACrBd,GAAG,CAACM,IAAI,EAAE,WAAW,EAAEC,cAAc,CAAC;IAC1C;EACJ;EACA,OAAOH,MAAM;AACjB,CAAC;AACD;AACA;AACA;AACA;AACA,OAAO,SAASY,OAAOA,CAACZ,MAAM,EAAE;EAC5B,OAAOP,IAAI,CAACI,aAAa,EAAEE,gBAAgB,EAAEP,IAAI,EAAEM,gBAAgB,CAAC,CAACE,MAAM,CAAC;AAChF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}