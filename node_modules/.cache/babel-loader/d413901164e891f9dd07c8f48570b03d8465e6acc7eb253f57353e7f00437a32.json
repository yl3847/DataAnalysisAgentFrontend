{"ast":null,"code":"import { idOf } from '../utils/id';\n/**\n * <zh/> 重新分配绘制任务\n *\n * <en/> Reassign drawing tasks\n * @param input - <zh/>绘制数据 | <en/>DrawData\n * @param type - <zh/>类型 | <en/>type\n * @param elementType - <zh/>元素类型 | <en/>element type\n * @param datum - <zh/>数据 | <en/>data\n * @param overwrite - <zh/>是否覆盖现有数据 | <en/>whether to overwrite existing data\n */\nexport function reassignTo(input, type, elementType, datum, overwrite) {\n  const id = idOf(datum);\n  const typeName = `${elementType}s`;\n  const exitsDatum = overwrite ? datum : input.add[typeName].get(id) || input.update[typeName].get(id) || input.remove[typeName].get(id) || datum;\n  Object.entries(input).forEach(([_type, value]) => {\n    if (type === _type) value[typeName].set(id, exitsDatum);else value[typeName].delete(id);\n  });\n}\n/**\n * <zh/> 判断样式是否与原始样式一致\n *\n * <en/> Determine whether the style is consistent with the original style\n * @param style - <zh/> 样式 | <en/> style\n * @param originalStyle - <zh/> 原始样式 | <en/> original style\n * @returns <zh/> 是否一致 | <en/> Whether it is consistent\n */\nexport function isStyleEqual(style, originalStyle) {\n  return Object.keys(style).every(key => style[key] === originalStyle[key]);\n}","map":{"version":3,"names":["idOf","reassignTo","input","type","elementType","datum","overwrite","id","typeName","exitsDatum","add","get","update","remove","Object","entries","forEach","_type","value","set","delete","isStyleEqual","style","originalStyle","keys","every","key"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/transforms/utils.ts"],"sourcesContent":["import type { ElementDatum, ElementType } from '../types';\nimport { idOf } from '../utils/id';\nimport type { DrawData, ProcedureData } from './types';\n\n/**\n * <zh/> 重新分配绘制任务\n *\n * <en/> Reassign drawing tasks\n * @param input - <zh/>绘制数据 | <en/>DrawData\n * @param type - <zh/>类型 | <en/>type\n * @param elementType - <zh/>元素类型 | <en/>element type\n * @param datum - <zh/>数据 | <en/>data\n * @param overwrite - <zh/>是否覆盖现有数据 | <en/>whether to overwrite existing data\n */\nexport function reassignTo(\n  input: DrawData,\n  type: 'add' | 'update' | 'remove',\n  elementType: ElementType,\n  datum: ElementDatum,\n  overwrite?: boolean,\n) {\n  const id = idOf(datum);\n  const typeName = `${elementType}s` as keyof ProcedureData;\n  const exitsDatum: any = overwrite\n    ? datum\n    : input.add[typeName].get(id) || input.update[typeName].get(id) || input.remove[typeName].get(id) || datum;\n  Object.entries(input).forEach(([_type, value]) => {\n    if (type === _type) value[typeName].set(id, exitsDatum);\n    else value[typeName].delete(id);\n  });\n}\n\n/**\n * <zh/> 判断样式是否与原始样式一致\n *\n * <en/> Determine whether the style is consistent with the original style\n * @param style - <zh/> 样式 | <en/> style\n * @param originalStyle - <zh/> 原始样式 | <en/> original style\n * @returns <zh/> 是否一致 | <en/> Whether it is consistent\n */\nexport function isStyleEqual(style: Record<string, unknown>, originalStyle: Record<string, unknown>) {\n  return Object.keys(style).every((key) => style[key] === originalStyle[key]);\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,aAAa;AAGlC;;;;;;;;;;AAUA,OAAM,SAAUC,UAAUA,CACxBC,KAAe,EACfC,IAAiC,EACjCC,WAAwB,EACxBC,KAAmB,EACnBC,SAAmB;EAEnB,MAAMC,EAAE,GAAGP,IAAI,CAACK,KAAK,CAAC;EACtB,MAAMG,QAAQ,GAAG,GAAGJ,WAAW,GAA0B;EACzD,MAAMK,UAAU,GAAQH,SAAS,GAC7BD,KAAK,GACLH,KAAK,CAACQ,GAAG,CAACF,QAAQ,CAAC,CAACG,GAAG,CAACJ,EAAE,CAAC,IAAIL,KAAK,CAACU,MAAM,CAACJ,QAAQ,CAAC,CAACG,GAAG,CAACJ,EAAE,CAAC,IAAIL,KAAK,CAACW,MAAM,CAACL,QAAQ,CAAC,CAACG,GAAG,CAACJ,EAAE,CAAC,IAAIF,KAAK;EAC5GS,MAAM,CAACC,OAAO,CAACb,KAAK,CAAC,CAACc,OAAO,CAAC,CAAC,CAACC,KAAK,EAAEC,KAAK,CAAC,KAAI;IAC/C,IAAIf,IAAI,KAAKc,KAAK,EAAEC,KAAK,CAACV,QAAQ,CAAC,CAACW,GAAG,CAACZ,EAAE,EAAEE,UAAU,CAAC,CAAC,KACnDS,KAAK,CAACV,QAAQ,CAAC,CAACY,MAAM,CAACb,EAAE,CAAC;EACjC,CAAC,CAAC;AACJ;AAEA;;;;;;;;AAQA,OAAM,SAAUc,YAAYA,CAACC,KAA8B,EAAEC,aAAsC;EACjG,OAAOT,MAAM,CAACU,IAAI,CAACF,KAAK,CAAC,CAACG,KAAK,CAAEC,GAAG,IAAKJ,KAAK,CAACI,GAAG,CAAC,KAAKH,aAAa,CAACG,GAAG,CAAC,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}