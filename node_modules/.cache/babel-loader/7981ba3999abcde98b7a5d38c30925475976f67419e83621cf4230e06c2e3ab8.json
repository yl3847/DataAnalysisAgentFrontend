{"ast":null,"code":"import { __extends, __read, __spreadArray } from \"tslib\";\nimport { ElementEvent } from '@antv/g';\nimport { Group } from '../shapes/Group';\nimport { hide } from './visibility';\nvar OffscreenGroup = /** @class */function (_super) {\n  __extends(OffscreenGroup, _super);\n  function OffscreenGroup() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var _this = _super.apply(this, __spreadArray([], __read(args), false)) || this;\n    _this.isMutationObserved = true;\n    _this.addEventListener(ElementEvent.INSERTED, function () {\n      hide(_this);\n    });\n    return _this;\n  }\n  return OffscreenGroup;\n}(Group);\nexport function createOffscreenGroup(container) {\n  var group = container.appendChild(new OffscreenGroup({\n    class: 'offscreen'\n  }));\n  hide(group);\n  return group;\n}\nexport function isInOffscreenGroup(group) {\n  var ancestor = group;\n  while (ancestor) {\n    if (ancestor.className === 'offscreen') {\n      return true;\n    }\n    ancestor = ancestor.parent;\n  }\n  return false;\n}","map":{"version":3,"names":["ElementEvent","Group","hide","OffscreenGroup","_super","__extends","args","_i","arguments","length","_this","apply","__spreadArray","__read","isMutationObserved","addEventListener","INSERTED","createOffscreenGroup","container","group","appendChild","class","isInOffscreenGroup","ancestor","className","parent"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/util/offscreen.ts"],"sourcesContent":["import { ElementEvent } from '@antv/g';\nimport { Group } from '../shapes/Group';\nimport type { DisplayObject } from '../shapes/DisplayObject';\nimport { hide } from './visibility';\n\nclass OffscreenGroup extends Group {\n  constructor(...args: any[]) {\n    super(...args);\n    this.isMutationObserved = true;\n    this.addEventListener(ElementEvent.INSERTED, () => {\n      hide(this);\n    });\n  }\n}\n\nexport function createOffscreenGroup(container: DisplayObject) {\n  const group = container.appendChild(\n    new OffscreenGroup({\n      class: 'offscreen',\n    })\n  );\n  hide(group);\n  return group;\n}\n\nexport function isInOffscreenGroup(group: Group) {\n  let ancestor: any = group;\n  while (ancestor) {\n    if (ancestor.className === 'offscreen') {\n      return true;\n    }\n    ancestor = ancestor.parent;\n  }\n  return false;\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,SAAS;AACtC,SAASC,KAAK,QAAQ,iBAAiB;AAEvC,SAASC,IAAI,QAAQ,cAAc;AAEnC,IAAAC,cAAA,0BAAAC,MAAA;EAA6BC,SAAA,CAAAF,cAAA,EAAAC,MAAA;EAC3B,SAAAD,eAAA;IAAY,IAAAG,IAAA;SAAA,IAAAC,EAAA,IAAc,EAAdA,EAAA,GAAAC,SAAA,CAAAC,MAAc,EAAdF,EAAA,EAAc;MAAdD,IAAA,CAAAC,EAAA,IAAAC,SAAA,CAAAD,EAAA;;IACV,IAAAG,KAAA,GAAAN,MAAK,CAAAO,KAAA,OAAAC,aAAA,KAAAC,MAAA,CAAIP,IAAI;IACbI,KAAI,CAACI,kBAAkB,GAAG,IAAI;IAC9BJ,KAAI,CAACK,gBAAgB,CAACf,YAAY,CAACgB,QAAQ,EAAE;MAC3Cd,IAAI,CAACQ,KAAI,CAAC;IACZ,CAAC,CAAC;;EACJ;EACF,OAAAP,cAAC;AAAD,CAAC,CAR4BF,KAAK;AAUlC,OAAM,SAAUgB,oBAAoBA,CAACC,SAAwB;EAC3D,IAAMC,KAAK,GAAGD,SAAS,CAACE,WAAW,CACjC,IAAIjB,cAAc,CAAC;IACjBkB,KAAK,EAAE;GACR,CAAC,CACH;EACDnB,IAAI,CAACiB,KAAK,CAAC;EACX,OAAOA,KAAK;AACd;AAEA,OAAM,SAAUG,kBAAkBA,CAACH,KAAY;EAC7C,IAAII,QAAQ,GAAQJ,KAAK;EACzB,OAAOI,QAAQ,EAAE;IACf,IAAIA,QAAQ,CAACC,SAAS,KAAK,WAAW,EAAE;MACtC,OAAO,IAAI;IACb;IACAD,QAAQ,GAAGA,QAAQ,CAACE,MAAM;EAC5B;EACA,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}