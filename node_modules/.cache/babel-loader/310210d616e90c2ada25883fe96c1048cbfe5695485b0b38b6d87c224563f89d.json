{"ast":null,"code":"import { Text } from '@antv/g';\nimport { applyStyle } from '../../shape/utils';\nimport { select } from '../../utils/selection';\n/**\n * @todo autoRotate when in polar coordinate\n * Tag shape for Text mark, used in wordCloud plot.\n */\nexport const Tag = (options, context) => {\n  const {\n    coordinate\n  } = context;\n  return (points, value, defaults) => {\n    const {\n      color,\n      text = '',\n      fontSize,\n      rotate = 0,\n      transform = ''\n    } = value;\n    const textStyle = {\n      text: String(text),\n      stroke: color,\n      fill: color,\n      fontSize,\n      textAlign: 'center',\n      textBaseline: 'middle'\n    };\n    const [[x0, y0]] = points;\n    const n = select(new Text()).style('x', x0).style('y', y0).call(applyStyle, defaults).style('transformOrigin', 'center center').style('transform', `${transform}rotate(${rotate}deg)`).style('coordCenter', coordinate.getCenter()).call(applyStyle, textStyle).call(applyStyle, options).node();\n    return n;\n  };\n};\nTag.props = {\n  defaultMarker: 'point',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut'\n};","map":{"version":3,"names":["Text","applyStyle","select","Tag","options","context","coordinate","points","value","defaults","color","text","fontSize","rotate","transform","textStyle","String","stroke","fill","textAlign","textBaseline","x0","y0","n","style","call","getCenter","node","props","defaultMarker","defaultEnterAnimation","defaultUpdateAnimation","defaultExitAnimation"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/shape/text/tag.ts"],"sourcesContent":["import { Text } from '@antv/g';\nimport { ShapeComponent as SC } from '../../runtime';\nimport { applyStyle } from '../../shape/utils';\nimport { select } from '../../utils/selection';\n\nexport type TagOptions = Record<string, any>;\n\n/**\n * @todo autoRotate when in polar coordinate\n * Tag shape for Text mark, used in wordCloud plot.\n */\nexport const Tag: SC<TagOptions> = (options, context) => {\n  const { coordinate } = context;\n  return (points, value, defaults) => {\n    const { color, text = '', fontSize, rotate = 0, transform = '' } = value;\n    const textStyle = {\n      text: String(text),\n      stroke: color,\n      fill: color,\n      fontSize,\n      textAlign: 'center',\n      textBaseline: 'middle',\n    };\n    const [[x0, y0]] = points;\n    const n = select(new Text())\n      .style('x', x0)\n      .style('y', y0)\n      .call(applyStyle, defaults)\n      .style('transformOrigin', 'center center')\n      .style('transform', `${transform}rotate(${rotate}deg)`)\n      .style('coordCenter', coordinate.getCenter())\n      .call(applyStyle, textStyle)\n      .call(applyStyle, options)\n      .node();\n    return n;\n  };\n};\n\nTag.props = {\n  defaultMarker: 'point',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut',\n};\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,QAAQ,uBAAuB;AAI9C;;;;AAIA,OAAO,MAAMC,GAAG,GAAmBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EACtD,MAAM;IAAEC;EAAU,CAAE,GAAGD,OAAO;EAC9B,OAAO,CAACE,MAAM,EAAEC,KAAK,EAAEC,QAAQ,KAAI;IACjC,MAAM;MAAEC,KAAK;MAAEC,IAAI,GAAG,EAAE;MAAEC,QAAQ;MAAEC,MAAM,GAAG,CAAC;MAAEC,SAAS,GAAG;IAAE,CAAE,GAAGN,KAAK;IACxE,MAAMO,SAAS,GAAG;MAChBJ,IAAI,EAAEK,MAAM,CAACL,IAAI,CAAC;MAClBM,MAAM,EAAEP,KAAK;MACbQ,IAAI,EAAER,KAAK;MACXE,QAAQ;MACRO,SAAS,EAAE,QAAQ;MACnBC,YAAY,EAAE;KACf;IACD,MAAM,CAAC,CAACC,EAAE,EAAEC,EAAE,CAAC,CAAC,GAAGf,MAAM;IACzB,MAAMgB,CAAC,GAAGrB,MAAM,CAAC,IAAIF,IAAI,EAAE,CAAC,CACzBwB,KAAK,CAAC,GAAG,EAAEH,EAAE,CAAC,CACdG,KAAK,CAAC,GAAG,EAAEF,EAAE,CAAC,CACdG,IAAI,CAACxB,UAAU,EAAEQ,QAAQ,CAAC,CAC1Be,KAAK,CAAC,iBAAiB,EAAE,eAAe,CAAC,CACzCA,KAAK,CAAC,WAAW,EAAE,GAAGV,SAAS,UAAUD,MAAM,MAAM,CAAC,CACtDW,KAAK,CAAC,aAAa,EAAElB,UAAU,CAACoB,SAAS,EAAE,CAAC,CAC5CD,IAAI,CAACxB,UAAU,EAAEc,SAAS,CAAC,CAC3BU,IAAI,CAACxB,UAAU,EAAEG,OAAO,CAAC,CACzBuB,IAAI,EAAE;IACT,OAAOJ,CAAC;EACV,CAAC;AACH,CAAC;AAEDpB,GAAG,CAACyB,KAAK,GAAG;EACVC,aAAa,EAAE,OAAO;EACtBC,qBAAqB,EAAE,QAAQ;EAC/BC,sBAAsB,EAAE,UAAU;EAClCC,oBAAoB,EAAE;CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}