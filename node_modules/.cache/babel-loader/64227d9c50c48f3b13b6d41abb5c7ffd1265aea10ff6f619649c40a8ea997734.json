{"ast":null,"code":"import { rgb2arr } from './rgb2arr';\nimport { arr2rgb } from './arr2rgb';\nimport { toRGB } from './torgb';\n/**\n * 获取颜色之间的插值\n * @param start\n * @param end\n * @param percent\n * @param index\n * @returns\n */\nfunction getValue(start, end, percent, index) {\n  return start[index] + (end[index] - start[index]) * percent;\n}\n/**\n * 计算颜色\n * @param points\n * @param percent\n * @returns\n */\nfunction calColor(points, percent) {\n  var fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 : percent > 1 ? 1 : Number(percent);\n  var steps = points.length - 1;\n  var step = Math.floor(steps * fixedPercent);\n  var left = steps * fixedPercent - step;\n  var start = points[step];\n  var end = step === steps ? start : points[step + 1];\n  return arr2rgb([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);\n}\n/**\n * 获取渐变函数\n * @param colors 多个颜色\n * @return 颜色值\n */\nexport function gradient(colors) {\n  var colorArray = typeof colors === 'string' ? colors.split('-') : colors;\n  var points = colorArray.map(function (color) {\n    return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\n  });\n  // 返回一个函数\n  return function (percent) {\n    return calColor(points, percent);\n  };\n}","map":{"version":3,"names":["rgb2arr","arr2rgb","toRGB","getValue","start","end","percent","index","calColor","points","fixedPercent","isNaN","Number","steps","length","step","Math","floor","left","gradient","colors","colorArray","split","map","color","indexOf"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/color/gradient.ts"],"sourcesContent":["import { rgb2arr } from './rgb2arr';\nimport { arr2rgb } from './arr2rgb';\nimport { toRGB } from './torgb';\n\n/**\n * 获取颜色之间的插值\n * @param start\n * @param end\n * @param percent\n * @param index\n * @returns\n */\nfunction getValue(start: number[], end: number[], percent: number, index: number): number {\n  return start[index] + (end[index] - start[index]) * percent;\n}\n\n/**\n * 计算颜色\n * @param points\n * @param percent\n * @returns\n */\nfunction calColor(points: number[][], percent: number) {\n  const fixedPercent = isNaN(Number(percent)) || percent < 0 ? 0 : percent > 1 ? 1 : Number(percent);\n\n  const steps = points.length - 1;\n\n  const step = Math.floor(steps * fixedPercent);\n\n  const left = steps * fixedPercent - step;\n\n  const start = points[step];\n\n  const end = step === steps ? start : points[step + 1];\n\n  return arr2rgb([getValue(start, end, left, 0), getValue(start, end, left, 1), getValue(start, end, left, 2)]);\n}\n\n/**\n * 获取渐变函数\n * @param colors 多个颜色\n * @return 颜色值\n */\nexport function gradient(colors: string | string[]) {\n  const colorArray = typeof colors === 'string' ? (colors as string).split('-') : colors;\n\n  const points = colorArray.map((color) => {\n    return rgb2arr(color.indexOf('#') === -1 ? toRGB(color) : color);\n  });\n\n  // 返回一个函数\n  return (percent: number): string => {\n    return calColor(points, percent);\n  };\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,KAAK,QAAQ,SAAS;AAE/B;;;;;;;;AAQA,SAASC,QAAQA,CAACC,KAAe,EAAEC,GAAa,EAAEC,OAAe,EAAEC,KAAa;EAC9E,OAAOH,KAAK,CAACG,KAAK,CAAC,GAAG,CAACF,GAAG,CAACE,KAAK,CAAC,GAAGH,KAAK,CAACG,KAAK,CAAC,IAAID,OAAO;AAC7D;AAEA;;;;;;AAMA,SAASE,QAAQA,CAACC,MAAkB,EAAEH,OAAe;EACnD,IAAMI,YAAY,GAAGC,KAAK,CAACC,MAAM,CAACN,OAAO,CAAC,CAAC,IAAIA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAGA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAGM,MAAM,CAACN,OAAO,CAAC;EAElG,IAAMO,KAAK,GAAGJ,MAAM,CAACK,MAAM,GAAG,CAAC;EAE/B,IAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,GAAGH,YAAY,CAAC;EAE7C,IAAMQ,IAAI,GAAGL,KAAK,GAAGH,YAAY,GAAGK,IAAI;EAExC,IAAMX,KAAK,GAAGK,MAAM,CAACM,IAAI,CAAC;EAE1B,IAAMV,GAAG,GAAGU,IAAI,KAAKF,KAAK,GAAGT,KAAK,GAAGK,MAAM,CAACM,IAAI,GAAG,CAAC,CAAC;EAErD,OAAOd,OAAO,CAAC,CAACE,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAEa,IAAI,EAAE,CAAC,CAAC,EAAEf,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAEa,IAAI,EAAE,CAAC,CAAC,EAAEf,QAAQ,CAACC,KAAK,EAAEC,GAAG,EAAEa,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/G;AAEA;;;;;AAKA,OAAM,SAAUC,QAAQA,CAACC,MAAyB;EAChD,IAAMC,UAAU,GAAG,OAAOD,MAAM,KAAK,QAAQ,GAAIA,MAAiB,CAACE,KAAK,CAAC,GAAG,CAAC,GAAGF,MAAM;EAEtF,IAAMX,MAAM,GAAGY,UAAU,CAACE,GAAG,CAAC,UAACC,KAAK;IAClC,OAAOxB,OAAO,CAACwB,KAAK,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAGvB,KAAK,CAACsB,KAAK,CAAC,GAAGA,KAAK,CAAC;EAClE,CAAC,CAAC;EAEF;EACA,OAAO,UAAClB,OAAe;IACrB,OAAOE,QAAQ,CAACC,MAAM,EAAEH,OAAO,CAAC;EAClC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}