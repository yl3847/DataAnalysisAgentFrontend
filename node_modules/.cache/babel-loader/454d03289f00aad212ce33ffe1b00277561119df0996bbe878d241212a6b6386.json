{"ast":null,"code":"import { runtime } from '@antv/g';\nimport { memoize } from '@antv/util';\nvar ctx;\nvar mockMeasureTextWidth;\nexport function setMockMeasureTextWidth(mock) {\n  mockMeasureTextWidth = mock;\n}\n/**\n * 计算文本在画布中的宽度\n */\nexport var measureTextWidth = memoize(function (text, font) {\n  var fontSize = font.fontSize,\n    fontFamily = font.fontFamily,\n    fontWeight = font.fontWeight,\n    fontStyle = font.fontStyle,\n    fontVariant = font.fontVariant;\n  if (mockMeasureTextWidth) {\n    return mockMeasureTextWidth(text, fontSize);\n  }\n  if (!ctx) {\n    // @ts-ignore\n    ctx = runtime.offscreenCanvasCreator.getOrCreateContext(undefined);\n  }\n  ctx.font = [fontStyle, fontVariant, fontWeight, \"\".concat(fontSize, \"px\"), fontFamily].join(' ');\n  return ctx.measureText(text).width;\n}, function (text, font) {\n  return [text, Object.values(font || getFont(text)).join()].join('');\n}, 4096);\nexport var getFont = function (textShape) {\n  var fontFamily = textShape.style.fontFamily || 'sans-serif';\n  var fontWeight = textShape.style.fontWeight || 'normal';\n  var fontStyle = textShape.style.fontStyle || 'normal';\n  var fontVariant = textShape.style.fontVariant;\n  var fontSize = textShape.style.fontSize;\n  fontSize = typeof fontSize === 'object' ? fontSize.value : fontSize;\n  return {\n    fontSize: fontSize,\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    fontStyle: fontStyle,\n    fontVariant: fontVariant\n  };\n};\nexport function textOf(node) {\n  if (node.nodeName === 'text') {\n    return node;\n  }\n  if (node.nodeName === 'g' && node.children.length === 1 && node.children[0].nodeName === 'text') {\n    return node.children[0];\n  }\n  return null;\n}\nexport function applyToText(node, style) {\n  var text = textOf(node);\n  if (text) text.attr(style);\n}","map":{"version":3,"names":["runtime","memoize","ctx","mockMeasureTextWidth","setMockMeasureTextWidth","mock","measureTextWidth","text","font","fontSize","fontFamily","fontWeight","fontStyle","fontVariant","offscreenCanvasCreator","getOrCreateContext","undefined","concat","join","measureText","width","Object","values","getFont","textShape","style","value","textOf","node","nodeName","children","length","applyToText","attr"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/util/text.ts"],"sourcesContent":["import { runtime } from '@antv/g';\nimport { memoize } from '@antv/util';\nimport type { DisplayObject, Text } from '../shapes';\n\nlet ctx: CanvasRenderingContext2D;\nlet mockMeasureTextWidth: ((text: string, fontSize: number) => number) | undefined;\n\nexport function setMockMeasureTextWidth(mock: (text: string, fontSize: number) => number) {\n  mockMeasureTextWidth = mock;\n}\n\n/**\n * 计算文本在画布中的宽度\n */\nexport const measureTextWidth = memoize(\n  (text: string, font: any): number => {\n    const { fontSize, fontFamily, fontWeight, fontStyle, fontVariant } = font;\n\n    if (mockMeasureTextWidth) {\n      return mockMeasureTextWidth(text, fontSize);\n    }\n\n    if (!ctx) {\n      // @ts-ignore\n      ctx = runtime.offscreenCanvasCreator.getOrCreateContext(undefined) as CanvasRenderingContext2D;\n    }\n    ctx!.font = [fontStyle, fontVariant, fontWeight, `${fontSize}px`, fontFamily].join(' ');\n    return ctx!.measureText(text).width;\n  },\n  (text: any, font?: any) => [text, Object.values(font || getFont(text as Text)).join()].join(''),\n  4096\n);\n\nexport const getFont = (textShape: Text) => {\n  const fontFamily = textShape.style.fontFamily || 'sans-serif';\n  const fontWeight = textShape.style.fontWeight || 'normal';\n  const fontStyle = textShape.style.fontStyle || 'normal';\n  const fontVariant = textShape.style.fontVariant;\n  let fontSize = textShape.style.fontSize as any;\n  fontSize = typeof fontSize === 'object' ? fontSize.value : fontSize;\n  return { fontSize: fontSize as number, fontFamily, fontWeight, fontStyle, fontVariant };\n};\n\nexport function textOf(node: DisplayObject): Text | null {\n  if (node.nodeName === 'text') {\n    return node as Text;\n  }\n  if (node.nodeName === 'g' && node.children.length === 1 && node.children[0].nodeName === 'text') {\n    return node.children[0] as Text;\n  }\n  return null;\n}\n\nexport function applyToText(node: DisplayObject, style: Record<string, any>) {\n  const text = textOf(node);\n  if (text!) text.attr(style);\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,SAAS;AACjC,SAASC,OAAO,QAAQ,YAAY;AAGpC,IAAIC,GAA6B;AACjC,IAAIC,oBAA8E;AAElF,OAAM,SAAUC,uBAAuBA,CAACC,IAAgD;EACtFF,oBAAoB,GAAGE,IAAI;AAC7B;AAEA;;;AAGA,OAAO,IAAMC,gBAAgB,GAAGL,OAAO,CACrC,UAACM,IAAY,EAAEC,IAAS;EACd,IAAAC,QAAQ,GAAqDD,IAAI,CAAAC,QAAzD;IAAEC,UAAU,GAAyCF,IAAI,CAAAE,UAA7C;IAAEC,UAAU,GAA6BH,IAAI,CAAAG,UAAjC;IAAEC,SAAS,GAAkBJ,IAAI,CAAAI,SAAtB;IAAEC,WAAW,GAAKL,IAAI,CAAAK,WAAT;EAEhE,IAAIV,oBAAoB,EAAE;IACxB,OAAOA,oBAAoB,CAACI,IAAI,EAAEE,QAAQ,CAAC;EAC7C;EAEA,IAAI,CAACP,GAAG,EAAE;IACR;IACAA,GAAG,GAAGF,OAAO,CAACc,sBAAsB,CAACC,kBAAkB,CAACC,SAAS,CAA6B;EAChG;EACAd,GAAI,CAACM,IAAI,GAAG,CAACI,SAAS,EAAEC,WAAW,EAAEF,UAAU,EAAE,GAAAM,MAAA,CAAGR,QAAQ,OAAI,EAAEC,UAAU,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC;EACvF,OAAOhB,GAAI,CAACiB,WAAW,CAACZ,IAAI,CAAC,CAACa,KAAK;AACrC,CAAC,EACD,UAACb,IAAS,EAAEC,IAAU;EAAK,QAACD,IAAI,EAAEc,MAAM,CAACC,MAAM,CAACd,IAAI,IAAIe,OAAO,CAAChB,IAAY,CAAC,CAAC,CAACW,IAAI,EAAE,CAAC,CAACA,IAAI,CAAC,EAAE,CAAC;AAApE,CAAoE,EAC/F,IAAI,CACL;AAED,OAAO,IAAMK,OAAO,GAAG,SAAAA,CAACC,SAAe;EACrC,IAAMd,UAAU,GAAGc,SAAS,CAACC,KAAK,CAACf,UAAU,IAAI,YAAY;EAC7D,IAAMC,UAAU,GAAGa,SAAS,CAACC,KAAK,CAACd,UAAU,IAAI,QAAQ;EACzD,IAAMC,SAAS,GAAGY,SAAS,CAACC,KAAK,CAACb,SAAS,IAAI,QAAQ;EACvD,IAAMC,WAAW,GAAGW,SAAS,CAACC,KAAK,CAACZ,WAAW;EAC/C,IAAIJ,QAAQ,GAAGe,SAAS,CAACC,KAAK,CAAChB,QAAe;EAC9CA,QAAQ,GAAG,OAAOA,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,CAACiB,KAAK,GAAGjB,QAAQ;EACnE,OAAO;IAAEA,QAAQ,EAAEA,QAAkB;IAAEC,UAAU,EAAAA,UAAA;IAAEC,UAAU,EAAAA,UAAA;IAAEC,SAAS,EAAAA,SAAA;IAAEC,WAAW,EAAAA;EAAA,CAAE;AACzF,CAAC;AAED,OAAM,SAAUc,MAAMA,CAACC,IAAmB;EACxC,IAAIA,IAAI,CAACC,QAAQ,KAAK,MAAM,EAAE;IAC5B,OAAOD,IAAY;EACrB;EACA,IAAIA,IAAI,CAACC,QAAQ,KAAK,GAAG,IAAID,IAAI,CAACE,QAAQ,CAACC,MAAM,KAAK,CAAC,IAAIH,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACD,QAAQ,KAAK,MAAM,EAAE;IAC/F,OAAOD,IAAI,CAACE,QAAQ,CAAC,CAAC,CAAS;EACjC;EACA,OAAO,IAAI;AACb;AAEA,OAAM,SAAUE,WAAWA,CAACJ,IAAmB,EAAEH,KAA0B;EACzE,IAAMlB,IAAI,GAAGoB,MAAM,CAACC,IAAI,CAAC;EACzB,IAAIrB,IAAK,EAAEA,IAAI,CAAC0B,IAAI,CAACR,KAAK,CAAC;AAC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}