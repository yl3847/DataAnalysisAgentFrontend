{"ast":null,"code":"import React from 'react';\nimport { RCNode } from '../../core/base';\nimport { formatLabel } from '../../core/utils/label';\nconst {\n  TextNode\n} = RCNode;\nexport const DEFAULT_OPTIONS = {\n  node: {\n    type: 'react',\n    state: {\n      active: {\n        halo: false\n      },\n      selected: {\n        halo: false\n      }\n    }\n  },\n  edge: {\n    type: 'polyline',\n    style: {\n      lineWidth: 2,\n      router: {\n        type: 'orth'\n      }\n    }\n  },\n  layout: {\n    type: 'dagre',\n    animation: false\n  },\n  transforms: ['translate-react-node-origin']\n};\nexport function getOrganizationChartOptions({\n  direction,\n  labelField\n}) {\n  const options = {\n    node: {\n      style: {\n        component: data => {\n          const label = formatLabel(data, labelField);\n          return React.createElement(TextNode, {\n            type: \"filled\",\n            text: label\n          });\n        },\n        size: [100, 40],\n        ports: direction === 'vertical' ? [{\n          placement: 'top'\n        }, {\n          placement: 'bottom'\n        }] : [{\n          placement: 'left'\n        }, {\n          placement: 'right'\n        }]\n      }\n    },\n    transforms: prev => [...prev, {\n      type: 'collapse-expand-react-node',\n      key: 'collapse-expand-react-node',\n      iconPlacement: direction === 'vertical' ? 'bottom' : 'right',\n      enable: false,\n      refreshLayout: true\n    }],\n    layout: {\n      type: 'dagre',\n      rankdir: direction === 'vertical' ? 'TB' : 'LR'\n    }\n  };\n  return options;\n}","map":{"version":3,"names":["React","RCNode","formatLabel","TextNode","DEFAULT_OPTIONS","node","type","state","active","halo","selected","edge","style","lineWidth","router","layout","animation","transforms","getOrganizationChartOptions","direction","labelField","options","component","data","label","createElement","text","size","ports","placement","prev","key","iconPlacement","enable","refreshLayout","rankdir"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/components/organization-chart/options.js"],"sourcesContent":["import React from 'react';\nimport { RCNode } from '../../core/base';\nimport { formatLabel } from '../../core/utils/label';\nconst { TextNode } = RCNode;\nexport const DEFAULT_OPTIONS = {\n    node: {\n        type: 'react',\n        state: {\n            active: {\n                halo: false,\n            },\n            selected: {\n                halo: false,\n            },\n        },\n    },\n    edge: {\n        type: 'polyline',\n        style: {\n            lineWidth: 2,\n            router: {\n                type: 'orth',\n            },\n        },\n    },\n    layout: {\n        type: 'dagre',\n        animation: false,\n    },\n    transforms: ['translate-react-node-origin'],\n};\nexport function getOrganizationChartOptions({ direction, labelField, }) {\n    const options = {\n        node: {\n            style: {\n                component: (data) => {\n                    const label = formatLabel(data, labelField);\n                    return React.createElement(TextNode, { type: \"filled\", text: label });\n                },\n                size: [100, 40],\n                ports: direction === 'vertical'\n                    ? [{ placement: 'top' }, { placement: 'bottom' }]\n                    : [{ placement: 'left' }, { placement: 'right' }],\n            },\n        },\n        transforms: (prev) => [\n            ...prev,\n            {\n                type: 'collapse-expand-react-node',\n                key: 'collapse-expand-react-node',\n                iconPlacement: direction === 'vertical' ? 'bottom' : 'right',\n                enable: false,\n                refreshLayout: true,\n            },\n        ],\n        layout: {\n            type: 'dagre',\n            rankdir: direction === 'vertical' ? 'TB' : 'LR',\n        },\n    };\n    return options;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,MAAM;EAAEC;AAAS,CAAC,GAAGF,MAAM;AAC3B,OAAO,MAAMG,eAAe,GAAG;EAC3BC,IAAI,EAAE;IACFC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE;MACHC,MAAM,EAAE;QACJC,IAAI,EAAE;MACV,CAAC;MACDC,QAAQ,EAAE;QACND,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDE,IAAI,EAAE;IACFL,IAAI,EAAE,UAAU;IAChBM,KAAK,EAAE;MACHC,SAAS,EAAE,CAAC;MACZC,MAAM,EAAE;QACJR,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EACDS,MAAM,EAAE;IACJT,IAAI,EAAE,OAAO;IACbU,SAAS,EAAE;EACf,CAAC;EACDC,UAAU,EAAE,CAAC,6BAA6B;AAC9C,CAAC;AACD,OAAO,SAASC,2BAA2BA,CAAC;EAAEC,SAAS;EAAEC;AAAY,CAAC,EAAE;EACpE,MAAMC,OAAO,GAAG;IACZhB,IAAI,EAAE;MACFO,KAAK,EAAE;QACHU,SAAS,EAAGC,IAAI,IAAK;UACjB,MAAMC,KAAK,GAAGtB,WAAW,CAACqB,IAAI,EAAEH,UAAU,CAAC;UAC3C,OAAOpB,KAAK,CAACyB,aAAa,CAACtB,QAAQ,EAAE;YAAEG,IAAI,EAAE,QAAQ;YAAEoB,IAAI,EAAEF;UAAM,CAAC,CAAC;QACzE,CAAC;QACDG,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC;QACfC,KAAK,EAAET,SAAS,KAAK,UAAU,GACzB,CAAC;UAAEU,SAAS,EAAE;QAAM,CAAC,EAAE;UAAEA,SAAS,EAAE;QAAS,CAAC,CAAC,GAC/C,CAAC;UAAEA,SAAS,EAAE;QAAO,CAAC,EAAE;UAAEA,SAAS,EAAE;QAAQ,CAAC;MACxD;IACJ,CAAC;IACDZ,UAAU,EAAGa,IAAI,IAAK,CAClB,GAAGA,IAAI,EACP;MACIxB,IAAI,EAAE,4BAA4B;MAClCyB,GAAG,EAAE,4BAA4B;MACjCC,aAAa,EAAEb,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,OAAO;MAC5Dc,MAAM,EAAE,KAAK;MACbC,aAAa,EAAE;IACnB,CAAC,CACJ;IACDnB,MAAM,EAAE;MACJT,IAAI,EAAE,OAAO;MACb6B,OAAO,EAAEhB,SAAS,KAAK,UAAU,GAAG,IAAI,GAAG;IAC/C;EACJ,CAAC;EACD,OAAOE,OAAO;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}