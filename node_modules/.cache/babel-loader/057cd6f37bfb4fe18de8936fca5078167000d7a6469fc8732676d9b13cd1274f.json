{"ast":null,"code":"import { __assign, __extends, __read } from \"tslib\";\nimport { Component } from '../../core';\nimport { select, subStyleProps } from '../../util';\nimport { Tag } from '../tag';\nimport { CROSSHAIR_BASE_DEFAULT_STYLE } from './constant';\nvar CrosshairBase = /** @class */function (_super) {\n  __extends(CrosshairBase, _super);\n  function CrosshairBase(options) {\n    // @ts-ignore\n    return _super.call(this, options, CROSSHAIR_BASE_DEFAULT_STYLE) || this;\n  }\n  Object.defineProperty(CrosshairBase.prototype, \"localPointer\", {\n    /**\n     * 获得 pointer 的相对坐标\n     */\n    get: function () {\n      var _a = __read(this.getPosition(), 2),\n        bx = _a[0],\n        by = _a[1];\n      var _b = __read(this.pointer, 2),\n        x = _b[0],\n        y = _b[1];\n      return [x - bx, y - by];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CrosshairBase.prototype, \"tagStyle\", {\n    get: function () {\n      var style = subStyleProps(this.attributes, 'tag');\n      return style;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CrosshairBase.prototype, \"crosshairStyle\", {\n    get: function () {\n      var style = subStyleProps(this.attributes, 'line');\n      return __assign(__assign({}, style), {\n        d: this.crosshairPath\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  CrosshairBase.prototype.render = function (attributes, container) {\n    var group = select(container).maybeAppendByClassName('.crosshair-group', 'g').node();\n    this.shapesGroup = group;\n    var tagStyle = this.tagStyle;\n    var crosshairStyle = this.crosshairStyle;\n    this.tagShape = select(group).maybeAppendByClassName('crosshair-tag', function () {\n      return new Tag({\n        style: tagStyle\n      });\n    }).styles(tagStyle).node();\n    this.crosshairShape = select(group).maybeAppendByClassName('.crosshair-path', 'path').styles(crosshairStyle).node();\n    this.adjustLayout();\n  };\n  /**\n   * 设置当前指针的位置\n   * 1. 线条类型 调整位置即可\n   * 2. circle 和 polygon 需要重新计算 path\n   */\n  CrosshairBase.prototype.setPointer = function (pointer) {\n    this.pointer = pointer;\n  };\n  CrosshairBase.tag = 'crosshair-base';\n  return CrosshairBase;\n}(Component);\nexport { CrosshairBase };","map":{"version":3,"names":["Component","select","subStyleProps","Tag","CROSSHAIR_BASE_DEFAULT_STYLE","CrosshairBase","_super","__extends","options","call","Object","defineProperty","prototype","get","_a","__read","getPosition","bx","by","_b","pointer","x","y","style","attributes","__assign","d","crosshairPath","render","container","group","maybeAppendByClassName","node","shapesGroup","tagStyle","crosshairStyle","tagShape","styles","crosshairShape","adjustLayout","setPointer","tag"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/crosshair/base.ts"],"sourcesContent":["import { Component } from '../../core';\nimport { Group, Path } from '../../shapes';\nimport type { Point } from '../../types';\nimport { select, subStyleProps } from '../../util';\nimport { Tag } from '../tag';\nimport { CROSSHAIR_BASE_DEFAULT_STYLE } from './constant';\nimport type { CrosshairBaseStyleProps, CrosshairBaseOptions } from './types';\n\nexport abstract class CrosshairBase<T extends CrosshairBaseStyleProps> extends Component<T> {\n  public static tag = 'crosshair-base';\n\n  /**\n   * 指针位置\n   */\n  protected pointer!: Point;\n\n  protected shapesGroup!: Group;\n\n  protected tagShape!: Tag;\n\n  protected crosshairShape!: Path;\n\n  /**\n   * 获得 pointer 的相对坐标\n   */\n  protected get localPointer() {\n    const [bx, by] = this.getPosition();\n    const [x, y] = this.pointer;\n    return [x - bx, y - by];\n  }\n\n  /**\n   * 获得 crosshair 的 path\n   */\n  protected abstract get crosshairPath(): any[];\n\n  private get tagStyle() {\n    const style = subStyleProps(this.attributes, 'tag');\n    return style;\n  }\n\n  private get crosshairStyle() {\n    const style = subStyleProps(this.attributes, 'line');\n    return {\n      ...style,\n      d: this.crosshairPath,\n    };\n  }\n\n  constructor(options: CrosshairBaseOptions) {\n    // @ts-ignore\n    super(options, CROSSHAIR_BASE_DEFAULT_STYLE);\n  }\n\n  public render(attributes: CrosshairBaseStyleProps, container: Group) {\n    const group = select(container).maybeAppendByClassName('.crosshair-group', 'g').node();\n    this.shapesGroup = group;\n\n    const tagStyle = this.tagStyle;\n    const crosshairStyle = this.crosshairStyle;\n    this.tagShape = select(group)\n      .maybeAppendByClassName('crosshair-tag', () => new Tag({ style: tagStyle }))\n      .styles(tagStyle)\n      .node();\n    this.crosshairShape = select(group).maybeAppendByClassName('.crosshair-path', 'path').styles(crosshairStyle).node();\n\n    this.adjustLayout();\n  }\n\n  /**\n   * 设置当前指针的位置\n   * 1. 线条类型 调整位置即可\n   * 2. circle 和 polygon 需要重新计算 path\n   */\n  public setPointer(pointer: Point) {\n    this.pointer = pointer;\n  }\n\n  /**\n   * 调整tag\n   */\n  protected abstract adjustLayout(): void;\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,YAAY;AAGtC,SAASC,MAAM,EAAEC,aAAa,QAAQ,YAAY;AAClD,SAASC,GAAG,QAAQ,QAAQ;AAC5B,SAASC,4BAA4B,QAAQ,YAAY;AAGzD,IAAAC,aAAA,0BAAAC,MAAA;EAA+EC,SAAA,CAAAF,aAAA,EAAAC,MAAA;EAyC7E,SAAAD,cAAYG,OAA6B;IACvC;IACA,OAAAF,MAAK,CAAAG,IAAA,OAACD,OAAO,EAAEJ,4BAA4B,CAAC;EAC9C;EA3BAM,MAAA,CAAAC,cAAA,CAAcN,aAAA,CAAAO,SAAA,gBAAY;IAH1B;;;SAGA,SAAAC,CAAA;MACQ,IAAAC,EAAA,GAAAC,MAAA,CAAW,IAAI,CAACC,WAAW,EAAE;QAA5BC,EAAE,GAAAH,EAAA;QAAEI,EAAE,GAAAJ,EAAA,GAAsB;MAC7B,IAAAK,EAAA,GAAAJ,MAAA,CAAS,IAAI,CAACK,OAAO;QAApBC,CAAC,GAAAF,EAAA;QAAEG,CAAC,GAAAH,EAAA,GAAgB;MAC3B,OAAO,CAACE,CAAC,GAAGJ,EAAE,EAAEK,CAAC,GAAGJ,EAAE,CAAC;IACzB,CAAC;;;;EAODR,MAAA,CAAAC,cAAA,CAAYN,aAAA,CAAAO,SAAA,YAAQ;SAApB,SAAAC,CAAA;MACE,IAAMU,KAAK,GAAGrB,aAAa,CAAC,IAAI,CAACsB,UAAU,EAAE,KAAK,CAAC;MACnD,OAAOD,KAAK;IACd,CAAC;;;;EAEDb,MAAA,CAAAC,cAAA,CAAYN,aAAA,CAAAO,SAAA,kBAAc;SAA1B,SAAAC,CAAA;MACE,IAAMU,KAAK,GAAGrB,aAAa,CAAC,IAAI,CAACsB,UAAU,EAAE,MAAM,CAAC;MACpD,OAAAC,QAAA,CAAAA,QAAA,KACKF,KAAK;QACRG,CAAC,EAAE,IAAI,CAACC;MAAa;IAEzB,CAAC;;;;EAOMtB,aAAA,CAAAO,SAAA,CAAAgB,MAAM,GAAb,UAAcJ,UAAmC,EAAEK,SAAgB;IACjE,IAAMC,KAAK,GAAG7B,MAAM,CAAC4B,SAAS,CAAC,CAACE,sBAAsB,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAACC,IAAI,EAAE;IACtF,IAAI,CAACC,WAAW,GAAGH,KAAK;IAExB,IAAMI,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAMC,cAAc,GAAG,IAAI,CAACA,cAAc;IAC1C,IAAI,CAACC,QAAQ,GAAGnC,MAAM,CAAC6B,KAAK,CAAC,CAC1BC,sBAAsB,CAAC,eAAe,EAAE;MAAM,WAAI5B,GAAG,CAAC;QAAEoB,KAAK,EAAEW;MAAQ,CAAE,CAAC;IAA5B,CAA4B,CAAC,CAC3EG,MAAM,CAACH,QAAQ,CAAC,CAChBF,IAAI,EAAE;IACT,IAAI,CAACM,cAAc,GAAGrC,MAAM,CAAC6B,KAAK,CAAC,CAACC,sBAAsB,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAACM,MAAM,CAACF,cAAc,CAAC,CAACH,IAAI,EAAE;IAEnH,IAAI,CAACO,YAAY,EAAE;EACrB,CAAC;EAED;;;;;EAKOlC,aAAA,CAAAO,SAAA,CAAA4B,UAAU,GAAjB,UAAkBpB,OAAc;IAC9B,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB,CAAC;EAnEaf,aAAA,CAAAoC,GAAG,GAAG,gBAAgB;EAyEtC,OAAApC,aAAC;CAAA,CA1E8EL,SAAS;SAAlEK,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}