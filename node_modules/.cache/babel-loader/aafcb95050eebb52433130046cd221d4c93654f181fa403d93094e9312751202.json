{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { Rect as GRect } from '@antv/g';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport { subStyleProps } from '../../utils/prefix';\nimport { mergeOptions } from '../../utils/style';\nimport { add } from '../../utils/vector';\nimport { Image as ImageShape } from '../shapes';\nimport { connectImage, dispatchPositionChange } from '../shapes/image';\nimport { BaseNode } from './base-node';\n/**\n * <zh/> 图片节点\n *\n * <en/> Image node\n */\nexport class Image extends BaseNode {\n  constructor(options) {\n    super(mergeOptions({\n      style: Image.defaultStyleProps\n    }, options));\n  }\n  getKeyStyle(attributes) {\n    const [width, height] = this.getSize(attributes);\n    const _a = super.getKeyStyle(attributes),\n      {\n        fillOpacity,\n        opacity = fillOpacity\n      } = _a,\n      keyStyle = __rest(_a, [\"fillOpacity\", \"opacity\"]);\n    return Object.assign(Object.assign({\n      opacity\n    }, keyStyle), {\n      width,\n      height,\n      x: -width / 2,\n      y: -height / 2\n    });\n  }\n  getBounds() {\n    return this.getShape('key').getBounds();\n  }\n  getHaloStyle(attributes) {\n    if (attributes.halo === false) return false;\n    const _a = this.getShape('key').attributes,\n      {\n        fill: keyStyleFill,\n        stroke: keyStyleStroke\n      } = _a,\n      keyStyle = __rest(_a, [\"fill\", \"stroke\"]);\n    const haloStyle = subStyleProps(this.getGraphicStyle(attributes), 'halo');\n    const haloLineWidth = Number(haloStyle.lineWidth);\n    const [width, height] = add(this.getSize(attributes), [haloLineWidth, haloLineWidth]);\n    const {\n      lineWidth\n    } = haloStyle;\n    const recalculate = {\n      fill: 'transparent',\n      lineWidth: lineWidth / 2,\n      width: width - lineWidth / 2,\n      height: height - lineWidth / 2,\n      x: -(width - lineWidth / 2) / 2,\n      y: -(height - lineWidth / 2) / 2\n    };\n    return Object.assign(Object.assign({}, haloStyle), recalculate);\n  }\n  getIconStyle(attributes) {\n    const style = super.getIconStyle(attributes);\n    const [width, height] = this.getSize(attributes);\n    return style ? Object.assign({\n      width: width * ICON_SIZE_RATIO,\n      height: height * ICON_SIZE_RATIO\n    }, style) : false;\n  }\n  drawKeyShape(attributes, container) {\n    const image = this.upsert('key', ImageShape, this.getKeyStyle(attributes), container);\n    connectImage(this);\n    return image;\n  }\n  drawHaloShape(attributes, container) {\n    this.upsert('halo', GRect, this.getHaloStyle(attributes), container);\n  }\n  update(attr) {\n    super.update(attr);\n    if (attr && ('x' in attr || 'y' in attr || 'z' in attr)) {\n      dispatchPositionChange(this);\n    }\n  }\n}\nImage.defaultStyleProps = {\n  size: 32\n};","map":{"version":3,"names":["Rect","GRect","ICON_SIZE_RATIO","subStyleProps","mergeOptions","add","Image","ImageShape","connectImage","dispatchPositionChange","BaseNode","constructor","options","style","defaultStyleProps","getKeyStyle","attributes","width","height","getSize","_a","fillOpacity","opacity","keyStyle","__rest","Object","assign","x","y","getBounds","getShape","getHaloStyle","halo","fill","keyStyleFill","stroke","keyStyleStroke","haloStyle","getGraphicStyle","haloLineWidth","Number","lineWidth","recalculate","getIconStyle","drawKeyShape","container","image","upsert","drawHaloShape","update","attr","size"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/elements/nodes/image.ts"],"sourcesContent":["import type { DisplayObjectConfig, RectStyleProps as GRectStyleProps, Group } from '@antv/g';\nimport { ImageStyleProps as GImageStyleProps, Rect as GRect } from '@antv/g';\nimport { ICON_SIZE_RATIO } from '../../constants/element';\nimport { subStyleProps } from '../../utils/prefix';\nimport { mergeOptions } from '../../utils/style';\nimport { add } from '../../utils/vector';\nimport type { IconStyleProps } from '../shapes';\nimport { Image as ImageShape } from '../shapes';\nimport { connectImage, dispatchPositionChange } from '../shapes/image';\nimport type { BaseNodeStyleProps } from './base-node';\nimport { BaseNode } from './base-node';\n\n/**\n * <zh/> 图片节点样式配置项\n *\n * <en/> Image node style props\n */\nexport interface ImageStyleProps extends BaseNodeStyleProps {\n  /**\n   * <zh/> 图片来源，即图片地址字符串\n   *\n   * <en/> Image source, i.e. image address string\n   */\n  img?: string | HTMLImageElement;\n  /**\n   * <zh/> 该属性为 img 的别名\n   *\n   * <en/> This property is an alias for img\n   */\n  src?: string | HTMLImageElement;\n}\n\n/**\n * <zh/> 图片节点\n *\n * <en/> Image node\n */\nexport class Image extends BaseNode<ImageStyleProps> {\n  static defaultStyleProps: Partial<ImageStyleProps> = {\n    size: 32,\n  };\n\n  constructor(options: DisplayObjectConfig<ImageStyleProps>) {\n    super(mergeOptions({ style: Image.defaultStyleProps }, options));\n  }\n\n  protected getKeyStyle(attributes: Required<ImageStyleProps>): GImageStyleProps {\n    const [width, height] = this.getSize(attributes);\n    const { fillOpacity, opacity = fillOpacity, ...keyStyle } = super.getKeyStyle(attributes);\n\n    return {\n      opacity,\n      ...keyStyle,\n      width,\n      height,\n      x: -width / 2,\n      y: -height / 2,\n    };\n  }\n\n  public getBounds() {\n    return this.getShape('key').getBounds();\n  }\n\n  protected getHaloStyle(attributes: Required<ImageStyleProps>): false | GRectStyleProps {\n    if (attributes.halo === false) return false;\n    const { fill: keyStyleFill, stroke: keyStyleStroke, ...keyStyle } = this.getShape<GRect>('key').attributes;\n    const haloStyle = subStyleProps(this.getGraphicStyle(attributes), 'halo');\n    const haloLineWidth = Number(haloStyle.lineWidth);\n    const [width, height] = add(this.getSize(attributes), [haloLineWidth, haloLineWidth]);\n    const { lineWidth } = haloStyle;\n    const recalculate = {\n      fill: 'transparent',\n      lineWidth: lineWidth / 2,\n      width: width - lineWidth / 2,\n      height: height - lineWidth / 2,\n      x: -(width - lineWidth / 2) / 2,\n      y: -(height - lineWidth / 2) / 2,\n    };\n    return { ...haloStyle, ...recalculate };\n  }\n\n  protected getIconStyle(attributes: Required<ImageStyleProps>): false | IconStyleProps {\n    const style = super.getIconStyle(attributes);\n    const [width, height] = this.getSize(attributes);\n\n    return style\n      ? ({\n          width: width * ICON_SIZE_RATIO,\n          height: height * ICON_SIZE_RATIO,\n          ...style,\n        } as IconStyleProps)\n      : false;\n  }\n\n  protected drawKeyShape(attributes: Required<ImageStyleProps>, container: Group): ImageShape | undefined {\n    const image = this.upsert('key', ImageShape, this.getKeyStyle(attributes), container);\n    connectImage(this);\n    return image;\n  }\n\n  protected drawHaloShape(attributes: Required<ImageStyleProps>, container: Group): void {\n    this.upsert('halo', GRect, this.getHaloStyle(attributes), container);\n  }\n\n  public update(attr?: Partial<ImageStyleProps>): void {\n    super.update(attr);\n    if (attr && ('x' in attr || 'y' in attr || 'z' in attr)) {\n      dispatchPositionChange(this);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}