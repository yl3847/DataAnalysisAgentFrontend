{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { forceSimulation, forceManyBody, forceLink, forceX, forceY, forceCenter } from '@antv/vendor/d3-force';\nimport { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { maybeAnimation, subTooltip } from '../utils/mark';\nimport { field, initializeData } from './utils';\nconst DEFAULT_LAYOUT_OPTIONS = {\n  joint: true\n};\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'link',\n  axis: false,\n  legend: false,\n  encode: {\n    x: [d => d.source.x, d => d.target.x],\n    y: [d => d.source.y, d => d.target.y]\n  },\n  style: {\n    stroke: '#999',\n    strokeOpacity: 0.6\n  }\n};\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'point',\n  axis: false,\n  legend: false,\n  encode: {\n    x: 'x',\n    y: 'y',\n    size: 5,\n    color: 'group',\n    shape: 'point'\n  },\n  style: {\n    stroke: '#fff'\n  }\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  text: ''\n};\nfunction dataTransform(data, layout, encode) {\n  const {\n    nodes,\n    links\n  } = data;\n  const {\n    joint,\n    nodeStrength,\n    linkStrength\n  } = layout;\n  const {\n    nodeKey = d => d.id,\n    linkKey = d => d.id\n  } = encode;\n  const nodeForce = forceManyBody();\n  const linkForce = forceLink(links).id(field(linkKey));\n  typeof nodeStrength === 'function' && nodeForce.strength(nodeStrength);\n  typeof linkStrength === 'function' && linkForce.strength(linkStrength);\n  const simulation = forceSimulation(nodes).force('link', linkForce).force('charge', nodeForce);\n  joint ? simulation.force('center', forceCenter()) : simulation.force('x', forceX()).force('y', forceY());\n  simulation.stop();\n  const n = Math.ceil(Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()));\n  for (let i = 0; i < n; i++) simulation.tick();\n  return {\n    nodesData: nodes,\n    linksData: links\n  };\n}\nexport const ForceGraph = options => {\n  const {\n    data,\n    encode: e = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {}\n  } = options;\n  const {\n      nodeKey = d => d.id,\n      linkKey = d => d.id\n    } = e,\n    restEncode = __rest(e, [\"nodeKey\", \"linkKey\"]);\n  const encode = Object.assign({\n    nodeKey,\n    linkKey\n  }, restEncode);\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const {\n    links,\n    nodes\n  } = initializeData(data, encode);\n  const {\n    nodesData,\n    linksData\n  } = dataTransform({\n    links,\n    nodes\n  }, deepMix({}, DEFAULT_LAYOUT_OPTIONS, layout), encode);\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    items: [d => ({\n      name: 'source',\n      value: field(linkKey)(d.source)\n    }), d => ({\n      name: 'target',\n      value: field(linkKey)(d.target)\n    })]\n  });\n  const nodeTooltip = subTooltip(tooltip, 'node', {\n    items: [d => ({\n      name: 'key',\n      value: field(nodeKey)(d)\n    })]\n  }, true);\n  return [deepMix({}, DEFAULT_LINK_OPTIONS, {\n    data: linksData,\n    encode: linkEncode,\n    labels: linkLabels,\n    style: subObject(style, 'link'),\n    tooltip: linkTooltip,\n    animate: maybeAnimation(animate, 'link')\n  }), deepMix({}, DEFAULT_NODE_OPTIONS, {\n    data: nodesData,\n    encode: Object.assign({}, nodeEncode),\n    scale,\n    style: subObject(style, 'node'),\n    tooltip: nodeTooltip,\n    labels: [Object.assign(Object.assign({}, DEFAULT_LABEL_OPTIONS), subObject(style, 'label')), ...nodeLabels],\n    animate: maybeAnimation(animate, 'link')\n  })];\n};\nForceGraph.props = {};","map":{"version":3,"names":["forceSimulation","forceManyBody","forceLink","forceX","forceY","forceCenter","deepMix","subObject","maybeAnimation","subTooltip","field","initializeData","DEFAULT_LAYOUT_OPTIONS","joint","DEFAULT_LINK_OPTIONS","type","axis","legend","encode","x","d","source","target","y","style","stroke","strokeOpacity","DEFAULT_NODE_OPTIONS","size","color","shape","DEFAULT_LABEL_OPTIONS","text","dataTransform","data","layout","nodes","links","nodeStrength","linkStrength","nodeKey","id","linkKey","nodeForce","linkForce","strength","simulation","force","stop","n","Math","ceil","log","alphaMin","alphaDecay","i","tick","nodesData","linksData","ForceGraph","options","e","scale","nodeLabels","linkLabels","animate","tooltip","restEncode","__rest","Object","assign","nodeEncode","linkEncode","linkTooltip","items","name","value","nodeTooltip","labels","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/forceGraph.ts"],"sourcesContent":["import {\n  forceSimulation,\n  forceManyBody,\n  forceLink,\n  forceX,\n  forceY,\n  forceCenter,\n} from '@antv/vendor/d3-force';\nimport { deepMix } from '@antv/util';\nimport { subObject } from '../utils/helper';\nimport { CompositeMarkComponent as CC } from '../runtime';\nimport { ForceGraphMark } from '../spec';\nimport { maybeAnimation, subTooltip } from '../utils/mark';\nimport { field, initializeData } from './utils';\n\ntype ForceLayout = {\n  /** Connect all nodes. */\n  joint?: boolean;\n  /** Gravity coefficient between nodes. */\n  nodeStrength?: number | ((d: any) => number);\n  /** Gravity coefficient between links. */\n  linkStrength?: number | ((d: any) => number);\n};\n\nconst DEFAULT_LAYOUT_OPTIONS: ForceLayout = {\n  joint: true,\n};\n\nconst DEFAULT_LINK_OPTIONS = {\n  type: 'link',\n  axis: false,\n  legend: false,\n  encode: {\n    x: [(d) => d.source.x, (d) => d.target.x],\n    y: [(d) => d.source.y, (d) => d.target.y],\n  },\n  style: {\n    stroke: '#999',\n    strokeOpacity: 0.6,\n  },\n};\n\nconst DEFAULT_NODE_OPTIONS = {\n  type: 'point',\n  axis: false,\n  legend: false,\n  encode: {\n    x: 'x',\n    y: 'y',\n    size: 5,\n    color: 'group',\n    shape: 'point',\n  },\n  style: {\n    stroke: '#fff',\n  },\n};\nconst DEFAULT_LABEL_OPTIONS = {\n  text: '',\n};\n\nfunction dataTransform(data, layout, encode) {\n  const { nodes, links } = data;\n  const { joint, nodeStrength, linkStrength } = layout;\n  const { nodeKey = (d) => d.id, linkKey = (d) => d.id } = encode;\n  const nodeForce = forceManyBody();\n  const linkForce = forceLink(links).id(field(linkKey));\n  typeof nodeStrength === 'function' && nodeForce.strength(nodeStrength);\n  typeof linkStrength === 'function' && linkForce.strength(linkStrength);\n  const simulation = forceSimulation(nodes)\n    .force('link', linkForce)\n    .force('charge', nodeForce);\n  joint\n    ? simulation.force('center', forceCenter())\n    : simulation.force('x', forceX()).force('y', forceY());\n  simulation.stop();\n  const n = Math.ceil(\n    Math.log(simulation.alphaMin()) / Math.log(1 - simulation.alphaDecay()),\n  );\n  for (let i = 0; i < n; i++) simulation.tick();\n  return {\n    nodesData: nodes,\n    linksData: links,\n  };\n}\n\nexport type ForceGraphOptions = Omit<ForceGraphMark, 'type'>;\n\nexport const ForceGraph: CC<ForceGraphOptions> = (options) => {\n  const {\n    data,\n    encode: e = {},\n    scale,\n    style = {},\n    layout = {},\n    nodeLabels = [],\n    linkLabels = [],\n    animate = {},\n    tooltip = {},\n  } = options;\n  const { nodeKey = (d) => d.id, linkKey = (d) => d.id, ...restEncode } = e;\n  const encode = { nodeKey, linkKey, ...restEncode };\n  const nodeEncode = subObject(encode, 'node');\n  const linkEncode = subObject(encode, 'link');\n  const { links, nodes } = initializeData(data, encode);\n  const { nodesData, linksData } = dataTransform(\n    { links, nodes },\n    deepMix({}, DEFAULT_LAYOUT_OPTIONS, layout),\n    encode,\n  );\n  const linkTooltip = subTooltip(tooltip, 'link', {\n    items: [\n      (d) => ({ name: 'source', value: field(linkKey)(d.source) }),\n      (d) => ({ name: 'target', value: field(linkKey)(d.target) }),\n    ],\n  });\n  const nodeTooltip = subTooltip(\n    tooltip,\n    'node',\n    {\n      items: [(d) => ({ name: 'key', value: field(nodeKey)(d) })],\n    },\n    true,\n  );\n  return [\n    deepMix({}, DEFAULT_LINK_OPTIONS, {\n      data: linksData,\n      encode: linkEncode,\n      labels: linkLabels,\n      style: subObject(style, 'link'),\n      tooltip: linkTooltip,\n      animate: maybeAnimation(animate, 'link'),\n    }),\n    deepMix({}, DEFAULT_NODE_OPTIONS, {\n      data: nodesData,\n      encode: { ...nodeEncode },\n      scale,\n      style: subObject(style, 'node'),\n      tooltip: nodeTooltip,\n      labels: [\n        { ...DEFAULT_LABEL_OPTIONS, ...subObject(style, 'label') },\n        ...nodeLabels,\n      ],\n      animate: maybeAnimation(animate, 'link'),\n    }),\n  ];\n};\n\nForceGraph.props = {};\n"],"mappings":";;;;;;;;AAAA,SACEA,eAAe,EACfC,aAAa,EACbC,SAAS,EACTC,MAAM,EACNC,MAAM,EACNC,WAAW,QACN,uBAAuB;AAC9B,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,SAAS,QAAQ,iBAAiB;AAG3C,SAASC,cAAc,EAAEC,UAAU,QAAQ,eAAe;AAC1D,SAASC,KAAK,EAAEC,cAAc,QAAQ,SAAS;AAW/C,MAAMC,sBAAsB,GAAgB;EAC1CC,KAAK,EAAE;CACR;AAED,MAAMC,oBAAoB,GAAG;EAC3BC,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE;IACNC,CAAC,EAAE,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACF,CAAC,EAAGC,CAAC,IAAKA,CAAC,CAACE,MAAM,CAACH,CAAC,CAAC;IACzCI,CAAC,EAAE,CAAEH,CAAC,IAAKA,CAAC,CAACC,MAAM,CAACE,CAAC,EAAGH,CAAC,IAAKA,CAAC,CAACE,MAAM,CAACC,CAAC;GACzC;EACDC,KAAK,EAAE;IACLC,MAAM,EAAE,MAAM;IACdC,aAAa,EAAE;;CAElB;AAED,MAAMC,oBAAoB,GAAG;EAC3BZ,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,KAAK;EACbC,MAAM,EAAE;IACNC,CAAC,EAAE,GAAG;IACNI,CAAC,EAAE,GAAG;IACNK,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,OAAO;IACdC,KAAK,EAAE;GACR;EACDN,KAAK,EAAE;IACLC,MAAM,EAAE;;CAEX;AACD,MAAMM,qBAAqB,GAAG;EAC5BC,IAAI,EAAE;CACP;AAED,SAASC,aAAaA,CAACC,IAAI,EAAEC,MAAM,EAAEjB,MAAM;EACzC,MAAM;IAAEkB,KAAK;IAAEC;EAAK,CAAE,GAAGH,IAAI;EAC7B,MAAM;IAAErB,KAAK;IAAEyB,YAAY;IAAEC;EAAY,CAAE,GAAGJ,MAAM;EACpD,MAAM;IAAEK,OAAO,GAAIpB,CAAC,IAAKA,CAAC,CAACqB,EAAE;IAAEC,OAAO,GAAItB,CAAC,IAAKA,CAAC,CAACqB;EAAE,CAAE,GAAGvB,MAAM;EAC/D,MAAMyB,SAAS,GAAG1C,aAAa,EAAE;EACjC,MAAM2C,SAAS,GAAG1C,SAAS,CAACmC,KAAK,CAAC,CAACI,EAAE,CAAC/B,KAAK,CAACgC,OAAO,CAAC,CAAC;EACrD,OAAOJ,YAAY,KAAK,UAAU,IAAIK,SAAS,CAACE,QAAQ,CAACP,YAAY,CAAC;EACtE,OAAOC,YAAY,KAAK,UAAU,IAAIK,SAAS,CAACC,QAAQ,CAACN,YAAY,CAAC;EACtE,MAAMO,UAAU,GAAG9C,eAAe,CAACoC,KAAK,CAAC,CACtCW,KAAK,CAAC,MAAM,EAAEH,SAAS,CAAC,CACxBG,KAAK,CAAC,QAAQ,EAAEJ,SAAS,CAAC;EAC7B9B,KAAK,GACDiC,UAAU,CAACC,KAAK,CAAC,QAAQ,EAAE1C,WAAW,EAAE,CAAC,GACzCyC,UAAU,CAACC,KAAK,CAAC,GAAG,EAAE5C,MAAM,EAAE,CAAC,CAAC4C,KAAK,CAAC,GAAG,EAAE3C,MAAM,EAAE,CAAC;EACxD0C,UAAU,CAACE,IAAI,EAAE;EACjB,MAAMC,CAAC,GAAGC,IAAI,CAACC,IAAI,CACjBD,IAAI,CAACE,GAAG,CAACN,UAAU,CAACO,QAAQ,EAAE,CAAC,GAAGH,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGN,UAAU,CAACQ,UAAU,EAAE,CAAC,CACxE;EACD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAET,UAAU,CAACU,IAAI,EAAE;EAC7C,OAAO;IACLC,SAAS,EAAErB,KAAK;IAChBsB,SAAS,EAAErB;GACZ;AACH;AAIA,OAAO,MAAMsB,UAAU,GAA2BC,OAAO,IAAI;EAC3D,MAAM;IACJ1B,IAAI;IACJhB,MAAM,EAAE2C,CAAC,GAAG,EAAE;IACdC,KAAK;IACLtC,KAAK,GAAG,EAAE;IACVW,MAAM,GAAG,EAAE;IACX4B,UAAU,GAAG,EAAE;IACfC,UAAU,GAAG,EAAE;IACfC,OAAO,GAAG,EAAE;IACZC,OAAO,GAAG;EAAE,CACb,GAAGN,OAAO;EACX,MAAM;MAAEpB,OAAO,GAAIpB,CAAC,IAAKA,CAAC,CAACqB,EAAE;MAAEC,OAAO,GAAItB,CAAC,IAAKA,CAAC,CAACqB;IAAE,IAAoBoB,CAAC;IAAhBM,UAAU,GAAAC,MAAA,CAAKP,CAAC,EAAnE,sBAA+D,CAAI;EACzE,MAAM3C,MAAM,GAAAmD,MAAA,CAAAC,MAAA;IAAK9B,OAAO;IAAEE;EAAO,GAAKyB,UAAU,CAAE;EAClD,MAAMI,UAAU,GAAGhE,SAAS,CAACW,MAAM,EAAE,MAAM,CAAC;EAC5C,MAAMsD,UAAU,GAAGjE,SAAS,CAACW,MAAM,EAAE,MAAM,CAAC;EAC5C,MAAM;IAAEmB,KAAK;IAAED;EAAK,CAAE,GAAGzB,cAAc,CAACuB,IAAI,EAAEhB,MAAM,CAAC;EACrD,MAAM;IAAEuC,SAAS;IAAEC;EAAS,CAAE,GAAGzB,aAAa,CAC5C;IAAEI,KAAK;IAAED;EAAK,CAAE,EAChB9B,OAAO,CAAC,EAAE,EAAEM,sBAAsB,EAAEuB,MAAM,CAAC,EAC3CjB,MAAM,CACP;EACD,MAAMuD,WAAW,GAAGhE,UAAU,CAACyD,OAAO,EAAE,MAAM,EAAE;IAC9CQ,KAAK,EAAE,CACJtD,CAAC,KAAM;MAAEuD,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAElE,KAAK,CAACgC,OAAO,CAAC,CAACtB,CAAC,CAACC,MAAM;IAAC,CAAE,CAAC,EAC3DD,CAAC,KAAM;MAAEuD,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAElE,KAAK,CAACgC,OAAO,CAAC,CAACtB,CAAC,CAACE,MAAM;IAAC,CAAE,CAAC;GAE/D,CAAC;EACF,MAAMuD,WAAW,GAAGpE,UAAU,CAC5ByD,OAAO,EACP,MAAM,EACN;IACEQ,KAAK,EAAE,CAAEtD,CAAC,KAAM;MAAEuD,IAAI,EAAE,KAAK;MAAEC,KAAK,EAAElE,KAAK,CAAC8B,OAAO,CAAC,CAACpB,CAAC;IAAC,CAAE,CAAC;GAC3D,EACD,IAAI,CACL;EACD,OAAO,CACLd,OAAO,CAAC,EAAE,EAAEQ,oBAAoB,EAAE;IAChCoB,IAAI,EAAEwB,SAAS;IACfxC,MAAM,EAAEsD,UAAU;IAClBM,MAAM,EAAEd,UAAU;IAClBxC,KAAK,EAAEjB,SAAS,CAACiB,KAAK,EAAE,MAAM,CAAC;IAC/B0C,OAAO,EAAEO,WAAW;IACpBR,OAAO,EAAEzD,cAAc,CAACyD,OAAO,EAAE,MAAM;GACxC,CAAC,EACF3D,OAAO,CAAC,EAAE,EAAEqB,oBAAoB,EAAE;IAChCO,IAAI,EAAEuB,SAAS;IACfvC,MAAM,EAAAmD,MAAA,CAAAC,MAAA,KAAOC,UAAU,CAAE;IACzBT,KAAK;IACLtC,KAAK,EAAEjB,SAAS,CAACiB,KAAK,EAAE,MAAM,CAAC;IAC/B0C,OAAO,EAAEW,WAAW;IACpBC,MAAM,EAAE,C,gCACD/C,qBAAqB,GAAKxB,SAAS,CAACiB,KAAK,EAAE,OAAO,CAAC,GACxD,GAAGuC,UAAU,CACd;IACDE,OAAO,EAAEzD,cAAc,CAACyD,OAAO,EAAE,MAAM;GACxC,CAAC,CACH;AACH,CAAC;AAEDN,UAAU,CAACoB,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}