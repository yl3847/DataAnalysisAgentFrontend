{"ast":null,"code":"import { isStrictObject } from '../utils/helper';\nfunction defineValueProp(Node, name, {\n  key = name\n}) {\n  Node.prototype[name] = function (value) {\n    if (arguments.length === 0) return this.attr(key);\n    return this.attr(key, value);\n  };\n}\nfunction defineArrayProp(Node, name, {\n  key = name\n}) {\n  Node.prototype[name] = function (value) {\n    if (arguments.length === 0) return this.attr(key);\n    if (Array.isArray(value)) return this.attr(key, value);\n    const array = [...(this.attr(key) || []), value];\n    return this.attr(key, array);\n  };\n}\nfunction defineObjectProp(Node, name, {\n  key: k = name\n}) {\n  Node.prototype[name] = function (key, value) {\n    if (arguments.length === 0) return this.attr(k);\n    if (arguments.length === 1 && typeof key !== 'string') {\n      return this.attr(k, key);\n    }\n    const obj = this.attr(k) || {};\n    obj[key] = arguments.length === 1 ? true : value;\n    return this.attr(k, obj);\n  };\n}\nfunction defineMixProp(Node, name, descriptor) {\n  Node.prototype[name] = function (key) {\n    if (arguments.length === 0) return this.attr(name);\n    if (Array.isArray(key)) return this.attr(name, {\n      items: key\n    });\n    if (isStrictObject(key) && (key.title !== undefined || key.items !== undefined)) {\n      return this.attr(name, key);\n    }\n    if (key === null || key === false) return this.attr(name, key);\n    const obj = this.attr(name) || {};\n    const {\n      items = []\n    } = obj;\n    items.push(key);\n    obj.items = items;\n    return this.attr(name, obj);\n  };\n}\nfunction defineNodeProp(Node, name, {\n  ctor\n}) {\n  Node.prototype[name] = function (hocMark) {\n    const node = this.append(ctor);\n    if (name === 'mark') {\n      node.type = hocMark;\n    }\n    return node;\n  };\n}\nfunction defineContainerProp(Node, name, {\n  ctor\n}) {\n  Node.prototype[name] = function () {\n    this.type = null;\n    return this.append(ctor);\n  };\n}\n/**\n * A decorator to define different type of attribute setter or\n * getter for current node.\n */\nexport function defineProps(descriptors) {\n  return Node => {\n    for (const [name, descriptor] of Object.entries(descriptors)) {\n      const {\n        type\n      } = descriptor;\n      if (type === 'value') defineValueProp(Node, name, descriptor);else if (type === 'array') defineArrayProp(Node, name, descriptor);else if (type === 'object') defineObjectProp(Node, name, descriptor);else if (type === 'node') defineNodeProp(Node, name, descriptor);else if (type === 'container') defineContainerProp(Node, name, descriptor);else if (type === 'mix') defineMixProp(Node, name, descriptor);\n    }\n    return Node;\n  };\n}\nexport function nodeProps(node) {\n  return Object.fromEntries(Object.entries(node).map(([name, ctor]) => [name, {\n    type: 'node',\n    ctor\n  }]));\n}","map":{"version":3,"names":["isStrictObject","defineValueProp","Node","name","key","prototype","value","arguments","length","attr","defineArrayProp","Array","isArray","array","defineObjectProp","k","obj","defineMixProp","descriptor","items","title","undefined","push","defineNodeProp","ctor","hocMark","node","append","type","defineContainerProp","defineProps","descriptors","Object","entries","nodeProps","fromEntries","map"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/api/define.ts"],"sourcesContent":["import { isStrictObject } from '../utils/helper';\nimport { Node } from './node';\n\nexport type NodePropertyDescriptor = {\n  type: 'object' | 'value' | 'array' | 'node' | 'container' | 'mix';\n  key?: string;\n  ctor?: new (...args: any[]) => any;\n};\n\ntype NodeClass = new (props: any, type?: string) => Node;\n\nfunction defineValueProp(\n  Node: NodeClass,\n  name: string,\n  { key = name }: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function (value) {\n    if (arguments.length === 0) return this.attr(key);\n    return this.attr(key, value);\n  };\n}\n\nfunction defineArrayProp(\n  Node: NodeClass,\n  name: string,\n  { key = name }: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function (value) {\n    if (arguments.length === 0) return this.attr(key);\n    if (Array.isArray(value)) return this.attr(key, value);\n    const array = [...(this.attr(key) || []), value];\n    return this.attr(key, array);\n  };\n}\n\nfunction defineObjectProp(\n  Node: NodeClass,\n  name: string,\n  { key: k = name }: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function (key, value) {\n    if (arguments.length === 0) return this.attr(k);\n    if (arguments.length === 1 && typeof key !== 'string') {\n      return this.attr(k, key);\n    }\n    const obj = this.attr(k) || {};\n    obj[key] = arguments.length === 1 ? true : value;\n    return this.attr(k, obj);\n  };\n}\n\nfunction defineMixProp(\n  Node: NodeClass,\n  name: string,\n  descriptor: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function (key) {\n    if (arguments.length === 0) return this.attr(name);\n    if (Array.isArray(key)) return this.attr(name, { items: key });\n    if (\n      isStrictObject(key) &&\n      (key.title !== undefined || key.items !== undefined)\n    ) {\n      return this.attr(name, key);\n    }\n    if (key === null || key === false) return this.attr(name, key);\n    const obj = this.attr(name) || {};\n    const { items = [] } = obj;\n    items.push(key);\n    obj.items = items;\n    return this.attr(name, obj);\n  };\n}\n\nfunction defineNodeProp(\n  Node: NodeClass,\n  name: string,\n  { ctor }: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function (hocMark?) {\n    const node = this.append(ctor);\n    if (name === 'mark') {\n      node.type = hocMark;\n    }\n    return node;\n  };\n}\n\nfunction defineContainerProp(\n  Node: NodeClass,\n  name: string,\n  { ctor }: NodePropertyDescriptor,\n) {\n  Node.prototype[name] = function () {\n    this.type = null;\n    return this.append(ctor);\n  };\n}\n\n/**\n * A decorator to define different type of attribute setter or\n * getter for current node.\n */\nexport function defineProps(\n  descriptors: Record<string, NodePropertyDescriptor>,\n) {\n  return (Node: NodeClass) => {\n    for (const [name, descriptor] of Object.entries(descriptors)) {\n      const { type } = descriptor;\n      if (type === 'value') defineValueProp(Node, name, descriptor);\n      else if (type === 'array') defineArrayProp(Node, name, descriptor);\n      else if (type === 'object') defineObjectProp(Node, name, descriptor);\n      else if (type === 'node') defineNodeProp(Node, name, descriptor);\n      else if (type === 'container')\n        defineContainerProp(Node, name, descriptor);\n      else if (type === 'mix') defineMixProp(Node, name, descriptor);\n    }\n    return Node as any;\n  };\n}\n\nexport function nodeProps(\n  node: Record<string, new (...args: any[]) => any>,\n): Record<string, NodePropertyDescriptor> {\n  return Object.fromEntries(\n    Object.entries(node).map(([name, ctor]) => [name, { type: 'node', ctor }]),\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}