{"ast":null,"code":"import { GraphEvent } from '../constants';\nimport { GraphLifeCycleEvent } from '../utils/event';\nexport class BatchController {\n  constructor(context) {\n    this.batchCount = 0;\n    this.context = context;\n  }\n  emit(event) {\n    const {\n      graph\n    } = this.context;\n    graph.emit(event.type, event);\n  }\n  startBatch(initiate = true) {\n    this.batchCount++;\n    if (this.batchCount === 1) this.emit(new GraphLifeCycleEvent(GraphEvent.BATCH_START, {\n      initiate\n    }));\n  }\n  endBatch() {\n    this.batchCount--;\n    if (this.batchCount === 0) this.emit(new GraphLifeCycleEvent(GraphEvent.BATCH_END));\n  }\n  get isBatching() {\n    return this.batchCount > 0;\n  }\n  destroy() {\n    // @ts-ignore\n    this.context = null;\n  }\n}","map":{"version":3,"names":["GraphEvent","GraphLifeCycleEvent","BatchController","constructor","context","batchCount","emit","event","graph","type","startBatch","initiate","BATCH_START","endBatch","BATCH_END","isBatching","destroy"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/runtime/batch.ts"],"sourcesContent":["import { GraphEvent } from '../constants';\nimport type { BaseEvent } from '../utils/event';\nimport { GraphLifeCycleEvent } from '../utils/event';\nimport type { RuntimeContext } from './types';\n\nexport class BatchController {\n  private context: RuntimeContext;\n\n  private batchCount: number = 0;\n\n  constructor(context: RuntimeContext) {\n    this.context = context;\n  }\n\n  private emit(event: BaseEvent) {\n    const { graph } = this.context;\n    graph.emit(event.type, event);\n  }\n\n  public startBatch(initiate = true) {\n    this.batchCount++;\n    if (this.batchCount === 1) this.emit(new GraphLifeCycleEvent(GraphEvent.BATCH_START, { initiate }));\n  }\n\n  public endBatch() {\n    this.batchCount--;\n    if (this.batchCount === 0) this.emit(new GraphLifeCycleEvent(GraphEvent.BATCH_END));\n  }\n\n  public get isBatching() {\n    return this.batchCount > 0;\n  }\n\n  public destroy() {\n    // @ts-ignore\n    this.context = null;\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,cAAc;AAEzC,SAASC,mBAAmB,QAAQ,gBAAgB;AAGpD,OAAM,MAAOC,eAAe;EAK1BC,YAAYC,OAAuB;IAF3B,KAAAC,UAAU,GAAW,CAAC;IAG5B,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAEQE,IAAIA,CAACC,KAAgB;IAC3B,MAAM;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACJ,OAAO;IAC9BI,KAAK,CAACF,IAAI,CAACC,KAAK,CAACE,IAAI,EAAEF,KAAK,CAAC;EAC/B;EAEOG,UAAUA,CAACC,QAAQ,GAAG,IAAI;IAC/B,IAAI,CAACN,UAAU,EAAE;IACjB,IAAI,IAAI,CAACA,UAAU,KAAK,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,IAAIL,mBAAmB,CAACD,UAAU,CAACY,WAAW,EAAE;MAAED;IAAQ,CAAE,CAAC,CAAC;EACrG;EAEOE,QAAQA,CAAA;IACb,IAAI,CAACR,UAAU,EAAE;IACjB,IAAI,IAAI,CAACA,UAAU,KAAK,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC,IAAIL,mBAAmB,CAACD,UAAU,CAACc,SAAS,CAAC,CAAC;EACrF;EAEA,IAAWC,UAAUA,CAAA;IACnB,OAAO,IAAI,CAACV,UAAU,GAAG,CAAC;EAC5B;EAEOW,OAAOA,CAAA;IACZ;IACA,IAAI,CAACZ,OAAO,GAAG,IAAI;EACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}