{"ast":null,"code":"import { CommonEvent, ContainerEvent } from '../constants';\nimport { ExtensionController } from '../registry/extension';\nimport { isToBeDestroyed } from '../utils/element';\nimport { eventTargetOf } from '../utils/event';\nexport class BehaviorController extends ExtensionController {\n  constructor(context) {\n    super(context);\n    /**\n     * <zh/> 当前事件的目标\n     *\n     *  <en/> The current event target\n     */\n    this.currentTarget = null;\n    this.currentTargetType = null;\n    this.category = 'behavior';\n    this.forwardCanvasEvents = event => {\n      const {\n        target: originalTarget\n      } = event;\n      const target = eventTargetOf(originalTarget);\n      if (!target) return;\n      const {\n        graph,\n        canvas\n      } = this.context;\n      const {\n        type: targetType,\n        element: targetElement\n      } = target;\n      // 即将销毁或已销毁的元素不再触发事件\n      // Elements that are about to be destroyed or have been destroyed no longer trigger events\n      if ('destroyed' in targetElement && (isToBeDestroyed(targetElement) || targetElement.destroyed)) return;\n      const {\n        type,\n        detail,\n        button\n      } = event;\n      const stdEvent = Object.assign(Object.assign({}, event), {\n        target: targetElement,\n        targetType,\n        originalTarget\n      });\n      if (type === CommonEvent.POINTER_MOVE) {\n        if (this.currentTarget !== targetElement) {\n          if (this.currentTarget) {\n            graph.emit(`${this.currentTargetType}:${CommonEvent.POINTER_LEAVE}`, Object.assign(Object.assign({}, stdEvent), {\n              type: CommonEvent.POINTER_LEAVE,\n              target: this.currentTarget,\n              targetType: this.currentTargetType\n            }));\n          }\n          if (targetElement) {\n            Object.assign(stdEvent, {\n              type: CommonEvent.POINTER_ENTER\n            });\n            graph.emit(`${targetType}:${CommonEvent.POINTER_ENTER}`, stdEvent);\n          }\n        }\n        this.currentTarget = targetElement;\n        this.currentTargetType = targetType;\n      }\n      // 非右键点击事件 / Click event except right click\n      if (!(type === CommonEvent.CLICK && button === 2)) {\n        graph.emit(`${targetType}:${type}`, stdEvent);\n        graph.emit(type, stdEvent);\n      }\n      // 双击事件 / Double click event\n      if (type === CommonEvent.CLICK && detail === 2) {\n        Object.assign(stdEvent, {\n          type: CommonEvent.DBLCLICK\n        });\n        graph.emit(`${targetType}:${CommonEvent.DBLCLICK}`, stdEvent);\n        graph.emit(CommonEvent.DBLCLICK, stdEvent);\n      }\n      // 右键菜单 / Contextmenu\n      if (type === CommonEvent.POINTER_DOWN && button === 2) {\n        Object.assign(stdEvent, {\n          type: CommonEvent.CONTEXT_MENU,\n          preventDefault: () => {\n            var _a;\n            (_a = canvas.getContainer()) === null || _a === void 0 ? void 0 : _a.addEventListener(CommonEvent.CONTEXT_MENU, e => e.preventDefault(), {\n              once: true\n            });\n          }\n        });\n        graph.emit(`${targetType}:${CommonEvent.CONTEXT_MENU}`, stdEvent);\n        graph.emit(CommonEvent.CONTEXT_MENU, stdEvent);\n      }\n    };\n    this.forwardContainerEvents = event => {\n      this.context.graph.emit(event.type, event);\n    };\n    this.forwardEvents();\n    this.setBehaviors(this.context.options.behaviors || []);\n  }\n  setBehaviors(behaviors) {\n    this.setExtensions(behaviors);\n  }\n  forwardEvents() {\n    const container = this.context.canvas.getContainer();\n    if (container) {\n      [ContainerEvent.KEY_DOWN, ContainerEvent.KEY_UP].forEach(name => {\n        container.addEventListener(name, this.forwardContainerEvents);\n      });\n    }\n    const canvas = this.context.canvas.document;\n    if (canvas) {\n      [CommonEvent.CLICK, CommonEvent.DBLCLICK, CommonEvent.POINTER_OVER, CommonEvent.POINTER_LEAVE, CommonEvent.POINTER_ENTER, CommonEvent.POINTER_MOVE, CommonEvent.POINTER_OUT, CommonEvent.POINTER_DOWN, CommonEvent.POINTER_UP, CommonEvent.CONTEXT_MENU, CommonEvent.DRAG_START, CommonEvent.DRAG, CommonEvent.DRAG_END, CommonEvent.DRAG_ENTER, CommonEvent.DRAG_OVER, CommonEvent.DRAG_LEAVE, CommonEvent.DROP, CommonEvent.WHEEL].forEach(name => {\n        canvas.addEventListener(name, this.forwardCanvasEvents);\n      });\n    }\n  }\n  destroy() {\n    const container = this.context.canvas.getContainer();\n    if (container) {\n      [ContainerEvent.KEY_DOWN, ContainerEvent.KEY_UP].forEach(name => {\n        container.removeEventListener(name, this.forwardContainerEvents);\n      });\n    }\n    this.context.canvas.document.removeAllEventListeners();\n    super.destroy();\n  }\n}","map":{"version":3,"names":["CommonEvent","ContainerEvent","ExtensionController","isToBeDestroyed","eventTargetOf","BehaviorController","constructor","context","currentTarget","currentTargetType","category","forwardCanvasEvents","event","target","originalTarget","graph","canvas","type","targetType","element","targetElement","destroyed","detail","button","stdEvent","Object","assign","POINTER_MOVE","emit","POINTER_LEAVE","POINTER_ENTER","CLICK","DBLCLICK","POINTER_DOWN","CONTEXT_MENU","preventDefault","_a","getContainer","addEventListener","e","once","forwardContainerEvents","forwardEvents","setBehaviors","options","behaviors","setExtensions","container","KEY_DOWN","KEY_UP","forEach","name","document","POINTER_OVER","POINTER_OUT","POINTER_UP","DRAG_START","DRAG","DRAG_END","DRAG_ENTER","DRAG_OVER","DRAG_LEAVE","DROP","WHEEL","destroy","removeEventListener","removeAllEventListeners"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/runtime/behavior.ts"],"sourcesContent":["import type { DisplayObject, FederatedPointerEvent, FederatedWheelEvent } from '@antv/g';\nimport type { BaseBehavior } from '../behaviors/base-behavior';\nimport { CommonEvent, ContainerEvent } from '../constants';\nimport { ExtensionController } from '../registry/extension';\nimport type { BehaviorOptions, CustomBehaviorOption } from '../spec/behavior';\nimport type { Target } from '../types';\nimport { isToBeDestroyed } from '../utils/element';\nimport { eventTargetOf } from '../utils/event';\nimport type { RuntimeContext } from './types';\n\nexport class BehaviorController extends ExtensionController<BaseBehavior<CustomBehaviorOption>> {\n  /**\n   * <zh/> 当前事件的目标\n   *\n   *  <en/> The current event target\n   */\n  private currentTarget: Target | null = null;\n\n  private currentTargetType: string | null = null;\n\n  public category = 'behavior' as const;\n\n  constructor(context: RuntimeContext) {\n    super(context);\n    this.forwardEvents();\n    this.setBehaviors(this.context.options.behaviors || []);\n  }\n\n  public setBehaviors(behaviors: BehaviorOptions) {\n    this.setExtensions(behaviors);\n  }\n\n  private forwardEvents() {\n    const container = this.context.canvas.getContainer();\n    if (container) {\n      [ContainerEvent.KEY_DOWN, ContainerEvent.KEY_UP].forEach((name) => {\n        container.addEventListener(name, this.forwardContainerEvents);\n      });\n    }\n\n    const canvas = this.context.canvas.document;\n    if (canvas) {\n      [\n        CommonEvent.CLICK,\n        CommonEvent.DBLCLICK,\n        CommonEvent.POINTER_OVER,\n        CommonEvent.POINTER_LEAVE,\n        CommonEvent.POINTER_ENTER,\n        CommonEvent.POINTER_MOVE,\n        CommonEvent.POINTER_OUT,\n        CommonEvent.POINTER_DOWN,\n        CommonEvent.POINTER_UP,\n        CommonEvent.CONTEXT_MENU,\n        CommonEvent.DRAG_START,\n        CommonEvent.DRAG,\n        CommonEvent.DRAG_END,\n        CommonEvent.DRAG_ENTER,\n        CommonEvent.DRAG_OVER,\n        CommonEvent.DRAG_LEAVE,\n        CommonEvent.DROP,\n        CommonEvent.WHEEL,\n      ].forEach((name) => {\n        canvas.addEventListener(name, this.forwardCanvasEvents);\n      });\n    }\n  }\n\n  private forwardCanvasEvents = (event: FederatedPointerEvent | FederatedWheelEvent) => {\n    const { target: originalTarget } = event;\n    const target = eventTargetOf(originalTarget as DisplayObject);\n    if (!target) return;\n    const { graph, canvas } = this.context;\n    const { type: targetType, element: targetElement } = target;\n    // 即将销毁或已销毁的元素不再触发事件\n    // Elements that are about to be destroyed or have been destroyed no longer trigger events\n    if ('destroyed' in targetElement && (isToBeDestroyed(targetElement) || targetElement.destroyed)) return;\n\n    const { type, detail, button } = event;\n    const stdEvent = { ...event, target: targetElement, targetType, originalTarget };\n\n    if (type === CommonEvent.POINTER_MOVE) {\n      if (this.currentTarget !== targetElement) {\n        if (this.currentTarget) {\n          graph.emit(`${this.currentTargetType}:${CommonEvent.POINTER_LEAVE}`, {\n            ...stdEvent,\n            type: CommonEvent.POINTER_LEAVE,\n            target: this.currentTarget,\n            targetType: this.currentTargetType,\n          });\n        }\n        if (targetElement) {\n          Object.assign(stdEvent, { type: CommonEvent.POINTER_ENTER });\n          graph.emit(`${targetType}:${CommonEvent.POINTER_ENTER}`, stdEvent);\n        }\n      }\n      this.currentTarget = targetElement;\n      this.currentTargetType = targetType;\n    }\n\n    // 非右键点击事件 / Click event except right click\n    if (!(type === CommonEvent.CLICK && button === 2)) {\n      graph.emit(`${targetType}:${type}`, stdEvent);\n      graph.emit(type, stdEvent);\n    }\n\n    // 双击事件 / Double click event\n    if (type === CommonEvent.CLICK && detail === 2) {\n      Object.assign(stdEvent, { type: CommonEvent.DBLCLICK });\n      graph.emit(`${targetType}:${CommonEvent.DBLCLICK}`, stdEvent);\n      graph.emit(CommonEvent.DBLCLICK, stdEvent);\n    }\n\n    // 右键菜单 / Contextmenu\n    if (type === CommonEvent.POINTER_DOWN && button === 2) {\n      Object.assign(stdEvent, {\n        type: CommonEvent.CONTEXT_MENU,\n        preventDefault: () => {\n          canvas.getContainer()?.addEventListener(CommonEvent.CONTEXT_MENU, (e) => e.preventDefault(), {\n            once: true,\n          });\n        },\n      });\n      graph.emit(`${targetType}:${CommonEvent.CONTEXT_MENU}`, stdEvent);\n      graph.emit(CommonEvent.CONTEXT_MENU, stdEvent);\n    }\n  };\n\n  private forwardContainerEvents = (event: FocusEvent | KeyboardEvent) => {\n    this.context.graph.emit(event.type, event);\n  };\n\n  public destroy(): void {\n    const container = this.context.canvas.getContainer();\n    if (container) {\n      [ContainerEvent.KEY_DOWN, ContainerEvent.KEY_UP].forEach((name) => {\n        container.removeEventListener(name, this.forwardContainerEvents);\n      });\n    }\n    this.context.canvas.document.removeAllEventListeners();\n    super.destroy();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}