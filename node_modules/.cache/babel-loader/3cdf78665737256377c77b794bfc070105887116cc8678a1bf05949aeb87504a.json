{"ast":null,"code":"import { measureTextHeight, measureTextWidth } from '@ant-design/charts-util';\n/**\n * 计算文本尺寸\n * @param text - 文本内容\n * @param offset - 水平和垂直偏移量，默认为 [0, 0]，用于调整文本节点的大小\n * @param font - 字体样式\n * @param minWidth - 最小宽度，默认为 0\n * @param maxWith - 最大宽度，默认为 Infinity；超出部分会被自动换行\n * @returns 文本尺寸（包括宽度和高度）\n */\nexport function measureTextSize(text, offset = [0, 0], font = {\n  fontSize: 16,\n  fontFamily: 'PingFang SC'\n}, minWidth = 0, maxWith = Infinity) {\n  const height = measureTextHeight(text, font);\n  const width = measureTextWidth(text, font) + 4;\n  const lineNumber = maxWith === Infinity ? 1 : Math.ceil(width / maxWith);\n  const [offsetWidth, offsetHeight] = offset;\n  return [Math.max(minWidth, Math.min(maxWith, width)) + offsetWidth, offsetHeight + height + height * 1.5 * (lineNumber - 1)];\n}","map":{"version":3,"names":["measureTextHeight","measureTextWidth","measureTextSize","text","offset","font","fontSize","fontFamily","minWidth","maxWith","Infinity","height","width","lineNumber","Math","ceil","offsetWidth","offsetHeight","max","min"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/core/utils/measure-text.js"],"sourcesContent":["import { measureTextHeight, measureTextWidth } from '@ant-design/charts-util';\n/**\n * 计算文本尺寸\n * @param text - 文本内容\n * @param offset - 水平和垂直偏移量，默认为 [0, 0]，用于调整文本节点的大小\n * @param font - 字体样式\n * @param minWidth - 最小宽度，默认为 0\n * @param maxWith - 最大宽度，默认为 Infinity；超出部分会被自动换行\n * @returns 文本尺寸（包括宽度和高度）\n */\nexport function measureTextSize(text, offset = [0, 0], font = { fontSize: 16, fontFamily: 'PingFang SC' }, minWidth = 0, maxWith = Infinity) {\n    const height = measureTextHeight(text, font);\n    const width = measureTextWidth(text, font) + 4;\n    const lineNumber = maxWith === Infinity ? 1 : Math.ceil(width / maxWith);\n    const [offsetWidth, offsetHeight] = offset;\n    return [\n        Math.max(minWidth, Math.min(maxWith, width)) + offsetWidth,\n        offsetHeight + height + height * 1.5 * (lineNumber - 1),\n    ];\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,EAAEC,gBAAgB,QAAQ,yBAAyB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,IAAI,EAAEC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEC,IAAI,GAAG;EAAEC,QAAQ,EAAE,EAAE;EAAEC,UAAU,EAAE;AAAc,CAAC,EAAEC,QAAQ,GAAG,CAAC,EAAEC,OAAO,GAAGC,QAAQ,EAAE;EACzI,MAAMC,MAAM,GAAGX,iBAAiB,CAACG,IAAI,EAAEE,IAAI,CAAC;EAC5C,MAAMO,KAAK,GAAGX,gBAAgB,CAACE,IAAI,EAAEE,IAAI,CAAC,GAAG,CAAC;EAC9C,MAAMQ,UAAU,GAAGJ,OAAO,KAAKC,QAAQ,GAAG,CAAC,GAAGI,IAAI,CAACC,IAAI,CAACH,KAAK,GAAGH,OAAO,CAAC;EACxE,MAAM,CAACO,WAAW,EAAEC,YAAY,CAAC,GAAGb,MAAM;EAC1C,OAAO,CACHU,IAAI,CAACI,GAAG,CAACV,QAAQ,EAAEM,IAAI,CAACK,GAAG,CAACV,OAAO,EAAEG,KAAK,CAAC,CAAC,GAAGI,WAAW,EAC1DC,YAAY,GAAGN,MAAM,GAAGA,MAAM,GAAG,GAAG,IAAIE,UAAU,GAAG,CAAC,CAAC,CAC1D;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}