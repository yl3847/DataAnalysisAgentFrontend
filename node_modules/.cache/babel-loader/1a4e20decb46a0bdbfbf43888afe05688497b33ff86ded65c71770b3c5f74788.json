{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { BasePlugin } from '../base-plugin';\nimport { createPluginContainer, insertDOM } from '../utils/dom';\nimport { BUILD_IN_SVG_ICON, TOOLBAR_CSS, parsePositionToStyle } from './util';\n/**\n * <zh/> 工具栏，支持配置工具栏项目，以及点击之后的回调方法\n *\n * <en/> Toolbar, support configuration of toolbar items, and callback methods after clicking\n */\nexport class Toolbar extends BasePlugin {\n  constructor(context, options) {\n    super(context, Object.assign({}, Toolbar.defaultOptions, options));\n    this.$element = createPluginContainer('toolbar', false);\n    this.onToolbarItemClick = e => {\n      const {\n        onClick\n      } = this.options;\n      if (e.target instanceof Element) {\n        if (e.target.className.includes('g6-toolbar-item')) {\n          const v = e.target.getAttribute('value');\n          onClick === null || onClick === void 0 ? void 0 : onClick(v, e.target);\n        }\n      }\n    };\n    const $container = this.context.canvas.getContainer();\n    this.$element.style.display = 'flex';\n    $container.appendChild(this.$element);\n    // 设置样式\n    insertDOM('g6-toolbar-css', 'style', {}, TOOLBAR_CSS, document.head);\n    insertDOM('g6-toolbar-svgicon', 'div', {\n      display: 'none'\n    }, BUILD_IN_SVG_ICON);\n    this.$element.addEventListener('click', this.onToolbarItemClick);\n    this.update(options);\n  }\n  /**\n   * <zh/> 更新工具栏的配置项\n   *\n   * <en/> Update the configuration of the toolbar\n   * @param options - <zh/> 工具栏的配置项 | <en/> The options of the toolbar\n   * @internal\n   */\n  update(options) {\n    const _super = Object.create(null, {\n      update: {\n        get: () => super.update\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      _super.update.call(this, options);\n      const {\n        className,\n        position,\n        style\n      } = this.options;\n      this.$element.className = `g6-toolbar ${className || ''}`;\n      // 设置容器的样式，主要是位置，背景之类的\n      Object.assign(this.$element.style, style, parsePositionToStyle(position));\n      this.$element.innerHTML = yield this.getDOMContent();\n    });\n  }\n  /**\n   * <zh/> 销毁工具栏\n   *\n   * <en/> Destroy the toolbar\n   * @internal\n   */\n  destroy() {\n    this.$element.removeEventListener('click', this.onToolbarItemClick);\n    this.$element.remove();\n    super.destroy();\n  }\n  getDOMContent() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const items = yield this.options.getItems();\n      return items.map(item => {\n        var _a;\n        return `\n          <div class=\"g6-toolbar-item\" value=\"${item.value}\" title=\"${(_a = item.title) !== null && _a !== void 0 ? _a : ''}\">\n            <svg aria-hidden=\"true\" focusable=\"false\">\n              <use xlink:href=\"#${item.id}\"></use>\n            </svg>\n          </div>`;\n      }).join('');\n    });\n  }\n}\nToolbar.defaultOptions = {\n  position: 'top-left'\n};","map":{"version":3,"names":["BasePlugin","createPluginContainer","insertDOM","BUILD_IN_SVG_ICON","TOOLBAR_CSS","parsePositionToStyle","Toolbar","constructor","context","options","Object","assign","defaultOptions","$element","onToolbarItemClick","e","onClick","target","Element","className","includes","v","getAttribute","$container","canvas","getContainer","style","display","appendChild","document","head","addEventListener","update","_super","call","position","innerHTML","getDOMContent","destroy","removeEventListener","remove","items","getItems","map","item","value","_a","title","id","join"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/toolbar/index.ts"],"sourcesContent":["import type { RuntimeContext } from '../../runtime/types';\nimport type { CornerPlacement } from '../../types';\nimport type { BasePluginOptions } from '../base-plugin';\nimport { BasePlugin } from '../base-plugin';\nimport { createPluginContainer, insertDOM } from '../utils/dom';\nimport type { ToolbarItem } from './util';\nimport { BUILD_IN_SVG_ICON, TOOLBAR_CSS, parsePositionToStyle } from './util';\n\n/**\n * <zh/> Toolbar 工具栏的配置项\n *\n * <en/> The options of the Toolbar toolbar\n */\nexport interface ToolbarOptions extends BasePluginOptions {\n  /**\n   * <zh/> 给工具栏的 DOM 追加的 classname，便于自定义样式。默认是包含 `g6-toolbar`\n   *\n   * <en/> The classname appended to the menu DOM for custom styles. The default is `g6-toolbar`\n   */\n  className?: string;\n  /**\n   * <zh/> Toolbar 的位置，相对于画布，会影响 DOM 的 style 样式\n   *\n   * <en/> The position of the Toolbar relative to the canvas, which will affect the style of the DOM\n   * @defaultValue 'top-left'\n   */\n  position?: CornerPlacement;\n  /**\n   * <zh/> 工具栏显式的 style 样式，可以用来设置它相对于画布的位置、背景容器样式等\n   *\n   * <en/> The style style of the Toolbar, which can be used to set its position relative to the canvas\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * <zh/> 当工具栏被点击后，触发的回调方法\n   *\n   * <en/> The callback method triggered when the toolbar item is clicked\n   */\n  onClick?: (value: string, target: Element) => void;\n  /**\n   * <zh/> 返回工具栏的项目列表，支持 `Promise` 类型的返回值\n   *\n   * <en/> Return the list of toolbar items, support return a `Promise` as items\n   */\n  getItems: () => ToolbarItem[] | Promise<ToolbarItem[]>;\n}\n\n/**\n * <zh/> 工具栏，支持配置工具栏项目，以及点击之后的回调方法\n *\n * <en/> Toolbar, support configuration of toolbar items, and callback methods after clicking\n */\nexport class Toolbar extends BasePlugin<ToolbarOptions> {\n  static defaultOptions: Partial<ToolbarOptions> = {\n    position: 'top-left',\n  };\n\n  private $element: HTMLElement = createPluginContainer('toolbar', false);\n\n  constructor(context: RuntimeContext, options: ToolbarOptions) {\n    super(context, Object.assign({}, Toolbar.defaultOptions, options));\n\n    const $container = this.context.canvas.getContainer();\n    this.$element.style.display = 'flex';\n    $container!.appendChild(this.$element);\n\n    // 设置样式\n    insertDOM('g6-toolbar-css', 'style', {}, TOOLBAR_CSS, document.head);\n    insertDOM('g6-toolbar-svgicon', 'div', { display: 'none' }, BUILD_IN_SVG_ICON);\n\n    this.$element.addEventListener('click', this.onToolbarItemClick);\n\n    this.update(options);\n  }\n\n  /**\n   * <zh/> 更新工具栏的配置项\n   *\n   * <en/> Update the configuration of the toolbar\n   * @param options - <zh/> 工具栏的配置项 | <en/> The options of the toolbar\n   * @internal\n   */\n  public async update(options: Partial<ToolbarOptions>) {\n    super.update(options);\n\n    const { className, position, style } = this.options;\n\n    this.$element.className = `g6-toolbar ${className || ''}`;\n\n    // 设置容器的样式，主要是位置，背景之类的\n    Object.assign(this.$element.style, style, parsePositionToStyle(position));\n\n    this.$element.innerHTML = await this.getDOMContent();\n  }\n\n  /**\n   * <zh/> 销毁工具栏\n   *\n   * <en/> Destroy the toolbar\n   * @internal\n   */\n  public destroy(): void {\n    this.$element.removeEventListener('click', this.onToolbarItemClick);\n    this.$element.remove();\n\n    super.destroy();\n  }\n\n  private async getDOMContent() {\n    const items = await this.options.getItems();\n    return items\n      .map(\n        (item) => `\n          <div class=\"g6-toolbar-item\" value=\"${item.value}\" title=\"${item.title ?? ''}\">\n            <svg aria-hidden=\"true\" focusable=\"false\">\n              <use xlink:href=\"#${item.id}\"></use>\n            </svg>\n          </div>`,\n      )\n      .join('');\n  }\n\n  private onToolbarItemClick = (e: MouseEvent) => {\n    const { onClick } = this.options;\n    if (e.target instanceof Element) {\n      if (e.target.className.includes('g6-toolbar-item')) {\n        const v = e.target.getAttribute('value') as string;\n        onClick?.(v, e.target);\n      }\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}