{"ast":null,"code":"import isArray from './is-array';\nimport isString from './is-string';\nimport isFunction from './is-function';\nfunction sortBy(arr, key) {\n  var comparer;\n  if (isFunction(key)) {\n    comparer = function (a, b) {\n      return key(a) - key(b);\n    };\n  } else {\n    var keys_1 = [];\n    if (isString(key)) {\n      keys_1.push(key);\n    } else if (isArray(key)) {\n      keys_1 = key;\n    }\n    comparer = function (a, b) {\n      for (var i = 0; i < keys_1.length; i += 1) {\n        var prop = keys_1[i];\n        if (a[prop] > b[prop]) {\n          return 1;\n        }\n        if (a[prop] < b[prop]) {\n          return -1;\n        }\n      }\n      return 0;\n    };\n  }\n  arr.sort(comparer);\n  return arr;\n}\nexport default sortBy;","map":{"version":3,"names":["isArray","isString","isFunction","sortBy","arr","key","comparer","a","b","keys_1","push","i","length","prop","sort"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/node_modules/@antv/util/src/sort-by.ts"],"sourcesContent":["import isArray from './is-array';\nimport isString from './is-string';\nimport isFunction from './is-function';\n\nexport interface ObjectType<T> {\n  [key: string]: T;\n}\n\nfunction sortBy<T> (arr: ObjectType<T>[], key: Function): ObjectType<T>[];\nfunction sortBy<T> (arr: ObjectType<T>[], key: string): ObjectType<T>[];\nfunction sortBy<T> (arr: ObjectType<T>[], key: string[]): ObjectType<T>[];\n\nfunction sortBy<T> (arr: ObjectType<T>[], key: Function | string | string[]): ObjectType<T>[] {\n  let comparer;\n  if (isFunction(key)) {\n    comparer = (a, b) => key(a) - key(b);\n  } else {\n    let keys = [];\n    if (isString(key)) {\n      keys.push(key);\n    } else if (isArray(key)) {\n      keys = key;\n    }\n    comparer = (a, b) => {\n      for (let i = 0; i < keys.length; i += 1) {\n        const prop = keys[i];\n        if (a[prop] > b[prop]) {\n          return 1;\n        }\n        if (a[prop] < b[prop]) {\n          return -1;\n        }\n      }\n      return 0;\n    };\n  }\n\n  arr.sort(comparer);\n  return arr;\n}\n\nexport default sortBy;\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,UAAU,MAAM,eAAe;AAUtC,SAASC,MAAMA,CAAKC,GAAoB,EAAEC,GAAiC;EACzE,IAAIC,QAAQ;EACZ,IAAIJ,UAAU,CAACG,GAAG,CAAC,EAAE;IACnBC,QAAQ,GAAG,SAAAA,CAACC,CAAC,EAAEC,CAAC;MAAK,OAAAH,GAAG,CAACE,CAAC,CAAC,GAAGF,GAAG,CAACG,CAAC,CAAC;IAAf,CAAe;GACrC,MAAM;IACL,IAAIC,MAAI,GAAG,EAAE;IACb,IAAIR,QAAQ,CAACI,GAAG,CAAC,EAAE;MACjBI,MAAI,CAACC,IAAI,CAACL,GAAG,CAAC;KACf,MAAM,IAAIL,OAAO,CAACK,GAAG,CAAC,EAAE;MACvBI,MAAI,GAAGJ,GAAG;;IAEZC,QAAQ,GAAG,SAAAA,CAACC,CAAC,EAAEC,CAAC;MACd,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAI,CAACG,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;QACvC,IAAME,IAAI,GAAGJ,MAAI,CAACE,CAAC,CAAC;QACpB,IAAIJ,CAAC,CAACM,IAAI,CAAC,GAAGL,CAAC,CAACK,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC;;QAEV,IAAIN,CAAC,CAACM,IAAI,CAAC,GAAGL,CAAC,CAACK,IAAI,CAAC,EAAE;UACrB,OAAO,CAAC,CAAC;;;MAGb,OAAO,CAAC;IACV,CAAC;;EAGHT,GAAG,CAACU,IAAI,CAACR,QAAQ,CAAC;EAClB,OAAOF,GAAG;AACZ;AAEA,eAAeD,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}