{"ast":null,"code":"/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n *\n * @see https://github.com/dagrejs/dagre/blob/master/lib/greedy-fas.js\n */\nimport { Graph } from '@antv/graphlib';\nimport RawList from './data/list';\nclass List extends RawList {}\nconst DEFAULT_WEIGHT_FN = () => 1;\nexport const greedyFAS = (g, weightFn) => {\n  var _a;\n  if (g.getAllNodes().length <= 1) return [];\n  const state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  const results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n  return (_a = results.map(e => g.getRelatedEdges(e.v, 'out').filter(({\n    target\n  }) => target === e.w))) === null || _a === void 0 ? void 0 : _a.flat();\n};\nconst doGreedyFAS = (g, buckets, zeroIdx) => {\n  let results = [];\n  const sources = buckets[buckets.length - 1];\n  const sinks = buckets[0];\n  let entry;\n  while (g.getAllNodes().length) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.getAllNodes().length) {\n      for (let i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n  return results;\n};\nconst removeNode = (g, buckets, zeroIdx, entry, collectPredecessors) => {\n  var _a, _b;\n  const results = [];\n  if (g.hasNode(entry.v)) {\n    (_a = g.getRelatedEdges(entry.v, 'in')) === null || _a === void 0 ? void 0 : _a.forEach(edge => {\n      const weight = edge.data.weight;\n      const uEntry = g.getNode(edge.source);\n      if (collectPredecessors) {\n        // this result not really care about in or out\n        results.push({\n          v: edge.source,\n          w: edge.target,\n          in: 0,\n          out: 0\n        });\n      }\n      if (uEntry.data.out === undefined) uEntry.data.out = 0;\n      // @ts-ignore\n      uEntry.data.out -= weight;\n      assignBucket(buckets, zeroIdx, Object.assign({\n        v: uEntry.id\n      }, uEntry.data));\n    });\n    (_b = g.getRelatedEdges(entry.v, 'out')) === null || _b === void 0 ? void 0 : _b.forEach(edge => {\n      const weight = edge.data.weight;\n      const w = edge.target;\n      const wEntry = g.getNode(w);\n      if (wEntry.data.in === undefined) wEntry.data.in = 0;\n      // @ts-ignore\n      wEntry.data.in -= weight;\n      assignBucket(buckets, zeroIdx, Object.assign({\n        v: wEntry.id\n      }, wEntry.data));\n    });\n    g.removeNode(entry.v);\n  }\n  return collectPredecessors ? results : undefined;\n};\nconst buildState = (g, weightFn) => {\n  const fasGraph = new Graph();\n  let maxIn = 0;\n  let maxOut = 0;\n  g.getAllNodes().forEach(v => {\n    fasGraph.addNode({\n      id: v.id,\n      data: {\n        v: v.id,\n        in: 0,\n        out: 0\n      }\n    });\n  });\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  g.getAllEdges().forEach(e => {\n    const edge = fasGraph.getRelatedEdges(e.source, 'out').find(edge => edge.target === e.target);\n    const weight = (weightFn === null || weightFn === void 0 ? void 0 : weightFn(e)) || 1;\n    if (!edge) {\n      fasGraph.addEdge({\n        id: e.id,\n        source: e.source,\n        target: e.target,\n        data: {\n          weight\n        }\n      });\n    } else {\n      fasGraph.updateEdgeData(edge === null || edge === void 0 ? void 0 : edge.id, Object.assign(Object.assign({}, edge.data), {\n        weight: edge.data.weight + weight\n      }));\n    }\n    // @ts-ignore\n    maxOut = Math.max(maxOut, fasGraph.getNode(e.source).data.out += weight);\n    // @ts-ignore\n    maxIn = Math.max(maxIn, fasGraph.getNode(e.target).data.in += weight);\n  });\n  const buckets = [];\n  const rangeMax = maxOut + maxIn + 3;\n  for (let i = 0; i < rangeMax; i++) {\n    buckets.push(new List());\n  }\n  const zeroIdx = maxIn + 1;\n  fasGraph.getAllNodes().forEach(v => {\n    assignBucket(buckets, zeroIdx, Object.assign({\n      v: v.id\n    }, fasGraph.getNode(v.id).data));\n  });\n  return {\n    buckets,\n    zeroIdx,\n    graph: fasGraph\n  };\n};\nconst assignBucket = (buckets, zeroIdx, entry) => {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n};","map":{"version":3,"names":["Graph","RawList","List","DEFAULT_WEIGHT_FN","greedyFAS","g","weightFn","getAllNodes","length","state","buildState","results","doGreedyFAS","graph","buckets","zeroIdx","_a","map","e","getRelatedEdges","v","filter","target","w","flat","sources","sinks","entry","dequeue","removeNode","i","concat","collectPredecessors","hasNode","forEach","edge","weight","data","uEntry","getNode","source","push","in","out","undefined","assignBucket","Object","assign","id","_b","wEntry","fasGraph","maxIn","maxOut","addNode","getAllEdges","find","addEdge","updateEdgeData","Math","max","rangeMax","enqueue"],"sources":["../../src/antv-dagre/greedy-fas.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}