{"ast":null,"code":"/**\n * 并查集 Disjoint set to support quick union\n */\nvar UnionFind = /** @class */function () {\n  function UnionFind(items) {\n    this.count = items.length;\n    this.parent = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var i = items_1[_i];\n      this.parent[i] = i;\n    }\n  }\n  // find the root of the item\n  UnionFind.prototype.find = function (item) {\n    while (this.parent[item] !== item) {\n      item = this.parent[item];\n    }\n    return item;\n  };\n  UnionFind.prototype.union = function (a, b) {\n    var rootA = this.find(a);\n    var rootB = this.find(b);\n    if (rootA === rootB) return;\n    // make the element with smaller root the parent\n    if (rootA < rootB) {\n      if (this.parent[b] !== b) this.union(this.parent[b], a);\n      this.parent[b] = this.parent[a];\n    } else {\n      if (this.parent[a] !== a) this.union(this.parent[a], b);\n      this.parent[a] = this.parent[b];\n    }\n  };\n  // whether a and b are connected, i.e. a and b have the same root\n  UnionFind.prototype.connected = function (a, b) {\n    return this.find(a) === this.find(b);\n  };\n  return UnionFind;\n}();\nexport default UnionFind;","map":{"version":3,"names":["UnionFind","items","count","length","parent","_i","items_1","i","prototype","find","item","union","a","b","rootA","rootB","connected"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/structs/union-find.js"],"sourcesContent":["/**\n * 并查集 Disjoint set to support quick union\n */\nvar UnionFind = /** @class */function () {\n  function UnionFind(items) {\n    this.count = items.length;\n    this.parent = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n      var i = items_1[_i];\n      this.parent[i] = i;\n    }\n  }\n  // find the root of the item\n  UnionFind.prototype.find = function (item) {\n    while (this.parent[item] !== item) {\n      item = this.parent[item];\n    }\n    return item;\n  };\n  UnionFind.prototype.union = function (a, b) {\n    var rootA = this.find(a);\n    var rootB = this.find(b);\n    if (rootA === rootB) return;\n    // make the element with smaller root the parent\n    if (rootA < rootB) {\n      if (this.parent[b] !== b) this.union(this.parent[b], a);\n      this.parent[b] = this.parent[a];\n    } else {\n      if (this.parent[a] !== a) this.union(this.parent[a], b);\n      this.parent[a] = this.parent[b];\n    }\n  };\n  // whether a and b are connected, i.e. a and b have the same root\n  UnionFind.prototype.connected = function (a, b) {\n    return this.find(a) === this.find(b);\n  };\n  return UnionFind;\n}();\nexport default UnionFind;"],"mappings":"AAAA;AACA;AACA;AACA,IAAIA,SAAS,GAAG,aAAa,YAAY;EACvC,SAASA,SAASA,CAACC,KAAK,EAAE;IACxB,IAAI,CAACC,KAAK,GAAGD,KAAK,CAACE,MAAM;IACzB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,OAAO,GAAGL,KAAK,EAAEI,EAAE,GAAGC,OAAO,CAACH,MAAM,EAAEE,EAAE,EAAE,EAAE;MAC3D,IAAIE,CAAC,GAAGD,OAAO,CAACD,EAAE,CAAC;MACnB,IAAI,CAACD,MAAM,CAACG,CAAC,CAAC,GAAGA,CAAC;IACpB;EACF;EACA;EACAP,SAAS,CAACQ,SAAS,CAACC,IAAI,GAAG,UAAUC,IAAI,EAAE;IACzC,OAAO,IAAI,CAACN,MAAM,CAACM,IAAI,CAAC,KAAKA,IAAI,EAAE;MACjCA,IAAI,GAAG,IAAI,CAACN,MAAM,CAACM,IAAI,CAAC;IAC1B;IACA,OAAOA,IAAI;EACb,CAAC;EACDV,SAAS,CAACQ,SAAS,CAACG,KAAK,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAE;IAC1C,IAAIC,KAAK,GAAG,IAAI,CAACL,IAAI,CAACG,CAAC,CAAC;IACxB,IAAIG,KAAK,GAAG,IAAI,CAACN,IAAI,CAACI,CAAC,CAAC;IACxB,IAAIC,KAAK,KAAKC,KAAK,EAAE;IACrB;IACA,IAAID,KAAK,GAAGC,KAAK,EAAE;MACjB,IAAI,IAAI,CAACX,MAAM,CAACS,CAAC,CAAC,KAAKA,CAAC,EAAE,IAAI,CAACF,KAAK,CAAC,IAAI,CAACP,MAAM,CAACS,CAAC,CAAC,EAAED,CAAC,CAAC;MACvD,IAAI,CAACR,MAAM,CAACS,CAAC,CAAC,GAAG,IAAI,CAACT,MAAM,CAACQ,CAAC,CAAC;IACjC,CAAC,MAAM;MACL,IAAI,IAAI,CAACR,MAAM,CAACQ,CAAC,CAAC,KAAKA,CAAC,EAAE,IAAI,CAACD,KAAK,CAAC,IAAI,CAACP,MAAM,CAACQ,CAAC,CAAC,EAAEC,CAAC,CAAC;MACvD,IAAI,CAACT,MAAM,CAACQ,CAAC,CAAC,GAAG,IAAI,CAACR,MAAM,CAACS,CAAC,CAAC;IACjC;EACF,CAAC;EACD;EACAb,SAAS,CAACQ,SAAS,CAACQ,SAAS,GAAG,UAAUJ,CAAC,EAAEC,CAAC,EAAE;IAC9C,OAAO,IAAI,CAACJ,IAAI,CAACG,CAAC,CAAC,KAAK,IAAI,CAACH,IAAI,CAACI,CAAC,CAAC;EACtC,CAAC;EACD,OAAOb,SAAS;AAClB,CAAC,CAAC,CAAC;AACH,eAAeA,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}