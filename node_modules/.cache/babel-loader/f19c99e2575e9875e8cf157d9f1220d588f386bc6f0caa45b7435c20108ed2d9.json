{"ast":null,"code":"import getAdjMatrix from \"./adjacent-matrix\";\nvar floydWarshall = function floydWarshall(graphData, directed) {\n  var adjacentMatrix = getAdjMatrix(graphData, directed);\n  var dist = [];\n  var size = adjacentMatrix.length;\n  for (var i = 0; i < size; i += 1) {\n    dist[i] = [];\n    for (var j = 0; j < size; j += 1) {\n      if (i === j) {\n        dist[i][j] = 0;\n      } else if (adjacentMatrix[i][j] === 0 || !adjacentMatrix[i][j]) {\n        dist[i][j] = Infinity;\n      } else {\n        dist[i][j] = adjacentMatrix[i][j];\n      }\n    }\n  }\n  // floyd\n  for (var k = 0; k < size; k += 1) {\n    for (var i = 0; i < size; i += 1) {\n      for (var j = 0; j < size; j += 1) {\n        if (dist[i][j] > dist[i][k] + dist[k][j]) {\n          dist[i][j] = dist[i][k] + dist[k][j];\n        }\n      }\n    }\n  }\n  return dist;\n};\nexport default floydWarshall;","map":{"version":3,"names":["getAdjMatrix","floydWarshall","graphData","directed","adjacentMatrix","dist","size","length","i","j","Infinity","k"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/floydWarshall.js"],"sourcesContent":["import getAdjMatrix from \"./adjacent-matrix\";\nvar floydWarshall = function floydWarshall(graphData, directed) {\n  var adjacentMatrix = getAdjMatrix(graphData, directed);\n  var dist = [];\n  var size = adjacentMatrix.length;\n  for (var i = 0; i < size; i += 1) {\n    dist[i] = [];\n    for (var j = 0; j < size; j += 1) {\n      if (i === j) {\n        dist[i][j] = 0;\n      } else if (adjacentMatrix[i][j] === 0 || !adjacentMatrix[i][j]) {\n        dist[i][j] = Infinity;\n      } else {\n        dist[i][j] = adjacentMatrix[i][j];\n      }\n    }\n  }\n  // floyd\n  for (var k = 0; k < size; k += 1) {\n    for (var i = 0; i < size; i += 1) {\n      for (var j = 0; j < size; j += 1) {\n        if (dist[i][j] > dist[i][k] + dist[k][j]) {\n          dist[i][j] = dist[i][k] + dist[k][j];\n        }\n      }\n    }\n  }\n  return dist;\n};\nexport default floydWarshall;"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,IAAIC,aAAa,GAAG,SAASA,aAAaA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EAC9D,IAAIC,cAAc,GAAGJ,YAAY,CAACE,SAAS,EAAEC,QAAQ,CAAC;EACtD,IAAIE,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAGF,cAAc,CAACG,MAAM;EAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAEE,CAAC,IAAI,CAAC,EAAE;IAChCH,IAAI,CAACG,CAAC,CAAC,GAAG,EAAE;IACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,IAAI,CAAC,EAAE;MAChC,IAAID,CAAC,KAAKC,CAAC,EAAE;QACXJ,IAAI,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,CAAC;MAChB,CAAC,MAAM,IAAIL,cAAc,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,KAAK,CAAC,IAAI,CAACL,cAAc,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC,EAAE;QAC9DJ,IAAI,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGC,QAAQ;MACvB,CAAC,MAAM;QACLL,IAAI,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGL,cAAc,CAACI,CAAC,CAAC,CAACC,CAAC,CAAC;MACnC;IACF;EACF;EACA;EACA,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,EAAEK,CAAC,IAAI,CAAC,EAAE;IAChC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,EAAEE,CAAC,IAAI,CAAC,EAAE;MAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,EAAEG,CAAC,IAAI,CAAC,EAAE;QAChC,IAAIJ,IAAI,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGJ,IAAI,CAACG,CAAC,CAAC,CAACG,CAAC,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC,CAACF,CAAC,CAAC,EAAE;UACxCJ,IAAI,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,GAAGJ,IAAI,CAACG,CAAC,CAAC,CAACG,CAAC,CAAC,GAAGN,IAAI,CAACM,CAAC,CAAC,CAACF,CAAC,CAAC;QACtC;MACF;IACF;EACF;EACA,OAAOJ,IAAI;AACb,CAAC;AACD,eAAeJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}