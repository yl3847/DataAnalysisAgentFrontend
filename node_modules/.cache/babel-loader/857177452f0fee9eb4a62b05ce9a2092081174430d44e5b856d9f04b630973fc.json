{"ast":null,"code":"import { uniq } from '@antv/util';\nimport { DistanceType } from '../types';\nimport Vector from './vector';\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexport var getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = [];\n  // 指定了参与计算的keys时，使用指定的keys\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = uniq(keys);\n  }\n  // 获取所有值非空的key的value数组\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = uniq(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexport var oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性/特征及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  }\n  // 获取所有的属性/特征值\n  var allValue = Object.values(allKeyValueMap);\n  // 是否所有属性/特征的值都是数值型\n  var isAllNumber = allValue.every(function (value) {\n    return value.every(function (item) {\n      return typeof item === 'number';\n    });\n  });\n  // 对数据进行one-hot编码\n  dataList.forEach(function (data, index) {\n    var code = [];\n    Object.keys(allKeyValueMap).forEach(function (key) {\n      var keyValue = data[key];\n      var allKeyValue = allKeyValueMap[key];\n      var valueIndex = allKeyValue.findIndex(function (value) {\n        return keyValue === value;\n      });\n      var subCode = [];\n      // 如果属性/特征所有的值都能转成数值型，不满足分箱，则直接用值（todo: 为了收敛更快，需做归一化处理）\n      if (isAllNumber) {\n        subCode.push(keyValue);\n      } else {\n        // 进行one-hot编码\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n      }\n      code = code.concat(subCode);\n    });\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\nexport var getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = DistanceType.EuclideanDistance;\n  }\n  var distance = 0;\n  switch (distanceType) {\n    case DistanceType.EuclideanDistance:\n      distance = new Vector(item).euclideanDistance(new Vector(otherItem));\n      break;\n    default:\n      break;\n  }\n  return distance;\n};\nexport default {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};","map":{"version":3,"names":["uniq","DistanceType","Vector","getAllKeyValueMap","dataList","involvedKeys","uninvolvedKeys","keys","length","forEach","data","concat","Object","allKeyValueMap","key","value","undefined","push","includes","oneHot","oneHotCode","allValue","values","isAllNumber","every","item","index","code","keyValue","allKeyValue","valueIndex","findIndex","subCode","i","getDistance","otherItem","distanceType","graphData","EuclideanDistance","distance","euclideanDistance"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/utils/data-preprocessing.js"],"sourcesContent":["import { uniq } from '@antv/util';\nimport { DistanceType } from '../types';\nimport Vector from './vector';\n/**\n * 获取数据中所有的属性及其对应的值\n * @param dataList 数据集\n * @param involvedKeys 参与计算的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexport var getAllKeyValueMap = function getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys) {\n  var keys = [];\n  // 指定了参与计算的keys时，使用指定的keys\n  if (involvedKeys === null || involvedKeys === void 0 ? void 0 : involvedKeys.length) {\n    keys = involvedKeys;\n  } else {\n    // 未指定抽取的keys时，提取数据中所有的key\n    dataList.forEach(function (data) {\n      keys = keys.concat(Object.keys(data));\n    });\n    keys = uniq(keys);\n  }\n  // 获取所有值非空的key的value数组\n  var allKeyValueMap = {};\n  keys.forEach(function (key) {\n    var value = [];\n    dataList.forEach(function (data) {\n      if (data[key] !== undefined && data[key] !== '') {\n        value.push(data[key]);\n      }\n    });\n    if (value.length && !(uninvolvedKeys === null || uninvolvedKeys === void 0 ? void 0 : uninvolvedKeys.includes(key))) {\n      allKeyValueMap[key] = uniq(value);\n    }\n  });\n  return allKeyValueMap;\n};\n/**\n * one-hot编码：数据特征提取\n * @param dataList 数据集\n * @param involvedKeys 参与计算的的key集合\n * @param uninvolvedKeys 不参与计算的key集合\n */\nexport var oneHot = function oneHot(dataList, involvedKeys, uninvolvedKeys) {\n  // 获取数据中所有的属性/特征及其对应的值\n  var allKeyValueMap = getAllKeyValueMap(dataList, involvedKeys, uninvolvedKeys);\n  var oneHotCode = [];\n  if (!Object.keys(allKeyValueMap).length) {\n    return oneHotCode;\n  }\n  // 获取所有的属性/特征值\n  var allValue = Object.values(allKeyValueMap);\n  // 是否所有属性/特征的值都是数值型\n  var isAllNumber = allValue.every(function (value) {\n    return value.every(function (item) {\n      return typeof item === 'number';\n    });\n  });\n  // 对数据进行one-hot编码\n  dataList.forEach(function (data, index) {\n    var code = [];\n    Object.keys(allKeyValueMap).forEach(function (key) {\n      var keyValue = data[key];\n      var allKeyValue = allKeyValueMap[key];\n      var valueIndex = allKeyValue.findIndex(function (value) {\n        return keyValue === value;\n      });\n      var subCode = [];\n      // 如果属性/特征所有的值都能转成数值型，不满足分箱，则直接用值（todo: 为了收敛更快，需做归一化处理）\n      if (isAllNumber) {\n        subCode.push(keyValue);\n      } else {\n        // 进行one-hot编码\n        for (var i = 0; i < allKeyValue.length; i++) {\n          if (i === valueIndex) {\n            subCode.push(1);\n          } else {\n            subCode.push(0);\n          }\n        }\n      }\n      code = code.concat(subCode);\n    });\n    oneHotCode[index] = code;\n  });\n  return oneHotCode;\n};\n/**\n * getDistance：获取两个元素之间的距离\n * @param item\n * @param otherItem\n * @param distanceType 距离类型\n * @param graphData 图数据\n */\nexport var getDistance = function getDistance(item, otherItem, distanceType, graphData) {\n  if (distanceType === void 0) {\n    distanceType = DistanceType.EuclideanDistance;\n  }\n  var distance = 0;\n  switch (distanceType) {\n    case DistanceType.EuclideanDistance:\n      distance = new Vector(item).euclideanDistance(new Vector(otherItem));\n      break;\n    default:\n      break;\n  }\n  return distance;\n};\nexport default {\n  getAllKeyValueMap: getAllKeyValueMap,\n  oneHot: oneHot,\n  getDistance: getDistance\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}