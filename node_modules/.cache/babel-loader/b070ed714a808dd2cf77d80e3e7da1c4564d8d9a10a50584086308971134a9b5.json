{"ast":null,"code":"import React, { forwardRef, useMemo } from 'react';\nimport { BaseGraph } from '../../core/base-graph';\nimport { COMMON_OPTIONS } from '../../core/constants';\nimport { formatTreeData } from '../../core/utils/data';\nimport { mergeOptions } from '../../core/utils/options';\nimport { DEFAULT_OPTIONS, getIndentedTreeOptions } from './options';\nexport const IndentedTree = forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  const {\n    data,\n    defaultExpandLevel,\n    type = 'default',\n    nodeMinWidth,\n    nodeMaxWidth,\n    direction = 'right',\n    labelField,\n    ...restProps\n  } = props;\n  const options = useMemo(() => mergeOptions(COMMON_OPTIONS, DEFAULT_OPTIONS, {\n    data: formatTreeData(data, defaultExpandLevel)\n  }, getIndentedTreeOptions({\n    type,\n    nodeMinWidth,\n    nodeMaxWidth,\n    direction,\n    labelField\n  }), restProps), [props]);\n  return React.createElement(BaseGraph, {\n    ...options,\n    ref: ref\n  }, children);\n});","map":{"version":3,"names":["React","forwardRef","useMemo","BaseGraph","COMMON_OPTIONS","formatTreeData","mergeOptions","DEFAULT_OPTIONS","getIndentedTreeOptions","IndentedTree","children","props","ref","data","defaultExpandLevel","type","nodeMinWidth","nodeMaxWidth","direction","labelField","restProps","options","createElement"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/graphs/es/components/indented-tree/index.js"],"sourcesContent":["import React, { forwardRef, useMemo, } from 'react';\nimport { BaseGraph } from '../../core/base-graph';\nimport { COMMON_OPTIONS } from '../../core/constants';\nimport { formatTreeData } from '../../core/utils/data';\nimport { mergeOptions } from '../../core/utils/options';\nimport { DEFAULT_OPTIONS, getIndentedTreeOptions } from './options';\nexport const IndentedTree = forwardRef(({ children, ...props }, ref) => {\n    const { data, defaultExpandLevel, type = 'default', nodeMinWidth, nodeMaxWidth, direction = 'right', labelField, ...restProps } = props;\n    const options = useMemo(() => mergeOptions(COMMON_OPTIONS, DEFAULT_OPTIONS, { data: formatTreeData(data, defaultExpandLevel) }, getIndentedTreeOptions({ type, nodeMinWidth, nodeMaxWidth, direction, labelField }), restProps), [props]);\n    return (React.createElement(BaseGraph, { ...options, ref: ref }, children));\n});\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,OAAO,QAAS,OAAO;AACnD,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,WAAW;AACnE,OAAO,MAAMC,YAAY,GAAGR,UAAU,CAAC,CAAC;EAAES,QAAQ;EAAE,GAAGC;AAAM,CAAC,EAAEC,GAAG,KAAK;EACpE,MAAM;IAAEC,IAAI;IAAEC,kBAAkB;IAAEC,IAAI,GAAG,SAAS;IAAEC,YAAY;IAAEC,YAAY;IAAEC,SAAS,GAAG,OAAO;IAAEC,UAAU;IAAE,GAAGC;EAAU,CAAC,GAAGT,KAAK;EACvI,MAAMU,OAAO,GAAGnB,OAAO,CAAC,MAAMI,YAAY,CAACF,cAAc,EAAEG,eAAe,EAAE;IAAEM,IAAI,EAAER,cAAc,CAACQ,IAAI,EAAEC,kBAAkB;EAAE,CAAC,EAAEN,sBAAsB,CAAC;IAAEO,IAAI;IAAEC,YAAY;IAAEC,YAAY;IAAEC,SAAS;IAAEC;EAAW,CAAC,CAAC,EAAEC,SAAS,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EACzO,OAAQX,KAAK,CAACsB,aAAa,CAACnB,SAAS,EAAE;IAAE,GAAGkB,OAAO;IAAET,GAAG,EAAEA;EAAI,CAAC,EAAEF,QAAQ,CAAC;AAC9E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}