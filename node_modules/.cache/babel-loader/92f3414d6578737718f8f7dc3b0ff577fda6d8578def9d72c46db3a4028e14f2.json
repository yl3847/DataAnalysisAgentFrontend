{"ast":null,"code":"import axios from'axios';const LAMBDA_URL=process.env.REACT_APP_LAMBDA_URL;const AWS_REGION=process.env.REACT_APP_AWS_REGION||'us-east-1';// Lambda function invocation\nexport const sendToLambda=async payload=>{if(!LAMBDA_URL){throw new Error('Lambda URL is not configured');}try{const response=await axios.post(LAMBDA_URL,payload,{headers:{'Content-Type':'application/json',// Add CORS headers if needed\n'Access-Control-Allow-Origin':'*'},timeout:25000// 25 seconds (Lambda timeout is usually 30s)\n});// Parse Lambda response\nif(response.data){// Handle Lambda proxy integration response\nif(response.data.statusCode&&response.data.body){const body=typeof response.data.body==='string'?JSON.parse(response.data.body):response.data.body;if(response.data.statusCode!==200){throw new Error(body.error||'Lambda function error');}return body;}// Direct Lambda response\nreturn response.data;}throw new Error('Invalid Lambda response');}catch(error){console.error('Lambda invocation error:',error);// Format error message\nif(error.response){var _error$response$data;throw new Error(((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Lambda function error');}else if(error.request){throw new Error('Network error: Unable to reach Lambda function');}else{throw new Error(error.message||'Unknown error occurred');}}};// Lambda function for specific operations\nexport const lambdaOperations={// Query database\nasync queryDatabase(sqlQuery){return sendToLambda({operation:'query',query:sqlQuery});},// Generate chart\nasync generateChart(data,chartType,config){return sendToLambda({operation:'generateChart',data,chartType,config});},// Process natural language query\nasync processNLQuery(query){return sendToLambda({operation:'nlQuery',query});},// Get schema information\nasync getSchema(){return sendToLambda({operation:'getSchema'});},// Analyze data\nasync analyzeData(data,analysisType){return sendToLambda({operation:'analyze',data,analysisType});}};export default{sendToLambda,...lambdaOperations};","map":{"version":3,"names":["axios","LAMBDA_URL","process","env","REACT_APP_LAMBDA_URL","AWS_REGION","REACT_APP_AWS_REGION","sendToLambda","payload","Error","response","post","headers","timeout","data","statusCode","body","JSON","parse","error","console","_error$response$data","request","message","lambdaOperations","queryDatabase","sqlQuery","operation","query","generateChart","chartType","config","processNLQuery","getSchema","analyzeData","analysisType"],"sources":["/Users/yizelu/Desktop/mcp/frontend/src/services/lambdaClient.js"],"sourcesContent":["import axios from 'axios';\n\nconst LAMBDA_URL = process.env.REACT_APP_LAMBDA_URL;\nconst AWS_REGION = process.env.REACT_APP_AWS_REGION || 'us-east-1';\n\n// Lambda function invocation\nexport const sendToLambda = async (payload) => {\n  if (!LAMBDA_URL) {\n    throw new Error('Lambda URL is not configured');\n  }\n\n  try {\n    const response = await axios.post(LAMBDA_URL, payload, {\n      headers: {\n        'Content-Type': 'application/json',\n        // Add CORS headers if needed\n        'Access-Control-Allow-Origin': '*',\n      },\n      timeout: 25000, // 25 seconds (Lambda timeout is usually 30s)\n    });\n\n    // Parse Lambda response\n    if (response.data) {\n      // Handle Lambda proxy integration response\n      if (response.data.statusCode && response.data.body) {\n        const body = typeof response.data.body === 'string' \n          ? JSON.parse(response.data.body) \n          : response.data.body;\n        \n        if (response.data.statusCode !== 200) {\n          throw new Error(body.error || 'Lambda function error');\n        }\n        \n        return body;\n      }\n      \n      // Direct Lambda response\n      return response.data;\n    }\n\n    throw new Error('Invalid Lambda response');\n  } catch (error) {\n    console.error('Lambda invocation error:', error);\n    \n    // Format error message\n    if (error.response) {\n      throw new Error(error.response.data?.error || 'Lambda function error');\n    } else if (error.request) {\n      throw new Error('Network error: Unable to reach Lambda function');\n    } else {\n      throw new Error(error.message || 'Unknown error occurred');\n    }\n  }\n};\n\n// Lambda function for specific operations\nexport const lambdaOperations = {\n  // Query database\n  async queryDatabase(sqlQuery) {\n    return sendToLambda({\n      operation: 'query',\n      query: sqlQuery,\n    });\n  },\n\n  // Generate chart\n  async generateChart(data, chartType, config) {\n    return sendToLambda({\n      operation: 'generateChart',\n      data,\n      chartType,\n      config,\n    });\n  },\n\n  // Process natural language query\n  async processNLQuery(query) {\n    return sendToLambda({\n      operation: 'nlQuery',\n      query,\n    });\n  },\n\n  // Get schema information\n  async getSchema() {\n    return sendToLambda({\n      operation: 'getSchema',\n    });\n  },\n\n  // Analyze data\n  async analyzeData(data, analysisType) {\n    return sendToLambda({\n      operation: 'analyze',\n      data,\n      analysisType,\n    });\n  },\n};\n\nexport default {\n  sendToLambda,\n  ...lambdaOperations,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}