{"ast":null,"code":"import { isBetween } from './math';\n/**\n * <zh/> 解析原点（锚点）\n *\n * <en/> Parse the origin/anchor\n * @param anchor - <zh/> 原点 | <en/> Anchor\n * @returns <zh/> 标准原点 | <en/> Standard anchor\n */\nexport function parseAnchor(anchor) {\n  const parsedAnchor = typeof anchor === 'string' ? anchor.split(' ').map(v => parseFloat(v)) : anchor.slice(0, 2);\n  if (!isBetween(parsedAnchor[0], 0, 1) || !isBetween(parsedAnchor[1], 0, 1)) {\n    return [0.5, 0.5];\n  }\n  return parsedAnchor;\n}","map":{"version":3,"names":["isBetween","parseAnchor","anchor","parsedAnchor","split","map","v","parseFloat","slice"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/anchor.ts"],"sourcesContent":["import type { Anchor, STDAnchor } from '../types/anchor';\nimport { isBetween } from './math';\n\n/**\n * <zh/> 解析原点（锚点）\n *\n * <en/> Parse the origin/anchor\n * @param anchor - <zh/> 原点 | <en/> Anchor\n * @returns <zh/> 标准原点 | <en/> Standard anchor\n */\nexport function parseAnchor(anchor: Anchor): STDAnchor {\n  const parsedAnchor = (\n    typeof anchor === 'string' ? anchor.split(' ').map((v) => parseFloat(v)) : anchor.slice(0, 2)\n  ) as [number, number];\n  if (!isBetween(parsedAnchor[0], 0, 1) || !isBetween(parsedAnchor[1], 0, 1)) {\n    return [0.5, 0.5];\n  }\n  return parsedAnchor;\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,QAAQ;AAElC;;;;;;;AAOA,OAAM,SAAUC,WAAWA,CAACC,MAAc;EACxC,MAAMC,YAAY,GAChB,OAAOD,MAAM,KAAK,QAAQ,GAAGA,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKC,UAAU,CAACD,CAAC,CAAC,CAAC,GAAGJ,MAAM,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CACzE;EACrB,IAAI,CAACR,SAAS,CAACG,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAACH,SAAS,CAACG,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IAC1E,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;EACnB;EACA,OAAOA,YAAY;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}