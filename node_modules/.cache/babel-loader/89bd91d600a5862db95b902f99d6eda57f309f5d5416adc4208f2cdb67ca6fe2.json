{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/spec/composition.ts"],"sourcesContent":["import { Theme } from './theme';\nimport { Coordinate } from './coordinate';\nimport { Interaction } from './interaction';\nimport { Transform } from './transform';\nimport { Scale } from './scale';\nimport { Data } from './data';\nimport { LabelTransform } from './labelTransform';\nimport { Closeable, Literal2Object, Padding } from './utils';\nimport {\n  AxisComponent,\n  LegendComponent,\n  ScrollbarComponent,\n  SliderComponent,\n  TitleComponent,\n  TooltipComponent,\n} from './component';\nimport { AtheisticChanelTypes, Mark, PositionChannelTypes } from './mark';\n\nexport type Composition =\n  | ViewComposition\n  | GeoViewComposition\n  | GeoPathComposition\n  | SpaceLayerComposition\n  | SpaceFlexComposition\n  | RepeatMatrixComposition\n  | FacetRectComposition\n  | FacetCircleComposition\n  | TimingKeyframeComposition;\n\nexport type CompositionTypes =\n  | 'view'\n  | 'getView'\n  | 'geoPath'\n  | 'spaceLayer'\n  | 'spaceFlex'\n  | 'facetRect'\n  | 'facetCircle'\n  | 'repeatMatrix'\n  | 'timingKeyframe';\n\nexport type ViewComposition = {\n  type?: 'view';\n  x?: number;\n  y?: number;\n  z?: number;\n  width?: number;\n  height?: number;\n  depth?: number;\n  data?: Data;\n  key?: string;\n  class?: string;\n  padding?: Padding;\n  paddingLeft?: Padding;\n  paddingRight?: Padding;\n  paddingTop?: Padding;\n  paddingBottom?: Padding;\n  margin?: number;\n  marginLeft?: number;\n  marginBottom?: number;\n  marginTop?: number;\n  marginRight?: number;\n  inset?: number;\n  insetLeft?: number;\n  insetTop?: number;\n  insetBottom?: number;\n  insetRight?: number;\n  coordinate?: Coordinate;\n  interaction?: Literal2Object<Interaction> & Record<string, any>;\n  transform?: Transform[];\n  theme?: Theme;\n  children?: (Mark | AxisComponent | LegendComponent)[];\n  scale?: Record<string, Scale>;\n  frame?: boolean;\n  labelTransform?: LabelTransform[];\n  axis?: Closeable<\n    Partial<Record<PositionChannelTypes, Closeable<AxisComponent>>>\n  >;\n  legend?: Closeable<\n    Partial<Record<AtheisticChanelTypes, Closeable<LegendComponent>>>\n  >;\n  tooltip?: TooltipComponent;\n  slider?: Closeable<\n    Partial<Record<PositionChannelTypes, Closeable<SliderComponent>>>\n  >;\n  scrollbar?: Closeable<\n    Partial<Record<PositionChannelTypes, Closeable<ScrollbarComponent>>>\n  >;\n  title?: string | TitleComponent;\n  // @todo\n  style?: Record<string, any>;\n  clip?: boolean;\n};\n\nexport type GeoViewComposition = Omit<ViewComposition, 'type'> & {\n  type?: 'geoView';\n  // @todo\n  coordinate?: Record<string, any>;\n  [key: string]: any; // @todo\n};\n\nexport type GeoPathComposition = Omit<ViewComposition, 'type'> & {\n  type?: 'geoPath';\n  // @todo\n  coordinate?: Record<string, any>;\n  [key: string]: any; // @todo\n};\n\nexport type SpaceLayerComposition = {\n  type?: 'spaceLayer';\n  key?: string;\n  data?: any;\n  children?: Node[];\n  [key: string]: any; // @todo\n};\n\nexport type SpaceFlexComposition = {\n  type?: 'spaceFlex';\n  key?: string;\n  data?: Data;\n  direction?: 'col' | 'row';\n  ratio?: number[];\n  padding?: Padding;\n  children?: Node[];\n  [key: string]: any; // @todo\n};\n\nexport type FacetContext = {\n  columnField?: string | number;\n  columnIndex?: number;\n  columnValue?: string | number;\n  columnValuesLength?: number;\n  rowField?: string | number;\n  rowIndex?: number;\n  rowValue?: string | number;\n  rowValuesLength?: number;\n};\n\nexport type FacetRectComposition = {\n  type?: 'facetRect';\n  transform?: Transform;\n  data?: Data;\n  padding?: Padding;\n  paddingLeft?: Padding;\n  paddingRight?: Padding;\n  paddingTop?: Padding;\n  paddingBottom?: Padding;\n  margin?: number;\n  marginLeft?: number;\n  marginBottom?: number;\n  marginTop?: number;\n  marginRight?: number;\n  key?: string;\n  title?: string | TitleComponent;\n  encode?: {\n    x?: string;\n    y?: string;\n  };\n  scale?: {\n    x?: Scale;\n    y?: Scale;\n    color?: Scale;\n  };\n  shareData?: boolean;\n  shareSize?: boolean;\n  children?: Node[] | ((facet: FacetContext) => Node);\n  // @todo\n  axis?: Record<string, any> | boolean;\n  // @todo\n  legend?: Record<string, any> | boolean;\n  [key: string]: any; // @todo\n};\n\nexport type RepeatMatrixComposition = {\n  type?: 'repeatMatrix';\n  padding?: Padding;\n  paddingLeft?: Padding;\n  paddingRight?: Padding;\n  paddingTop?: Padding;\n  paddingBottom?: Padding;\n  margin?: number;\n  marginLeft?: number;\n  marginBottom?: number;\n  marginTop?: number;\n  marginRight?: number;\n  transform?: Transform;\n  title?: string | TitleComponent;\n  data?: Data;\n  key?: string;\n  encode?: {\n    x?: string[] | string;\n    y?: string[] | string;\n    position?: string[];\n  };\n  scale?: {\n    x?: Scale;\n    y?: Scale;\n    color?: Scale;\n  };\n  // @todo\n  axis?: Record<string, any> | boolean;\n  // @todo\n  legend?: Record<string, any> | boolean;\n  children?: Node[] | ((facet: FacetContext) => Node);\n  [key: string]: any; // @todo\n};\n\nexport type FacetCircleComposition = {\n  type?: 'facetCircle';\n  padding?: Padding;\n  paddingLeft?: Padding;\n  paddingRight?: Padding;\n  paddingTop?: Padding;\n  paddingBottom?: Padding;\n  margin?: number;\n  marginLeft?: number;\n  marginBottom?: number;\n  marginTop?: number;\n  marginRight?: number;\n  transform?: Transform;\n  title?: string | TitleComponent;\n  data?: Data;\n  key?: string;\n  encode?: {\n    position?: string;\n  };\n  scale?: {\n    x?: Scale;\n    y?: Scale;\n    color?: Scale;\n  };\n  children?: Node[] | ((facet: FacetContext) => Node);\n  // @todo\n  axis?: Record<string, any> | boolean;\n  // @todo\n  legend?: Record<string, any> | boolean;\n  [key: string]: any; // @todo\n};\n\nexport type TimingKeyframeComposition = {\n  type?: 'timingKeyframe';\n  duration?: number;\n  key?: string;\n  easing?: string;\n  iterationCount?: 'infinite' | number;\n  direction?: 'normal' | 'reverse' | 'alternate' | 'reverse-alternate';\n  children?: Node[];\n  [key: string]: any; // @todo\n};\n\ntype Node = Mark | Composition;\n"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}