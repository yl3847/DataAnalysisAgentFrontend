{"ast":null,"code":"import { Base } from './base';\nexport const defaultUnknown = Symbol('defaultUnknown');\n/**\n * 更新 indexMap\n *\n * @param arr 初始的数组\n * @param target 目标 map\n * @returns {Map<string, any>} 生成的 indexMap\n */\nfunction updateIndexMap(target, arr, key) {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (!target.has(arr[i])) {\n      target.set(key(arr[i]), i);\n    }\n  }\n}\n/**\n * 基于 indexMap 进行映射\n *\n * @param options 相关选项\n * @see MapBetweenArrOptions\n * @return {any} 映射结果\n */\nfunction mapBetweenArrByMapIndex(options) {\n  const {\n    value,\n    from,\n    to,\n    mapper,\n    notFoundReturn\n  } = options;\n  let mappedIndex = mapper.get(value);\n  // index 不存在时，\n  // 如果用户显式设置了 unknown 的值，那么就返回 unknown 的值\n  // 否者我们将 value 添加到原数组, 并更新 Map\n  if (mappedIndex === undefined) {\n    if (notFoundReturn !== defaultUnknown) {\n      return notFoundReturn;\n    }\n    mappedIndex = from.push(value) - 1;\n    mapper.set(value, mappedIndex);\n  }\n  return to[mappedIndex % to.length];\n}\nfunction createKey(d) {\n  if (d instanceof Date) return d => `${d}`;\n  if (typeof d === 'object') return d => JSON.stringify(d);\n  return d => d;\n}\n/**\n * Ordinal 比例尺\n *\n * 该比例尺具有离散的域和范围，例如将一组命名类别映射到一组颜色\n *\n * - 使用 for 替代一些基于 map 的遍历，for 循环性能远高于 forEach, map\n * - 阻止无意义的更新，只有到用户调用 map、invert 或者 update 之后才会进行相应的更新\n * - 两个 map 只初始化一次，在之后的更新中复用他们，这样我们避免了重复 new Map 带来的性能问题\n *   在大量调用 update 函数场景下，较 d3-scale 效率有质的提高\n */\nexport class Ordinal extends Base {\n  // 覆盖默认配置\n  getDefaultOptions() {\n    return {\n      domain: [],\n      range: [],\n      unknown: defaultUnknown\n    };\n  }\n  // 显示指定 options 的类型为 OrdinalOptions，从而推断出 O 的类型\n  constructor(options) {\n    super(options);\n  }\n  map(x) {\n    if (this.domainIndexMap.size === 0) {\n      updateIndexMap(this.domainIndexMap, this.getDomain(), this.domainKey);\n    }\n    return mapBetweenArrByMapIndex({\n      value: this.domainKey(x),\n      mapper: this.domainIndexMap,\n      from: this.getDomain(),\n      to: this.getRange(),\n      notFoundReturn: this.options.unknown\n    });\n  }\n  invert(y) {\n    if (this.rangeIndexMap.size === 0) {\n      updateIndexMap(this.rangeIndexMap, this.getRange(), this.rangeKey);\n    }\n    return mapBetweenArrByMapIndex({\n      value: this.rangeKey(y),\n      mapper: this.rangeIndexMap,\n      from: this.getRange(),\n      to: this.getDomain(),\n      notFoundReturn: this.options.unknown\n    });\n  }\n  // 因为 ordinal 比例尺更新内部状态的开销较大，所以按需更新\n  rescale(options) {\n    const [d] = this.options.domain;\n    const [r] = this.options.range;\n    this.domainKey = createKey(d);\n    this.rangeKey = createKey(r);\n    // 如果 rangeIndexMap 没有初始化，说明是在初始化阶段\n    if (!this.rangeIndexMap) {\n      this.rangeIndexMap = new Map();\n      this.domainIndexMap = new Map();\n      return;\n    }\n    // 否者是在更新阶段\n    if (!options || options.range) {\n      this.rangeIndexMap.clear();\n    }\n    if (!options || options.domain || options.compare) {\n      this.domainIndexMap.clear();\n      this.sortedDomain = undefined;\n    }\n  }\n  clone() {\n    return new Ordinal(this.options);\n  }\n  getRange() {\n    return this.options.range;\n  }\n  getDomain() {\n    // 如果设置了比较器，就排序\n    if (this.sortedDomain) return this.sortedDomain;\n    const {\n      domain,\n      compare\n    } = this.options;\n    this.sortedDomain = compare ? [...domain].sort(compare) : domain;\n    return this.sortedDomain;\n  }\n}","map":{"version":3,"names":["Base","defaultUnknown","Symbol","updateIndexMap","target","arr","key","i","length","has","set","mapBetweenArrByMapIndex","options","value","from","to","mapper","notFoundReturn","mappedIndex","get","undefined","push","createKey","d","Date","JSON","stringify","Ordinal","getDefaultOptions","domain","range","unknown","constructor","map","x","domainIndexMap","size","getDomain","domainKey","getRange","invert","y","rangeIndexMap","rangeKey","rescale","r","Map","clear","compare","sortedDomain","clone","sort"],"sources":["scales/ordinal.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}