{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { column, columnOf } from './utils/helper';\n/**\n * Assume color channel is series channel.\n */\nexport const MaybeSeries = () => {\n  return (I, mark) => {\n    const {\n      encode\n    } = mark;\n    const {\n      series,\n      color\n    } = encode;\n    if (series !== undefined || color === undefined) return [I, mark];\n    const [C, fc] = columnOf(encode, 'color');\n    return [I, deepMix({}, mark, {\n      encode: {\n        series: column(C, fc)\n      }\n    })];\n  };\n};\nMaybeSeries.props = {};","map":{"version":3,"names":["deepMix","column","columnOf","MaybeSeries","I","mark","encode","series","color","undefined","C","fc","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/maybeSeries.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { TransformComponent as TC } from '../runtime';\nimport { column, columnOf } from './utils/helper';\n\nexport type MaybeSeriesOptions = Record<string, never>;\n\n/**\n * Assume color channel is series channel.\n */\nexport const MaybeSeries: TC<MaybeSeriesOptions> = () => {\n  return (I, mark) => {\n    const { encode } = mark;\n    const { series, color } = encode;\n    if (series !== undefined || color === undefined) return [I, mark];\n    const [C, fc] = columnOf(encode, 'color');\n    return [I, deepMix({}, mark, { encode: { series: column(C, fc) } })];\n  };\n};\n\nMaybeSeries.props = {};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,gBAAgB;AAIjD;;;AAGA,OAAO,MAAMC,WAAW,GAA2BA,CAAA,KAAK;EACtD,OAAO,CAACC,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC;IAAM,CAAE,GAAGD,IAAI;IACvB,MAAM;MAAEE,MAAM;MAAEC;IAAK,CAAE,GAAGF,MAAM;IAChC,IAAIC,MAAM,KAAKE,SAAS,IAAID,KAAK,KAAKC,SAAS,EAAE,OAAO,CAACL,CAAC,EAAEC,IAAI,CAAC;IACjE,MAAM,CAACK,CAAC,EAAEC,EAAE,CAAC,GAAGT,QAAQ,CAACI,MAAM,EAAE,OAAO,CAAC;IACzC,OAAO,CAACF,CAAC,EAAEJ,OAAO,CAAC,EAAE,EAAEK,IAAI,EAAE;MAAEC,MAAM,EAAE;QAAEC,MAAM,EAAEN,MAAM,CAACS,CAAC,EAAEC,EAAE;MAAC;IAAE,CAAE,CAAC,CAAC;EACtE,CAAC;AACH,CAAC;AAEDR,WAAW,CAACS,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}