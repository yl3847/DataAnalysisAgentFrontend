{"ast":null,"code":"import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\n/**\n * 将数据分组成 map\n * @param data\n * @param condition\n */\nexport default function groupToMap(data, condition) {\n  if (!condition) {\n    return {\n      0: data\n    };\n  }\n  if (!isFunction(condition)) {\n    // 如果是字符串，则按照 a*b 风格成数组\n    var paramscondition_1 = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n    condition = function (row) {\n      var unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n      // 根据字段列表的值，拼接成 key\n      for (var i = 0, l = paramscondition_1.length; i < l; i++) {\n        unique += row[paramscondition_1[i]] && row[paramscondition_1[i]].toString();\n      }\n      return unique;\n    };\n  }\n  return groupBy(data, condition);\n}","map":{"version":3,"names":["isArray","isFunction","groupBy","groupToMap","data","condition","paramscondition_1","replace","split","row","unique","i","l","length","toString"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/node_modules/@antv/util/src/group-to-map.ts"],"sourcesContent":["import isArray from './is-array';\nimport isFunction from './is-function';\nimport groupBy from './group-by';\n\n/**\n * 将数据分组成 map\n * @param data \n * @param condition \n */\nexport default function groupToMap(data: any, condition: string[] | string | ((row: any) => string)) {\n  if (!condition) {\n    return {\n      0: data,\n    };\n  }\n  if (!isFunction(condition)) {\n    // 如果是字符串，则按照 a*b 风格成数组\n    const paramscondition = isArray(condition) ? condition : condition.replace(/\\s+/g, '').split('*');\n    condition = function (row) {\n      let unique = '_'; // 避免出现数字作为Key的情况，会进行按照数字的排序\n      \n      // 根据字段列表的值，拼接成 key\n      for (let i = 0, l = paramscondition.length; i < l; i++) {\n        unique += row[paramscondition[i]] && row[paramscondition[i]].toString();\n      }\n      return unique;\n    };\n  }\n  return groupBy(data, condition);\n}\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,YAAY;AAChC,OAAOC,UAAU,MAAM,eAAe;AACtC,OAAOC,OAAO,MAAM,YAAY;AAEhC;;;;;AAKA,eAAc,SAAUC,UAAUA,CAACC,IAAS,EAAEC,SAAqD;EACjG,IAAI,CAACA,SAAS,EAAE;IACd,OAAO;MACL,CAAC,EAAED;KACJ;;EAEH,IAAI,CAACH,UAAU,CAACI,SAAS,CAAC,EAAE;IAC1B;IACA,IAAMC,iBAAe,GAAGN,OAAO,CAACK,SAAS,CAAC,GAAGA,SAAS,GAAGA,SAAS,CAACE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;IACjGH,SAAS,GAAG,SAAAA,CAAUI,GAAG;MACvB,IAAIC,MAAM,GAAG,GAAG,CAAC,CAAC;MAElB;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGN,iBAAe,CAACO,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QACtDD,MAAM,IAAID,GAAG,CAACH,iBAAe,CAACK,CAAC,CAAC,CAAC,IAAIF,GAAG,CAACH,iBAAe,CAACK,CAAC,CAAC,CAAC,CAACG,QAAQ,EAAE;;MAEzE,OAAOJ,MAAM;IACf,CAAC;;EAEH,OAAOR,OAAO,CAACE,IAAI,EAAEC,SAAS,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}