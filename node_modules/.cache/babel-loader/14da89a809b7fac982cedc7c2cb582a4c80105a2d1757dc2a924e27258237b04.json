{"ast":null,"code":"import { bisectLeft, sort } from '@antv/vendor/d3-array';\nfunction constrain(x, lo, hi) {\n  return Math.min(hi, Math.max(lo, x));\n}\nexport function isOrdinalScale(scale) {\n  return !!scale.getBandWidth;\n}\nexport function invert(scale, x, start) {\n  if (!isOrdinalScale(scale)) return scale.invert(x);\n  const {\n    adjustedRange\n  } = scale;\n  const {\n    domain\n  } = scale.getOptions();\n  const offset = start ? -1 : 0;\n  const step = scale.getStep();\n  const range = start ? adjustedRange : adjustedRange.map(d => d + step);\n  // R[i0 - 1] < x <= R[i0]\n  const i0 = bisectLeft(range, x);\n  const i1 = constrain(i0 + offset, 0, domain.length - 1);\n  return domain[i1];\n}\nexport function domainOf(scale, values, ratioX) {\n  if (!values) return scale.getOptions().domain;\n  if (!isOrdinalScale(scale)) {\n    const sortedDomain = sort(values);\n    if (!ratioX) return sortedDomain;\n    const [d] = sortedDomain;\n    const {\n      range\n    } = scale.getOptions();\n    const [r0, r1] = range;\n    const v = r0 > r1 ? -1 : 1;\n    const d1 = scale.invert(scale.map(d) + v * ratioX);\n    return [d, d1];\n  }\n  const {\n    domain\n  } = scale.getOptions();\n  const v1 = values[0];\n  const start = domain.indexOf(v1);\n  if (ratioX) {\n    const end = start + Math.round(domain.length * ratioX);\n    return domain.slice(start, end);\n  }\n  const v2 = values[values.length - 1];\n  const end = domain.indexOf(v2);\n  return domain.slice(start, end + 1);\n}\nexport function selectionOf(x, y, x1, y1, scale, coordinate) {\n  const {\n    x: scaleX,\n    y: scaleY\n  } = scale;\n  const abstractDomain = (point, start) => {\n    const [x, y] = coordinate.invert(point);\n    return [invert(scaleX, x, start), invert(scaleY, y, start)];\n  };\n  const p0 = abstractDomain([x, y], true);\n  const p1 = abstractDomain([x1, y1], false);\n  const domainX = domainOf(scaleX, [p0[0], p1[0]]);\n  const domainY = domainOf(scaleY, [p0[1], p1[1]]);\n  return [domainX, domainY];\n}\nexport function abstractOf(domain, scale) {\n  const [d0, d1] = domain;\n  const maybeStep = scale => scale.getStep ? scale.getStep() : 0;\n  return [scale.map(d0), scale.map(d1) + maybeStep(scale)];\n}\nexport function pixelsOf(selection, scale, coordinate) {\n  const {\n    x: scaleX,\n    y: scaleY\n  } = scale;\n  const [X, Y] = selection;\n  const AX = abstractOf(X, scaleX);\n  const AY = abstractOf(Y, scaleY);\n  const p0 = [AX[0], AY[0]];\n  const p1 = [AX[1], AY[1]];\n  const [x, y] = coordinate.map(p0);\n  const [x1, y1] = coordinate.map(p1);\n  return [x, y, x1, y1];\n}","map":{"version":3,"names":["bisectLeft","sort","constrain","x","lo","hi","Math","min","max","isOrdinalScale","scale","getBandWidth","invert","start","adjustedRange","domain","getOptions","offset","step","getStep","range","map","d","i0","i1","length","domainOf","values","ratioX","sortedDomain","r0","r1","v","d1","v1","indexOf","end","round","slice","v2","selectionOf","y","x1","y1","coordinate","scaleX","scaleY","abstractDomain","point","p0","p1","domainX","domainY","abstractOf","d0","maybeStep","pixelsOf","selection","X","Y","AX","AY"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/utils/scale.ts"],"sourcesContent":["import { bisectLeft, sort } from '@antv/vendor/d3-array';\n\nfunction constrain(x, lo, hi) {\n  return Math.min(hi, Math.max(lo, x));\n}\n\nexport function isOrdinalScale(scale) {\n  return !!scale.getBandWidth;\n}\n\nexport function invert(scale, x, start) {\n  if (!isOrdinalScale(scale)) return scale.invert(x);\n  const { adjustedRange } = scale;\n  const { domain } = scale.getOptions();\n  const offset = start ? -1 : 0;\n  const step = scale.getStep();\n  const range = start ? adjustedRange : adjustedRange.map((d) => d + step);\n  // R[i0 - 1] < x <= R[i0]\n  const i0 = bisectLeft(range, x);\n  const i1 = constrain(i0 + offset, 0, domain.length - 1);\n  return domain[i1];\n}\n\nexport function domainOf(scale, values, ratioX?) {\n  if (!values) return scale.getOptions().domain;\n  if (!isOrdinalScale(scale)) {\n    const sortedDomain = sort(values);\n    if (!ratioX) return sortedDomain;\n    const [d] = sortedDomain;\n    const { range } = scale.getOptions();\n    const [r0, r1] = range;\n    const v = r0 > r1 ? -1 : 1;\n    const d1 = scale.invert(scale.map(d) + v * ratioX);\n    return [d, d1];\n  }\n  const { domain } = scale.getOptions();\n  const v1 = values[0];\n  const start = domain.indexOf(v1);\n  if (ratioX) {\n    const end = start + Math.round(domain.length * ratioX);\n    return domain.slice(start, end);\n  }\n  const v2 = values[values.length - 1];\n  const end = domain.indexOf(v2);\n  return domain.slice(start, end + 1);\n}\n\nexport function selectionOf(x, y, x1, y1, scale, coordinate) {\n  const { x: scaleX, y: scaleY } = scale;\n  const abstractDomain = (point, start) => {\n    const [x, y] = coordinate.invert(point);\n    return [invert(scaleX, x, start), invert(scaleY, y, start)];\n  };\n  const p0 = abstractDomain([x, y], true);\n  const p1 = abstractDomain([x1, y1], false);\n  const domainX = domainOf(scaleX, [p0[0], p1[0]]);\n  const domainY = domainOf(scaleY, [p0[1], p1[1]]);\n  return [domainX, domainY];\n}\n\nexport function abstractOf(domain, scale) {\n  const [d0, d1] = domain;\n  const maybeStep = (scale) => (scale.getStep ? scale.getStep() : 0);\n  return [scale.map(d0), scale.map(d1) + maybeStep(scale)];\n}\n\nexport function pixelsOf(selection, scale, coordinate) {\n  const { x: scaleX, y: scaleY } = scale;\n  const [X, Y] = selection;\n  const AX = abstractOf(X, scaleX);\n  const AY = abstractOf(Y, scaleY);\n  const p0 = [AX[0], AY[0]];\n  const p1 = [AX[1], AY[1]];\n  const [x, y] = coordinate.map(p0);\n  const [x1, y1] = coordinate.map(p1);\n  return [x, y, x1, y1];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}