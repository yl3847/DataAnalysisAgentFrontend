{"ast":null,"code":"export function extend(Runtime, library) {\n  class Chart extends Runtime {\n    constructor(options) {\n      super(Object.assign(Object.assign({}, options), {\n        lib: library\n      }));\n    }\n  }\n  return Chart;\n}","map":{"version":3,"names":["extend","Runtime","library","Chart","constructor","options","Object","assign","lib"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/api/extend.ts"],"sourcesContent":["import { G2Spec } from '../spec';\nimport { G2Library } from '../runtime';\nimport { Runtime, RuntimeOptions } from './runtime';\nimport { MarkOf, CompositionOf as Of } from './types';\nimport { MarkNode } from './mark';\nimport { CompositionNode } from './composition';\n\ntype BuiltinComposition = {\n  'composition.mark': any;\n  'composition.view': any;\n};\n\nexport type CompositionOf<Library> = Of<\n  Library,\n  (composite?) => CompositionAPI<Library>\n>;\n\nexport type CompositionAPI<Library> = CompositionNode<\n  CompositionOf<Library> & MarkOf<Library, (composite?) => MarkNode>\n> &\n  MarkOf<Library, (composite?) => MarkNode> &\n  CompositionOf<Library>;\n\nexport type API<Spec, Library> = Runtime<Spec> &\n  MarkOf<Library, (composite?) => MarkNode> &\n  CompositionOf<Library & BuiltinComposition>;\n\nexport function extend<\n  Spec extends G2Spec = G2Spec,\n  Library extends G2Library = G2Library,\n>(\n  Runtime: new (options: RuntimeOptions) => Runtime<Spec>,\n  library: Library,\n): new (options?: RuntimeOptions) => API<Spec, Library> {\n  class Chart extends Runtime {\n    constructor(options: Omit<RuntimeOptions, 'lib'>) {\n      super({ ...options, lib: library });\n    }\n  }\n  return Chart as any;\n}\n"],"mappings":"AA2BA,OAAM,SAAUA,MAAMA,CAIpBC,OAAuD,EACvDC,OAAgB;EAEhB,MAAMC,KAAM,SAAQF,OAAO;IACzBG,YAAYC,OAAoC;MAC9C,KAAK,CAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMF,OAAO;QAAEG,GAAG,EAAEN;MAAO,GAAG;IACrC;;EAEF,OAAOC,KAAY;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}