{"ast":null,"code":"import { MaybeIdentityX, MaybeIdentityY } from '../transform';\nimport { LinkArc, LinkShape, LinkSmooth, LinkVHV } from '../shape';\nimport { baseGeometryChannels, basePostInference, basePreInference, createBandOffset, tooltip2d } from './utils';\nconst shape = {\n  link: LinkShape,\n  arc: LinkArc,\n  smooth: LinkSmooth,\n  vhv: LinkVHV\n};\n/**\n * Connect `start` to `end` with single line.\n */\nexport const Link = options => {\n  return (index, scale, value, coordinate) => {\n    const {\n      x: X,\n      y: Y,\n      x1: X1 = X,\n      y1: Y1 = Y\n    } = value;\n    const offset = createBandOffset(scale, value, options);\n    const P = index.map(i => [coordinate.map(offset([+X[i], +Y[i]], i)), coordinate.map(offset([+X1[i], +Y1[i]], i))]);\n    return [index, P];\n  };\n};\nLink.props = {\n  defaultShape: 'link',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [...baseGeometryChannels({\n    shapes: Object.keys(shape)\n  }), {\n    name: 'x',\n    required: true\n  }, {\n    name: 'y',\n    required: true\n  }],\n  preInference: [...basePreInference(), {\n    type: MaybeIdentityY\n  }, {\n    type: MaybeIdentityX\n  }],\n  postInference: [...basePostInference(), ...tooltip2d()]\n};","map":{"version":3,"names":["MaybeIdentityX","MaybeIdentityY","LinkArc","LinkShape","LinkSmooth","LinkVHV","baseGeometryChannels","basePostInference","basePreInference","createBandOffset","tooltip2d","shape","link","arc","smooth","vhv","Link","options","index","scale","value","coordinate","x","X","y","Y","x1","X1","y1","Y1","offset","P","map","i","props","defaultShape","defaultLabelShape","composite","channels","shapes","Object","keys","name","required","preInference","type","postInference"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/link.ts"],"sourcesContent":["import { MarkComponent as MC, Vector2 } from '../runtime';\nimport { LineMark } from '../spec';\nimport { MaybeIdentityX, MaybeIdentityY } from '../transform';\nimport { LinkArc, LinkShape, LinkSmooth, LinkVHV } from '../shape';\nimport {\n  baseGeometryChannels,\n  basePostInference,\n  basePreInference,\n  createBandOffset,\n  tooltip2d,\n} from './utils';\n\nconst shape = {\n  link: LinkShape,\n  arc: LinkArc,\n  smooth: LinkSmooth,\n  vhv: LinkVHV,\n};\n\nexport type LinkOptions = Omit<LineMark, 'type'>;\n\n/**\n * Connect `start` to `end` with single line.\n */\nexport const Link: MC<LinkOptions> = (options) => {\n  return (index, scale, value, coordinate) => {\n    const { x: X, y: Y, x1: X1 = X, y1: Y1 = Y } = value;\n    const offset = createBandOffset(scale, value, options);\n    const P = index.map((i) => [\n      coordinate.map(offset([+X[i], +Y[i]], i)) as Vector2,\n      coordinate.map(offset([+X1[i], +Y1[i]], i)) as Vector2,\n    ]);\n    return [index, P];\n  };\n};\n\nLink.props = {\n  defaultShape: 'link',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [\n    ...baseGeometryChannels({ shapes: Object.keys(shape) }),\n    { name: 'x', required: true },\n    { name: 'y', required: true },\n  ],\n  preInference: [\n    ...basePreInference(),\n    { type: MaybeIdentityY },\n    { type: MaybeIdentityX },\n  ],\n  postInference: [...basePostInference(), ...tooltip2d()],\n};\n"],"mappings":"AAEA,SAASA,cAAc,EAAEC,cAAc,QAAQ,cAAc;AAC7D,SAASC,OAAO,EAAEC,SAAS,EAAEC,UAAU,EAAEC,OAAO,QAAQ,UAAU;AAClE,SACEC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAgB,EAChBC,gBAAgB,EAChBC,SAAS,QACJ,SAAS;AAEhB,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAET,SAAS;EACfU,GAAG,EAAEX,OAAO;EACZY,MAAM,EAAEV,UAAU;EAClBW,GAAG,EAAEV;CACN;AAID;;;AAGA,OAAO,MAAMW,IAAI,GAAqBC,OAAO,IAAI;EAC/C,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,KAAI;IACzC,MAAM;MAAEC,CAAC,EAAEC,CAAC;MAAEC,CAAC,EAAEC,CAAC;MAAEC,EAAE,EAAEC,EAAE,GAAGJ,CAAC;MAAEK,EAAE,EAAEC,EAAE,GAAGJ;IAAC,CAAE,GAAGL,KAAK;IACpD,MAAMU,MAAM,GAAGrB,gBAAgB,CAACU,KAAK,EAAEC,KAAK,EAAEH,OAAO,CAAC;IACtD,MAAMc,CAAC,GAAGb,KAAK,CAACc,GAAG,CAAEC,CAAC,IAAK,CACzBZ,UAAU,CAACW,GAAG,CAACF,MAAM,CAAC,CAAC,CAACP,CAAC,CAACU,CAAC,CAAC,EAAE,CAACR,CAAC,CAACQ,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAY,EACpDZ,UAAU,CAACW,GAAG,CAACF,MAAM,CAAC,CAAC,CAACH,EAAE,CAACM,CAAC,CAAC,EAAE,CAACJ,EAAE,CAACI,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAY,CACvD,CAAC;IACF,OAAO,CAACf,KAAK,EAAEa,CAAC,CAAC;EACnB,CAAC;AACH,CAAC;AAEDf,IAAI,CAACkB,KAAK,GAAG;EACXC,YAAY,EAAE,MAAM;EACpBC,iBAAiB,EAAE,OAAO;EAC1BC,SAAS,EAAE,KAAK;EAChB1B,KAAK;EACL2B,QAAQ,EAAE,CACR,GAAGhC,oBAAoB,CAAC;IAAEiC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAAC9B,KAAK;EAAC,CAAE,CAAC,EACvD;IAAE+B,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,EAC7B;IAAED,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,CAC9B;EACDC,YAAY,EAAE,CACZ,GAAGpC,gBAAgB,EAAE,EACrB;IAAEqC,IAAI,EAAE5C;EAAc,CAAE,EACxB;IAAE4C,IAAI,EAAE7C;EAAc,CAAE,CACzB;EACD8C,aAAa,EAAE,CAAC,GAAGvC,iBAAiB,EAAE,EAAE,GAAGG,SAAS,EAAE;CACvD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}