{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { column } from './utils/helper';\n/**\n * Infer key for every element.\n */\nexport const MaybeKey = () => {\n  return (I, mark) => {\n    const {\n      encode\n    } = mark;\n    const {\n        key\n      } = encode,\n      rest = __rest(encode, [\"key\"]);\n    if (key !== undefined) return [I, mark];\n    const values = Object.values(rest).map(({\n      value\n    }) => value);\n    const K = I.map(i => values.filter(Array.isArray).map(V => V[i]).join('-'));\n    return [I, deepMix({}, mark, {\n      encode: {\n        key: column(K)\n      }\n    })];\n  };\n};\nMaybeKey.props = {};","map":{"version":3,"names":["deepMix","column","MaybeKey","I","mark","encode","key","rest","__rest","undefined","values","Object","map","value","K","i","filter","Array","isArray","V","join","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/maybeKey.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { TransformComponent as TC } from '../runtime';\nimport { column } from './utils/helper';\n\nexport type MaybeKeyOptions = Record<string, never>;\n\n/**\n * Infer key for every element.\n */\nexport const MaybeKey: TC<MaybeKeyOptions> = () => {\n  return (I, mark) => {\n    const { encode } = mark;\n    const { key, ...rest } = encode;\n    if (key !== undefined) return [I, mark];\n    const values = Object.values(rest).map(({ value }) => value);\n    const K = I.map((i) =>\n      values\n        .filter(Array.isArray)\n        .map((V) => V[i])\n        .join('-'),\n    );\n    return [I, deepMix({}, mark, { encode: { key: column(K) } })];\n  };\n};\n\nMaybeKey.props = {};\n"],"mappings":";;;;;;;;AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,MAAM,QAAQ,gBAAgB;AAIvC;;;AAGA,OAAO,MAAMC,QAAQ,GAAwBA,CAAA,KAAK;EAChD,OAAO,CAACC,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC;IAAM,CAAE,GAAGD,IAAI;IACvB,MAAM;QAAEE;MAAG,IAAcD,MAAM;MAAfE,IAAI,GAAAC,MAAA,CAAKH,MAAM,EAAzB,OAAgB,CAAS;IAC/B,IAAIC,GAAG,KAAKG,SAAS,EAAE,OAAO,CAACN,CAAC,EAAEC,IAAI,CAAC;IACvC,MAAMM,MAAM,GAAGC,MAAM,CAACD,MAAM,CAACH,IAAI,CAAC,CAACK,GAAG,CAAC,CAAC;MAAEC;IAAK,CAAE,KAAKA,KAAK,CAAC;IAC5D,MAAMC,CAAC,GAAGX,CAAC,CAACS,GAAG,CAAEG,CAAC,IAChBL,MAAM,CACHM,MAAM,CAACC,KAAK,CAACC,OAAO,CAAC,CACrBN,GAAG,CAAEO,CAAC,IAAKA,CAAC,CAACJ,CAAC,CAAC,CAAC,CAChBK,IAAI,CAAC,GAAG,CAAC,CACb;IACD,OAAO,CAACjB,CAAC,EAAEH,OAAO,CAAC,EAAE,EAAEI,IAAI,EAAE;MAAEC,MAAM,EAAE;QAAEC,GAAG,EAAEL,MAAM,CAACa,CAAC;MAAC;IAAE,CAAE,CAAC,CAAC;EAC/D,CAAC;AACH,CAAC;AAEDZ,QAAQ,CAACmB,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}