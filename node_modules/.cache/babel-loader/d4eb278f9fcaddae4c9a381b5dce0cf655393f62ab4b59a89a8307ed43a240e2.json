{"ast":null,"code":"import { roundPath } from '../process/round-path';\n/**\n * Returns a valid `d` attribute string value created\n * by rounding values and concatenating the `pathArray` segments.\n */\nexport function path2String(path, round) {\n  if (round === void 0) {\n    round = 'off';\n  }\n  return roundPath(path, round).map(function (x) {\n    return x[0] + x.slice(1).join(' ');\n  }).join('');\n}","map":{"version":3,"names":["roundPath","path2String","path","round","map","x","slice","join"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/path/convert/path-2-string.ts"],"sourcesContent":["import { roundPath } from '../process/round-path';\nimport type { PathArray } from '../types';\n\n/**\n * Returns a valid `d` attribute string value created\n * by rounding values and concatenating the `pathArray` segments.\n */\nexport function path2String(path: PathArray, round: number | 'off' = 'off'): string {\n  return roundPath(path, round)\n    .map((x) => x[0] + x.slice(1).join(' '))\n    .join('');\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uBAAuB;AAGjD;;;;AAIA,OAAM,SAAUC,WAAWA,CAACC,IAAe,EAAEC,KAA6B;EAA7B,IAAAA,KAAA;IAAAA,KAAA,QAA6B;EAAA;EACxE,OAAOH,SAAS,CAACE,IAAI,EAAEC,KAAK,CAAC,CAC1BC,GAAG,CAAC,UAACC,CAAC;IAAK,OAAAA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;EAA3B,CAA2B,CAAC,CACvCA,IAAI,CAAC,EAAE,CAAC;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}