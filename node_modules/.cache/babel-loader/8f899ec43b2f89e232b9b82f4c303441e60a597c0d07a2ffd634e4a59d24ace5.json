{"ast":null,"code":"// v1.0 exported just the parser function. To maintain backwards compatibility,\n// we export additional named features as properties of that function.\nvar parserFunction = require('./parser.js').parse;\nparserFunction.parseSVG = parserFunction;\nparserFunction.makeAbsolute = makeSVGPathCommandsAbsolute;\nmodule.exports = parserFunction;\nfunction makeSVGPathCommandsAbsolute(commands) {\n  var subpathStart,\n    prevCmd = {\n      x: 0,\n      y: 0\n    };\n  var attr = {\n    x: 'x0',\n    y: 'y0',\n    x1: 'x0',\n    y1: 'y0',\n    x2: 'x0',\n    y2: 'y0'\n  };\n  commands.forEach(function (cmd) {\n    if (cmd.command === 'moveto') subpathStart = cmd;\n    cmd.x0 = prevCmd.x;\n    cmd.y0 = prevCmd.y;\n    for (var a in attr) if (a in cmd) cmd[a] += cmd.relative ? cmd[attr[a]] : 0;\n    if (!('x' in cmd)) cmd.x = prevCmd.x; // V\n    if (!('y' in cmd)) cmd.y = prevCmd.y; // X\n    cmd.relative = false;\n    cmd.code = cmd.code.toUpperCase();\n    if (cmd.command == 'closepath') {\n      cmd.x = subpathStart.x;\n      cmd.y = subpathStart.y;\n    }\n    prevCmd = cmd;\n  });\n  return commands;\n}","map":{"version":3,"names":["parserFunction","require","parse","parseSVG","makeAbsolute","makeSVGPathCommandsAbsolute","module","exports","commands","subpathStart","prevCmd","x","y","attr","x1","y1","x2","y2","forEach","cmd","command","x0","y0","a","relative","code","toUpperCase"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/svg-path-parser/index.js"],"sourcesContent":["// v1.0 exported just the parser function. To maintain backwards compatibility,\n// we export additional named features as properties of that function.\nvar parserFunction = require('./parser.js').parse;\nparserFunction.parseSVG = parserFunction;\nparserFunction.makeAbsolute = makeSVGPathCommandsAbsolute;\nmodule.exports = parserFunction;\n\nfunction makeSVGPathCommandsAbsolute(commands) {\n\tvar subpathStart, prevCmd={x:0,y:0};\n\tvar attr = {x:'x0',y:'y0',x1:'x0',y1:'y0',x2:'x0',y2:'y0'};\n\tcommands.forEach(function(cmd) {\n\t\tif (cmd.command==='moveto') subpathStart=cmd;\n\t\tcmd.x0=prevCmd.x; cmd.y0=prevCmd.y;\n\t\tfor (var a in attr) if (a in cmd) cmd[a] += cmd.relative ? cmd[attr[a]] : 0;\n\t\tif (!('x' in cmd)) cmd.x = prevCmd.x; // V\n\t\tif (!('y' in cmd)) cmd.y = prevCmd.y; // X\n\t\tcmd.relative = false;\n\t\tcmd.code = cmd.code.toUpperCase();\n\t\tif (cmd.command=='closepath') {\n\t\t\tcmd.x = subpathStart.x;\n\t\t\tcmd.y = subpathStart.y;\n\t\t}\n\t\tprevCmd = cmd;\n\t});\n\treturn commands;\n}\n"],"mappings":"AAAA;AACA;AACA,IAAIA,cAAc,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACC,KAAK;AACjDF,cAAc,CAACG,QAAQ,GAAGH,cAAc;AACxCA,cAAc,CAACI,YAAY,GAAGC,2BAA2B;AACzDC,MAAM,CAACC,OAAO,GAAGP,cAAc;AAE/B,SAASK,2BAA2BA,CAACG,QAAQ,EAAE;EAC9C,IAAIC,YAAY;IAAEC,OAAO,GAAC;MAACC,CAAC,EAAC,CAAC;MAACC,CAAC,EAAC;IAAC,CAAC;EACnC,IAAIC,IAAI,GAAG;IAACF,CAAC,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAACE,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC;EAAI,CAAC;EAC1DT,QAAQ,CAACU,OAAO,CAAC,UAASC,GAAG,EAAE;IAC9B,IAAIA,GAAG,CAACC,OAAO,KAAG,QAAQ,EAAEX,YAAY,GAACU,GAAG;IAC5CA,GAAG,CAACE,EAAE,GAACX,OAAO,CAACC,CAAC;IAAEQ,GAAG,CAACG,EAAE,GAACZ,OAAO,CAACE,CAAC;IAClC,KAAK,IAAIW,CAAC,IAAIV,IAAI,EAAE,IAAIU,CAAC,IAAIJ,GAAG,EAAEA,GAAG,CAACI,CAAC,CAAC,IAAIJ,GAAG,CAACK,QAAQ,GAAGL,GAAG,CAACN,IAAI,CAACU,CAAC,CAAC,CAAC,GAAG,CAAC;IAC3E,IAAI,EAAE,GAAG,IAAIJ,GAAG,CAAC,EAAEA,GAAG,CAACR,CAAC,GAAGD,OAAO,CAACC,CAAC,CAAC,CAAC;IACtC,IAAI,EAAE,GAAG,IAAIQ,GAAG,CAAC,EAAEA,GAAG,CAACP,CAAC,GAAGF,OAAO,CAACE,CAAC,CAAC,CAAC;IACtCO,GAAG,CAACK,QAAQ,GAAG,KAAK;IACpBL,GAAG,CAACM,IAAI,GAAGN,GAAG,CAACM,IAAI,CAACC,WAAW,CAAC,CAAC;IACjC,IAAIP,GAAG,CAACC,OAAO,IAAE,WAAW,EAAE;MAC7BD,GAAG,CAACR,CAAC,GAAGF,YAAY,CAACE,CAAC;MACtBQ,GAAG,CAACP,CAAC,GAAGH,YAAY,CAACG,CAAC;IACvB;IACAF,OAAO,GAAGS,GAAG;EACd,CAAC,CAAC;EACF,OAAOX,QAAQ;AAChB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}