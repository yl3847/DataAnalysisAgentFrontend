{"ast":null,"code":"/**\n * scale a shape to a given size\n */\nexport function scaleToPixel(el, size, applyScale) {\n  if (applyScale === void 0) {\n    applyScale = false;\n  }\n  var _a = el.getBBox(),\n    width = _a.width,\n    height = _a.height;\n  var scale = size / Math.max(width, height);\n  if (applyScale) {\n    el.style.transform = \"scale(\".concat(scale, \")\");\n  }\n  return scale;\n}","map":{"version":3,"names":["scaleToPixel","el","size","applyScale","_a","getBBox","width","height","scale","Math","max","style","transform","concat"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/util/scale-to-pixel.ts"],"sourcesContent":["import type { DisplayObject } from '../shapes';\n\n/**\n * scale a shape to a given size\n */\nexport function scaleToPixel(el: DisplayObject, size: number, applyScale = false) {\n  const { width, height } = el.getBBox();\n  const scale = size / Math.max(width, height);\n  if (applyScale) {\n    el.style.transform = `scale(${scale})`;\n  }\n  return scale;\n}\n"],"mappings":"AAEA;;;AAGA,OAAM,SAAUA,YAAYA,CAACC,EAAiB,EAAEC,IAAY,EAAEC,UAAkB;EAAlB,IAAAA,UAAA;IAAAA,UAAA,QAAkB;EAAA;EACxE,IAAAC,EAAA,GAAoBH,EAAE,CAACI,OAAO,EAAE;IAA9BC,KAAK,GAAAF,EAAA,CAAAE,KAAA;IAAEC,MAAM,GAAAH,EAAA,CAAAG,MAAiB;EACtC,IAAMC,KAAK,GAAGN,IAAI,GAAGO,IAAI,CAACC,GAAG,CAACJ,KAAK,EAAEC,MAAM,CAAC;EAC5C,IAAIJ,UAAU,EAAE;IACdF,EAAE,CAACU,KAAK,CAACC,SAAS,GAAG,SAAAC,MAAA,CAASL,KAAK,MAAG;EACxC;EACA,OAAOA,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}