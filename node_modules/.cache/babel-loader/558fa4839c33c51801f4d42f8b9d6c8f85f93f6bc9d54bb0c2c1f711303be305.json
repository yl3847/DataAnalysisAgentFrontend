{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n/**\n * @todo Combine with the `Container` util\n */\nexport function flow(target, source) {\n  return {\n    set(key, normalize, callback) {\n      if (source[key] === undefined) return this;\n      const value = normalize ? normalize.call(null, source[key]) : source[key];\n      if (callback) callback.call(null, value);else if (typeof target[key] === 'function') target[key](value);else target[key] = value;\n      return this;\n    },\n    setAsync(key, normalize, callback) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (source[key] === undefined) return this;\n        const value = normalize ? yield normalize.call(null, source[key]) : source[key];\n        if (callback) callback.call(null, value);else if (typeof target[key] === 'function') target[key](value);else target[key] = value;\n        return this;\n      });\n    }\n  };\n}","map":{"version":3,"names":["flow","target","source","set","key","normalize","callback","undefined","value","call","setAsync"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/utils/flow.ts"],"sourcesContent":["type Flow = {\n  set(key: string, normalize?, callback?): Flow;\n  setAsync(key: string, normalize?, callback?): Promise<Flow>;\n};\n/**\n * @todo Combine with the `Container` util\n */\nexport function flow(\n  target: Record<keyof any, any>,\n  source: Record<keyof any, any>,\n): Flow {\n  return {\n    set(key: string, normalize?, callback?) {\n      if (source[key] === undefined) return this;\n\n      const value = normalize ? normalize.call(null, source[key]) : source[key];\n      if (callback) callback.call(null, value);\n      else if (typeof target[key] === 'function') target[key](value);\n      else target[key] = value;\n\n      return this;\n    },\n    async setAsync(key: string, normalize?, callback?) {\n      if (source[key] === undefined) return this;\n\n      const value = normalize\n        ? await normalize.call(null, source[key])\n        : source[key];\n      if (callback) callback.call(null, value);\n      else if (typeof target[key] === 'function') target[key](value);\n      else target[key] = value;\n\n      return this;\n    },\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;AAGA,OAAM,SAAUA,IAAIA,CAClBC,MAA8B,EAC9BC,MAA8B;EAE9B,OAAO;IACLC,GAAGA,CAACC,GAAW,EAAEC,SAAU,EAAEC,QAAS;MACpC,IAAIJ,MAAM,CAACE,GAAG,CAAC,KAAKG,SAAS,EAAE,OAAO,IAAI;MAE1C,MAAMC,KAAK,GAAGH,SAAS,GAAGA,SAAS,CAACI,IAAI,CAAC,IAAI,EAAEP,MAAM,CAACE,GAAG,CAAC,CAAC,GAAGF,MAAM,CAACE,GAAG,CAAC;MACzE,IAAIE,QAAQ,EAAEA,QAAQ,CAACG,IAAI,CAAC,IAAI,EAAED,KAAK,CAAC,CAAC,KACpC,IAAI,OAAOP,MAAM,CAACG,GAAG,CAAC,KAAK,UAAU,EAAEH,MAAM,CAACG,GAAG,CAAC,CAACI,KAAK,CAAC,CAAC,KAC1DP,MAAM,CAACG,GAAG,CAAC,GAAGI,KAAK;MAExB,OAAO,IAAI;IACb,CAAC;IACKE,QAAQA,CAACN,GAAW,EAAEC,SAAU,EAAEC,QAAS;;QAC/C,IAAIJ,MAAM,CAACE,GAAG,CAAC,KAAKG,SAAS,EAAE,OAAO,IAAI;QAE1C,MAAMC,KAAK,GAAGH,SAAS,GACnB,MAAMA,SAAS,CAACI,IAAI,CAAC,IAAI,EAAEP,MAAM,CAACE,GAAG,CAAC,CAAC,GACvCF,MAAM,CAACE,GAAG,CAAC;QACf,IAAIE,QAAQ,EAAEA,QAAQ,CAACG,IAAI,CAAC,IAAI,EAAED,KAAK,CAAC,CAAC,KACpC,IAAI,OAAOP,MAAM,CAACG,GAAG,CAAC,KAAK,UAAU,EAAEH,MAAM,CAACG,GAAG,CAAC,CAACI,KAAK,CAAC,CAAC,KAC1DP,MAAM,CAACG,GAAG,CAAC,GAAGI,KAAK;QAExB,OAAO,IAAI;MACb,CAAC;;GACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}