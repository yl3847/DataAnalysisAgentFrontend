{"ast":null,"code":"import { isNumber } from '@antv/util';\n/**\n * <zh/> 从 transform 字符串中替换 translate 部分\n *\n * <en/> replace the translate part from the transform string\n * @param x - <zh/> x | <en/> x\n * @param y - <zh/> y | <en/> y\n * @param z - <zh/> z | <en/> z\n * @param transform - <zh/> transform 字符串 | <en/> transform string\n * @returns <zh/> 替换后的 transform 字符串，返回 null 表示无需替换 | <en/> the replaced transform string, return null means no need to replace\n */\nexport function replaceTranslateInTransform(x, y, z, transform = []) {\n  if (!transform && x === 0 && y === 0 && z === 0) return null;\n  if (Array.isArray(transform)) {\n    let translateIndex = -1;\n    const newTransform = [];\n    for (let i = 0; i < transform.length; i++) {\n      const t = transform[i];\n      if (t[0] === 'translate') {\n        if (t[1] === x && t[2] === y) return null;\n        translateIndex = i;\n        newTransform.push(['translate', x, y]);\n      } else if (t[0] === 'translate3d') {\n        if (t[1] === x && t[2] === y && t[3] === z) return null;\n        translateIndex = i;\n        newTransform.push(['translate3d', x, y, z !== null && z !== void 0 ? z : 0]);\n      } else {\n        newTransform.push(t);\n      }\n    }\n    if (translateIndex === -1) {\n      newTransform.splice(0, 0, isNumber(z) ? ['translate3d', x, y, z !== null && z !== void 0 ? z : 0] : ['translate', x, y]);\n    }\n    if (newTransform.length === 0) return null;\n    return newTransform;\n  }\n  const removedTranslate = transform ? transform.replace(/translate(3d)?\\([^)]*\\)/g, '') : '';\n  if (z === 0) {\n    return `translate(${x}, ${y})${removedTranslate}`;\n  } else {\n    return `translate3d(${x}, ${y}, ${z})${removedTranslate}`;\n  }\n}","map":{"version":3,"names":["isNumber","replaceTranslateInTransform","x","y","z","transform","Array","isArray","translateIndex","newTransform","i","length","t","push","splice","removedTranslate","replace"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/transform.ts"],"sourcesContent":["import type { TransformArray } from '@antv/g';\nimport { isNumber } from '@antv/util';\n\n/**\n * <zh/> 从 transform 字符串中替换 translate 部分\n *\n * <en/> replace the translate part from the transform string\n * @param x - <zh/> x | <en/> x\n * @param y - <zh/> y | <en/> y\n * @param z - <zh/> z | <en/> z\n * @param transform - <zh/> transform 字符串 | <en/> transform string\n * @returns <zh/> 替换后的 transform 字符串，返回 null 表示无需替换 | <en/> the replaced transform string, return null means no need to replace\n */\nexport function replaceTranslateInTransform(\n  x: number,\n  y: number,\n  z?: number,\n  transform: string | TransformArray = [],\n): string | TransformArray | null {\n  if (!transform && x === 0 && y === 0 && z === 0) return null;\n\n  if (Array.isArray(transform)) {\n    let translateIndex = -1;\n    const newTransform: TransformArray = [];\n\n    for (let i = 0; i < transform.length; i++) {\n      const t = transform[i];\n      if (t[0] === 'translate') {\n        if (t[1] === x && t[2] === y) return null;\n        translateIndex = i;\n        newTransform.push(['translate', x, y]);\n      } else if (t[0] === 'translate3d') {\n        if (t[1] === x && t[2] === y && t[3] === z) return null;\n        translateIndex = i;\n        newTransform.push(['translate3d', x, y, z ?? 0]);\n      } else {\n        newTransform.push(t);\n      }\n    }\n\n    if (translateIndex === -1) {\n      newTransform.splice(0, 0, isNumber(z) ? ['translate3d', x, y, z ?? 0] : ['translate', x, y]);\n    }\n    if (newTransform.length === 0) return null;\n    return newTransform;\n  }\n\n  const removedTranslate = transform ? transform.replace(/translate(3d)?\\([^)]*\\)/g, '') : '';\n  if (z === 0) {\n    return `translate(${x}, ${y})${removedTranslate}`;\n  } else {\n    return `translate3d(${x}, ${y}, ${z})${removedTranslate}`;\n  }\n}\n"],"mappings":"AACA,SAASA,QAAQ,QAAQ,YAAY;AAErC;;;;;;;;;;AAUA,OAAM,SAAUC,2BAA2BA,CACzCC,CAAS,EACTC,CAAS,EACTC,CAAU,EACVC,SAAA,GAAqC,EAAE;EAEvC,IAAI,CAACA,SAAS,IAAIH,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,IAAIC,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI;EAE5D,IAAIE,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC,EAAE;IAC5B,IAAIG,cAAc,GAAG,CAAC,CAAC;IACvB,MAAMC,YAAY,GAAmB,EAAE;IAEvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGP,SAAS,CAACK,CAAC,CAAC;MACtB,IAAIE,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;QACxB,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKV,CAAC,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAKT,CAAC,EAAE,OAAO,IAAI;QACzCK,cAAc,GAAGE,CAAC;QAClBD,YAAY,CAACI,IAAI,CAAC,CAAC,WAAW,EAAEX,CAAC,EAAEC,CAAC,CAAC,CAAC;MACxC,CAAC,MAAM,IAAIS,CAAC,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;QACjC,IAAIA,CAAC,CAAC,CAAC,CAAC,KAAKV,CAAC,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAKT,CAAC,IAAIS,CAAC,CAAC,CAAC,CAAC,KAAKR,CAAC,EAAE,OAAO,IAAI;QACvDI,cAAc,GAAGE,CAAC;QAClBD,YAAY,CAACI,IAAI,CAAC,CAAC,aAAa,EAAEX,CAAC,EAAEC,CAAC,EAAEC,CAAC,aAADA,CAAC,cAADA,CAAC,GAAI,CAAC,CAAC,CAAC;MAClD,CAAC,MAAM;QACLK,YAAY,CAACI,IAAI,CAACD,CAAC,CAAC;MACtB;IACF;IAEA,IAAIJ,cAAc,KAAK,CAAC,CAAC,EAAE;MACzBC,YAAY,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,EAAEd,QAAQ,CAACI,CAAC,CAAC,GAAG,CAAC,aAAa,EAAEF,CAAC,EAAEC,CAAC,EAAEC,CAAC,aAADA,CAAC,cAADA,CAAC,GAAI,CAAC,CAAC,GAAG,CAAC,WAAW,EAAEF,CAAC,EAAEC,CAAC,CAAC,CAAC;IAC9F;IACA,IAAIM,YAAY,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAC1C,OAAOF,YAAY;EACrB;EAEA,MAAMM,gBAAgB,GAAGV,SAAS,GAAGA,SAAS,CAACW,OAAO,CAAC,0BAA0B,EAAE,EAAE,CAAC,GAAG,EAAE;EAC3F,IAAIZ,CAAC,KAAK,CAAC,EAAE;IACX,OAAO,aAAaF,CAAC,KAAKC,CAAC,IAAIY,gBAAgB,EAAE;EACnD,CAAC,MAAM;IACL,OAAO,eAAeb,CAAC,KAAKC,CAAC,KAAKC,CAAC,IAAIW,gBAAgB,EAAE;EAC3D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}