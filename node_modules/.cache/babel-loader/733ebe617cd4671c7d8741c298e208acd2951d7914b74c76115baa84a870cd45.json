{"ast":null,"code":"import { isNumber } from '@antv/util';\nconst parseInt10 = d => d ? parseInt(d) : 0;\n/**\n * Get the container's bounding size.\n * @param container dom element.\n * @returns the container width and height\n */\nfunction getContainerSize(container) {\n  const style = getComputedStyle(container);\n  const wrapperWidth = container.clientWidth || parseInt10(style.width);\n  const wrapperHeight = container.clientHeight || parseInt10(style.height);\n  const widthPadding = parseInt10(style.paddingLeft) + parseInt10(style.paddingRight);\n  const heightPadding = parseInt10(style.paddingTop) + parseInt10(style.paddingBottom);\n  return [wrapperWidth - widthPadding, wrapperHeight - heightPadding];\n}\n/**\n * Get the size of Graph.\n * @param container container of Graph\n * @returns Size of Graph\n */\nexport function sizeOf(container) {\n  if (!container) return [0, 0];\n  let effectiveWidth = 640;\n  let effectiveHeight = 480;\n  const [containerWidth, containerHeight] = getContainerSize(container);\n  effectiveWidth = containerWidth || effectiveWidth;\n  effectiveHeight = containerHeight || effectiveHeight;\n  /** Minimum width */\n  const MIN_CHART_WIDTH = 1;\n  /** Minimum height */\n  const MIN_CHART_HEIGHT = 1;\n  return [Math.max(isNumber(effectiveWidth) ? effectiveWidth : MIN_CHART_WIDTH, MIN_CHART_WIDTH), Math.max(isNumber(effectiveHeight) ? effectiveHeight : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT)];\n}","map":{"version":3,"names":["isNumber","parseInt10","d","parseInt","getContainerSize","container","style","getComputedStyle","wrapperWidth","clientWidth","width","wrapperHeight","clientHeight","height","widthPadding","paddingLeft","paddingRight","heightPadding","paddingTop","paddingBottom","sizeOf","effectiveWidth","effectiveHeight","containerWidth","containerHeight","MIN_CHART_WIDTH","MIN_CHART_HEIGHT","Math","max"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/dom.ts"],"sourcesContent":["import { isNumber } from '@antv/util';\n\nconst parseInt10 = (d: string) => (d ? parseInt(d) : 0);\n\n/**\n * Get the container's bounding size.\n * @param container dom element.\n * @returns the container width and height\n */\nfunction getContainerSize(container: HTMLElement): [number, number] {\n  const style = getComputedStyle(container);\n\n  const wrapperWidth = container.clientWidth || parseInt10(style.width);\n  const wrapperHeight = container.clientHeight || parseInt10(style.height);\n\n  const widthPadding = parseInt10(style.paddingLeft) + parseInt10(style.paddingRight);\n  const heightPadding = parseInt10(style.paddingTop) + parseInt10(style.paddingBottom);\n\n  return [wrapperWidth - widthPadding, wrapperHeight - heightPadding];\n}\n\n/**\n * Get the size of Graph.\n * @param container container of Graph\n * @returns Size of Graph\n */\nexport function sizeOf(container: HTMLElement | null): [number, number] {\n  if (!container) return [0, 0];\n\n  let effectiveWidth = 640;\n  let effectiveHeight = 480;\n\n  const [containerWidth, containerHeight] = getContainerSize(container);\n  effectiveWidth = containerWidth || effectiveWidth;\n  effectiveHeight = containerHeight || effectiveHeight;\n\n  /** Minimum width */\n  const MIN_CHART_WIDTH = 1;\n  /** Minimum height */\n  const MIN_CHART_HEIGHT = 1;\n\n  return [\n    Math.max(isNumber(effectiveWidth) ? effectiveWidth : MIN_CHART_WIDTH, MIN_CHART_WIDTH),\n    Math.max(isNumber(effectiveHeight) ? effectiveHeight : MIN_CHART_HEIGHT, MIN_CHART_HEIGHT),\n  ];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AAErC,MAAMC,UAAU,GAAIC,CAAS,IAAMA,CAAC,GAAGC,QAAQ,CAACD,CAAC,CAAC,GAAG,CAAE;AAEvD;;;;;AAKA,SAASE,gBAAgBA,CAACC,SAAsB;EAC9C,MAAMC,KAAK,GAAGC,gBAAgB,CAACF,SAAS,CAAC;EAEzC,MAAMG,YAAY,GAAGH,SAAS,CAACI,WAAW,IAAIR,UAAU,CAACK,KAAK,CAACI,KAAK,CAAC;EACrE,MAAMC,aAAa,GAAGN,SAAS,CAACO,YAAY,IAAIX,UAAU,CAACK,KAAK,CAACO,MAAM,CAAC;EAExE,MAAMC,YAAY,GAAGb,UAAU,CAACK,KAAK,CAACS,WAAW,CAAC,GAAGd,UAAU,CAACK,KAAK,CAACU,YAAY,CAAC;EACnF,MAAMC,aAAa,GAAGhB,UAAU,CAACK,KAAK,CAACY,UAAU,CAAC,GAAGjB,UAAU,CAACK,KAAK,CAACa,aAAa,CAAC;EAEpF,OAAO,CAACX,YAAY,GAAGM,YAAY,EAAEH,aAAa,GAAGM,aAAa,CAAC;AACrE;AAEA;;;;;AAKA,OAAM,SAAUG,MAAMA,CAACf,SAA6B;EAClD,IAAI,CAACA,SAAS,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC;EAE7B,IAAIgB,cAAc,GAAG,GAAG;EACxB,IAAIC,eAAe,GAAG,GAAG;EAEzB,MAAM,CAACC,cAAc,EAAEC,eAAe,CAAC,GAAGpB,gBAAgB,CAACC,SAAS,CAAC;EACrEgB,cAAc,GAAGE,cAAc,IAAIF,cAAc;EACjDC,eAAe,GAAGE,eAAe,IAAIF,eAAe;EAEpD;EACA,MAAMG,eAAe,GAAG,CAAC;EACzB;EACA,MAAMC,gBAAgB,GAAG,CAAC;EAE1B,OAAO,CACLC,IAAI,CAACC,GAAG,CAAC5B,QAAQ,CAACqB,cAAc,CAAC,GAAGA,cAAc,GAAGI,eAAe,EAAEA,eAAe,CAAC,EACtFE,IAAI,CAACC,GAAG,CAAC5B,QAAQ,CAACsB,eAAe,CAAC,GAAGA,eAAe,GAAGI,gBAAgB,EAAEA,gBAAgB,CAAC,CAC3F;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}