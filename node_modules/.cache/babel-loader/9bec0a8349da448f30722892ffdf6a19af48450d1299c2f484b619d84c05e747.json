{"ast":null,"code":"import { get } from '@antv/util';\n// style: { columnWidthRatio: 0.2 } => scale: { x: { padding: 0.8 } }\nexport function columnWidthRatio(options) {\n  const {\n    style,\n    scale,\n    type\n  } = options;\n  const scaleOption = {};\n  const columnWidthRatio = get(style, 'columnWidthRatio');\n  if (columnWidthRatio && type === 'interval') {\n    scaleOption.x = Object.assign(Object.assign({}, scale === null || scale === void 0 ? void 0 : scale.x), {\n      padding: 1 - columnWidthRatio\n    });\n  }\n  return Object.assign(Object.assign({}, options), {\n    scale: Object.assign(Object.assign({}, scale), scaleOption)\n  });\n}","map":{"version":3,"names":["get","columnWidthRatio","options","style","scale","type","scaleOption","x","Object","assign","padding"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/runtime/option-preprocess/style.ts"],"sourcesContent":["import { get } from '@antv/util';\nimport { G2View, G2ViewTree } from '../types/options';\n\n// style: { columnWidthRatio: 0.2 } => scale: { x: { padding: 0.8 } }\nexport function columnWidthRatio<T extends G2ViewTree = G2ViewTree>(\n  options: T,\n): T {\n  const { style, scale, type } = options;\n  const scaleOption: G2View = {};\n  const columnWidthRatio = get(style, 'columnWidthRatio');\n  if (columnWidthRatio && type === 'interval') {\n    scaleOption.x = {\n      ...scale?.x,\n      padding: 1 - columnWidthRatio,\n    };\n  }\n  return {\n    ...options,\n    scale: { ...scale, ...scaleOption },\n  };\n}\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,YAAY;AAGhC;AACA,OAAM,SAAUC,gBAAgBA,CAC9BC,OAAU;EAEV,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAI,CAAE,GAAGH,OAAO;EACtC,MAAMI,WAAW,GAAW,EAAE;EAC9B,MAAML,gBAAgB,GAAGD,GAAG,CAACG,KAAK,EAAE,kBAAkB,CAAC;EACvD,IAAIF,gBAAgB,IAAII,IAAI,KAAK,UAAU,EAAE;IAC3CC,WAAW,CAACC,CAAC,GAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACRL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEG,CAAC;MACXG,OAAO,EAAE,CAAC,GAAGT;IAAgB,EAC9B;;EAEH,OAAAO,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACKP,OAAO;IACVE,KAAK,EAAAI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAOL,KAAK,GAAKE,WAAW;EAAA;AAErC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}