{"ast":null,"code":"import pdf from 'pdfast';\nimport { group } from '@antv/vendor/d3-array';\nexport function defined(d) {\n  return d !== undefined && d !== null && !Number.isNaN(d);\n}\n/**\n * Kernel Density Estimation base on [pdfast](https://www.npmjs.com/package/pdfast),\n * generating probability density function (pdf) using triangular kernel,\n * optimized to run in O(N + K).\n */\nexport const KDE = options => {\n  const {\n    field,\n    groupBy,\n    as = ['y', 'size'],\n    min,\n    max,\n    size = 10,\n    width\n  } = options;\n  const [yField, sizeField] = as;\n  return data => {\n    const gs = Array.from(group(data, d => groupBy.map(gb => d[gb]).join('-')).values());\n    return gs.map(g => {\n      const pdfResult = pdf.create(g.map(i => i[field]), {\n        min,\n        max,\n        size,\n        width\n      });\n      const _y = pdfResult.map(result => result.x);\n      const _size = pdfResult.map(result => result.y);\n      return Object.assign(Object.assign({}, g[0]), {\n        [yField]: _y,\n        [sizeField]: _size\n      });\n    });\n  };\n};\nKDE.props = {};","map":{"version":3,"names":["pdf","group","defined","d","undefined","Number","isNaN","KDE","options","field","groupBy","as","min","max","size","width","yField","sizeField","data","gs","Array","from","map","gb","join","values","g","pdfResult","create","i","_y","result","x","_size","y","Object","assign","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/kde.ts"],"sourcesContent":["import pdf from 'pdfast';\nimport { group } from '@antv/vendor/d3-array';\nimport { DataComponent as DC } from '../runtime';\nimport { KDEDataTransform } from '../spec';\n\nexport type KDEOptions = Omit<KDEDataTransform, 'type'>;\n\nexport function defined(d: any): boolean {\n  return d !== undefined && d !== null && !Number.isNaN(d);\n}\n\n/**\n * Kernel Density Estimation base on [pdfast](https://www.npmjs.com/package/pdfast),\n * generating probability density function (pdf) using triangular kernel,\n * optimized to run in O(N + K).\n */\nexport const KDE: DC<KDEOptions> = (options) => {\n  const {\n    field,\n    groupBy,\n    as = ['y', 'size'],\n    min,\n    max,\n    size = 10,\n    width,\n  } = options;\n  const [yField, sizeField] = as;\n  return (data) => {\n    const gs = Array.from(\n      group(data, (d) => groupBy.map((gb) => d[gb]).join('-')).values(),\n    );\n    return gs.map((g) => {\n      const pdfResult = pdf.create(\n        g.map((i) => i[field]),\n        {\n          min,\n          max,\n          size,\n          width,\n        },\n      );\n      const _y = pdfResult.map((result) => result.x);\n      const _size = pdfResult.map((result) => result.y);\n      return {\n        ...(g[0] as Record<string, unknown>),\n        [yField]: _y,\n        [sizeField]: _size,\n      };\n    });\n  };\n};\n\nKDE.props = {};\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,QAAQ;AACxB,SAASC,KAAK,QAAQ,uBAAuB;AAM7C,OAAM,SAAUC,OAAOA,CAACC,CAAM;EAC5B,OAAOA,CAAC,KAAKC,SAAS,IAAID,CAAC,KAAK,IAAI,IAAI,CAACE,MAAM,CAACC,KAAK,CAACH,CAAC,CAAC;AAC1D;AAEA;;;;;AAKA,OAAO,MAAMI,GAAG,GAAoBC,OAAO,IAAI;EAC7C,MAAM;IACJC,KAAK;IACLC,OAAO;IACPC,EAAE,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC;IAClBC,GAAG;IACHC,GAAG;IACHC,IAAI,GAAG,EAAE;IACTC;EAAK,CACN,GAAGP,OAAO;EACX,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGN,EAAE;EAC9B,OAAQO,IAAI,IAAI;IACd,MAAMC,EAAE,GAAGC,KAAK,CAACC,IAAI,CACnBpB,KAAK,CAACiB,IAAI,EAAGf,CAAC,IAAKO,OAAO,CAACY,GAAG,CAAEC,EAAE,IAAKpB,CAAC,CAACoB,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACC,MAAM,EAAE,CAClE;IACD,OAAON,EAAE,CAACG,GAAG,CAAEI,CAAC,IAAI;MAClB,MAAMC,SAAS,GAAG3B,GAAG,CAAC4B,MAAM,CAC1BF,CAAC,CAACJ,GAAG,CAAEO,CAAC,IAAKA,CAAC,CAACpB,KAAK,CAAC,CAAC,EACtB;QACEG,GAAG;QACHC,GAAG;QACHC,IAAI;QACJC;OACD,CACF;MACD,MAAMe,EAAE,GAAGH,SAAS,CAACL,GAAG,CAAES,MAAM,IAAKA,MAAM,CAACC,CAAC,CAAC;MAC9C,MAAMC,KAAK,GAAGN,SAAS,CAACL,GAAG,CAAES,MAAM,IAAKA,MAAM,CAACG,CAAC,CAAC;MACjD,OAAAC,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KACMV,CAAC,CAAC,CAAC,CAA6B;QACpC,CAACV,MAAM,GAAGc,EAAE;QACZ,CAACb,SAAS,GAAGgB;MAAK;IAEtB,CAAC,CAAC;EACJ,CAAC;AACH,CAAC;AAED1B,GAAG,CAAC8B,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}