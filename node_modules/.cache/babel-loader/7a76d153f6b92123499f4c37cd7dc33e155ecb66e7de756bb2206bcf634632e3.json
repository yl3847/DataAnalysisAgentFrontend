{"ast":null,"code":"import { isPathArray } from './is-path-array';\n/**\n * Iterates an array to check if it's a `PathArray`\n * with all absolute values.\n */\nexport function isAbsoluteArray(path) {\n  return isPathArray(path) &&\n  // @ts-ignore -- `isPathArray` also checks if it's `Array`\n  path.every(function (_a) {\n    var x = _a[0];\n    return x === x.toUpperCase();\n  });\n}","map":{"version":3,"names":["isPathArray","isAbsoluteArray","path","every","_a","x","toUpperCase"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/util/src/path/util/is-absolute-array.ts"],"sourcesContent":["import type { PathArray, AbsoluteArray } from '../types';\nimport { isPathArray } from './is-path-array';\n\n/**\n * Iterates an array to check if it's a `PathArray`\n * with all absolute values.\n */\nexport function isAbsoluteArray(path: string | PathArray): path is AbsoluteArray {\n  return (\n    isPathArray(path) &&\n    // @ts-ignore -- `isPathArray` also checks if it's `Array`\n    path.every(([x]) => x === x.toUpperCase())\n  );\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,iBAAiB;AAE7C;;;;AAIA,OAAM,SAAUC,eAAeA,CAACC,IAAwB;EACtD,OACEF,WAAW,CAACE,IAAI,CAAC;EACjB;EACAA,IAAI,CAACC,KAAK,CAAC,UAACC,EAAG;QAAFC,CAAC,GAAAD,EAAA;IAAM,OAAAC,CAAC,KAAKA,CAAC,CAACC,WAAW,EAAE;EAArB,CAAqB,CAAC;AAE9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}