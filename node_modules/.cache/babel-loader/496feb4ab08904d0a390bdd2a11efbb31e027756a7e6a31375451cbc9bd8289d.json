{"ast":null,"code":"var defaultCompare = function defaultCompare(a, b) {\n  return a - b;\n};\nvar MinBinaryHeap = /** @class */function () {\n  function MinBinaryHeap(compareFn) {\n    if (compareFn === void 0) {\n      compareFn = defaultCompare;\n    }\n    this.compareFn = compareFn;\n    this.list = [];\n  }\n  MinBinaryHeap.prototype.getLeft = function (index) {\n    return 2 * index + 1;\n  };\n  MinBinaryHeap.prototype.getRight = function (index) {\n    return 2 * index + 2;\n  };\n  MinBinaryHeap.prototype.getParent = function (index) {\n    if (index === 0) {\n      return null;\n    }\n    return Math.floor((index - 1) / 2);\n  };\n  MinBinaryHeap.prototype.isEmpty = function () {\n    return this.list.length <= 0;\n  };\n  MinBinaryHeap.prototype.top = function () {\n    return this.isEmpty() ? undefined : this.list[0];\n  };\n  MinBinaryHeap.prototype.delMin = function () {\n    var top = this.top();\n    var bottom = this.list.pop();\n    if (this.list.length > 0) {\n      this.list[0] = bottom;\n      this.moveDown(0);\n    }\n    return top;\n  };\n  MinBinaryHeap.prototype.insert = function (value) {\n    if (value !== null) {\n      this.list.push(value);\n      var index = this.list.length - 1;\n      this.moveUp(index);\n      return true;\n    }\n    return false;\n  };\n  MinBinaryHeap.prototype.moveUp = function (index) {\n    var parent = this.getParent(index);\n    while (index && index > 0 && this.compareFn(this.list[parent], this.list[index]) > 0) {\n      // swap\n      var tmp = this.list[parent];\n      this.list[parent] = this.list[index];\n      this.list[index] = tmp;\n      // [this.list[index], this.list[parent]] = [this.list[parent], this.list[index]]\n      index = parent;\n      parent = this.getParent(index);\n    }\n  };\n  MinBinaryHeap.prototype.moveDown = function (index) {\n    var _a;\n    var element = index;\n    var left = this.getLeft(index);\n    var right = this.getRight(index);\n    var size = this.list.length;\n    if (left !== null && left < size && this.compareFn(this.list[element], this.list[left]) > 0) {\n      element = left;\n    } else if (right !== null && right < size && this.compareFn(this.list[element], this.list[right]) > 0) {\n      element = right;\n    }\n    if (index !== element) {\n      _a = [this.list[element], this.list[index]], this.list[index] = _a[0], this.list[element] = _a[1];\n      this.moveDown(element);\n    }\n  };\n  return MinBinaryHeap;\n}();\nexport default MinBinaryHeap;","map":{"version":3,"names":["defaultCompare","a","b","MinBinaryHeap","compareFn","list","prototype","getLeft","index","getRight","getParent","Math","floor","isEmpty","length","top","undefined","delMin","bottom","pop","moveDown","insert","value","push","moveUp","parent","tmp","_a","element","left","right","size"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/algorithm/es/structs/binary-heap.js"],"sourcesContent":["var defaultCompare = function defaultCompare(a, b) {\n  return a - b;\n};\nvar MinBinaryHeap = /** @class */function () {\n  function MinBinaryHeap(compareFn) {\n    if (compareFn === void 0) {\n      compareFn = defaultCompare;\n    }\n    this.compareFn = compareFn;\n    this.list = [];\n  }\n  MinBinaryHeap.prototype.getLeft = function (index) {\n    return 2 * index + 1;\n  };\n  MinBinaryHeap.prototype.getRight = function (index) {\n    return 2 * index + 2;\n  };\n  MinBinaryHeap.prototype.getParent = function (index) {\n    if (index === 0) {\n      return null;\n    }\n    return Math.floor((index - 1) / 2);\n  };\n  MinBinaryHeap.prototype.isEmpty = function () {\n    return this.list.length <= 0;\n  };\n  MinBinaryHeap.prototype.top = function () {\n    return this.isEmpty() ? undefined : this.list[0];\n  };\n  MinBinaryHeap.prototype.delMin = function () {\n    var top = this.top();\n    var bottom = this.list.pop();\n    if (this.list.length > 0) {\n      this.list[0] = bottom;\n      this.moveDown(0);\n    }\n    return top;\n  };\n  MinBinaryHeap.prototype.insert = function (value) {\n    if (value !== null) {\n      this.list.push(value);\n      var index = this.list.length - 1;\n      this.moveUp(index);\n      return true;\n    }\n    return false;\n  };\n  MinBinaryHeap.prototype.moveUp = function (index) {\n    var parent = this.getParent(index);\n    while (index && index > 0 && this.compareFn(this.list[parent], this.list[index]) > 0) {\n      // swap\n      var tmp = this.list[parent];\n      this.list[parent] = this.list[index];\n      this.list[index] = tmp;\n      // [this.list[index], this.list[parent]] = [this.list[parent], this.list[index]]\n      index = parent;\n      parent = this.getParent(index);\n    }\n  };\n  MinBinaryHeap.prototype.moveDown = function (index) {\n    var _a;\n    var element = index;\n    var left = this.getLeft(index);\n    var right = this.getRight(index);\n    var size = this.list.length;\n    if (left !== null && left < size && this.compareFn(this.list[element], this.list[left]) > 0) {\n      element = left;\n    } else if (right !== null && right < size && this.compareFn(this.list[element], this.list[right]) > 0) {\n      element = right;\n    }\n    if (index !== element) {\n      _a = [this.list[element], this.list[index]], this.list[index] = _a[0], this.list[element] = _a[1];\n      this.moveDown(element);\n    }\n  };\n  return MinBinaryHeap;\n}();\nexport default MinBinaryHeap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}