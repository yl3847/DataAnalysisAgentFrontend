{"ast":null,"code":"import { isObject } from '@antv/util';\nimport { inferDefaultValue } from '../../utils/animation';\nimport { groupByChangeType, reduceDataChanges } from '../../utils/change';\nimport { idOf } from '../../utils/id';\n/**\n * <zh/> 对齐两个对象的字段。若目标对象缺少字段，则会添加默认值。\n *\n * <en/> Align the fields of two objects. If the target object lacks fields, default values will be added.\n * @param refObject - <zh/> 参考对象 ｜ <en/> Reference object\n * @param targetObject - <zh/> 目标对象 ｜ <en/> Target object\n */\nexport function alignFields(refObject, targetObject) {\n  for (const key in refObject) {\n    if (isObject(refObject[key]) && !Array.isArray(refObject[key]) && refObject[key] !== null) {\n      if (!targetObject[key]) targetObject[key] = {};\n      alignFields(refObject[key], targetObject[key]);\n    } else if (targetObject[key] === undefined) {\n      targetObject[key] = inferDefaultValue(key);\n    }\n  }\n}\n/**\n * <zh/> 解析数据变更为历史记录命令\n *\n * <en/> Parse data changes into history commands\n * @param changes - <zh/> 数据变更 ｜ <en/> Data changes\n * @param animation - <zh/> 是否开启动画 ｜ <en/> Whether to enable animation\n * @param context - <zh/> 运行时上下文 ｜ <en/> Runtime context\n * @returns <zh/> 历史记录命令 ｜ <en/> History command\n */\nexport function parseCommand(changes, animation = false, context) {\n  const cmd = {\n    animation,\n    current: {\n      add: {},\n      update: {},\n      remove: {}\n    },\n    original: {\n      add: {},\n      update: {},\n      remove: {}\n    }\n  };\n  const {\n    add,\n    update,\n    remove\n  } = groupByChangeType(reduceDataChanges(changes));\n  ['nodes', 'edges', 'combos'].forEach(category => {\n    if (update[category]) {\n      update[category].forEach(item => {\n        var _a, _b;\n        const newValue = Object.assign({}, item.value);\n        let newOriginal = Object.assign({}, item.original);\n        if (context) {\n          // 特殊处理：获取元素原始 color\n          const itemType = context.graph.getElementType(idOf(item.original));\n          const colorKey = itemType === 'edge' ? 'stroke' : 'fill';\n          const style = context.element.getElementComputedStyle(itemType, item.original);\n          newOriginal = Object.assign(Object.assign({}, item.original), {\n            style: Object.assign({\n              [colorKey]: style[colorKey]\n            }, item.original.style)\n          });\n        }\n        alignFields(newValue, newOriginal);\n        (_a = cmd.current.update)[category] || (_a[category] = []);\n        cmd.current.update[category].push(newValue);\n        (_b = cmd.original.update)[category] || (_b[category] = []);\n        cmd.original.update[category].push(newOriginal);\n      });\n    }\n    if (add[category]) {\n      add[category].forEach(item => {\n        var _a, _b;\n        const newValue = Object.assign({}, item.value);\n        (_a = cmd.current.add)[category] || (_a[category] = []);\n        cmd.current.add[category].push(newValue);\n        (_b = cmd.original.remove)[category] || (_b[category] = []);\n        cmd.original.remove[category].push(newValue);\n      });\n    }\n    if (remove[category]) {\n      remove[category].forEach(item => {\n        var _a, _b;\n        const newValue = Object.assign({}, item.value);\n        (_a = cmd.current.remove)[category] || (_a[category] = []);\n        cmd.current.remove[category].push(newValue);\n        (_b = cmd.original.add)[category] || (_b[category] = []);\n        cmd.original.add[category].push(newValue);\n      });\n    }\n  });\n  return cmd;\n}","map":{"version":3,"names":["isObject","inferDefaultValue","groupByChangeType","reduceDataChanges","idOf","alignFields","refObject","targetObject","key","Array","isArray","undefined","parseCommand","changes","animation","context","cmd","current","add","update","remove","original","forEach","category","item","newValue","Object","assign","value","newOriginal","itemType","graph","getElementType","colorKey","style","element","getElementComputedStyle","_a","push","_b"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/history/util.ts"],"sourcesContent":["import { isObject } from '@antv/util';\nimport type { RuntimeContext } from '../../runtime/types';\nimport type { DataChange, DataChanges, ElementDatum } from '../../types';\nimport type { Command } from '../../types/history';\nimport { inferDefaultValue } from '../../utils/animation';\nimport { groupByChangeType, reduceDataChanges } from '../../utils/change';\nimport { idOf } from '../../utils/id';\n\n/**\n * <zh/> 对齐两个对象的字段。若目标对象缺少字段，则会添加默认值。\n *\n * <en/> Align the fields of two objects. If the target object lacks fields, default values will be added.\n * @param refObject - <zh/> 参考对象 ｜ <en/> Reference object\n * @param targetObject - <zh/> 目标对象 ｜ <en/> Target object\n */\nexport function alignFields(refObject: Record<string, any>, targetObject: Record<string, any>) {\n  for (const key in refObject) {\n    if (isObject(refObject[key]) && !Array.isArray(refObject[key]) && refObject[key] !== null) {\n      if (!targetObject[key]) targetObject[key] = {};\n      alignFields(refObject[key], targetObject[key]);\n    } else if (targetObject[key] === undefined) {\n      targetObject[key] = inferDefaultValue(key);\n    }\n  }\n}\n\n/**\n * <zh/> 解析数据变更为历史记录命令\n *\n * <en/> Parse data changes into history commands\n * @param changes - <zh/> 数据变更 ｜ <en/> Data changes\n * @param animation - <zh/> 是否开启动画 ｜ <en/> Whether to enable animation\n * @param context - <zh/> 运行时上下文 ｜ <en/> Runtime context\n * @returns <zh/> 历史记录命令 ｜ <en/> History command\n */\nexport function parseCommand(changes: DataChange[], animation = false, context?: RuntimeContext): Command {\n  const cmd = {\n    animation,\n    current: { add: {}, update: {}, remove: {} },\n    original: { add: {}, update: {}, remove: {} },\n  } as Command;\n\n  const { add, update, remove } = groupByChangeType(reduceDataChanges(changes));\n\n  (['nodes', 'edges', 'combos'] as const).forEach((category) => {\n    if (update[category]) {\n      update[category].forEach((item: DataChanges['update'][typeof category][number]) => {\n        const newValue = { ...item.value };\n        let newOriginal = { ...item.original };\n        if (context) {\n          // 特殊处理：获取元素原始 color\n          const itemType = context.graph.getElementType(idOf(item.original));\n          const colorKey = itemType === 'edge' ? 'stroke' : 'fill';\n          const style = context.element!.getElementComputedStyle(itemType, item.original);\n          newOriginal = {\n            ...item.original,\n            style: { [colorKey]: style[colorKey], ...item.original.style },\n          } as ElementDatum;\n        }\n        alignFields(newValue, newOriginal);\n        cmd.current.update[category] ||= [];\n        (cmd.current.update[category] as ElementDatum[]).push(newValue);\n        cmd.original.update[category] ||= [];\n        (cmd.original.update[category] as ElementDatum[]).push(newOriginal);\n      });\n    }\n\n    if (add[category]) {\n      add[category].forEach((item: DataChanges['add'][typeof category][number]) => {\n        const newValue = { ...item.value };\n        cmd.current.add[category] ||= [];\n        (cmd.current.add[category] as ElementDatum[]).push(newValue);\n        cmd.original.remove[category] ||= [];\n        (cmd.original.remove[category] as ElementDatum[]).push(newValue);\n      });\n    }\n\n    if (remove[category]) {\n      remove[category].forEach((item: DataChanges['remove'][typeof category][number]) => {\n        const newValue = { ...item.value };\n        cmd.current.remove[category] ||= [];\n        (cmd.current.remove[category] as ElementDatum[]).push(newValue);\n        cmd.original.add[category] ||= [];\n        (cmd.original.add[category] as ElementDatum[]).push(newValue);\n      });\n    }\n  });\n\n  return cmd;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}