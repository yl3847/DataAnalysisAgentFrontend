{"ast":null,"code":"import { ANNOTATION_LIST } from '../constants';\nimport { ConversionTag } from './conversion-tag';\nimport { BidirectionalBarAxisText } from './bidirectional-bar-axis-text';\nvar Annotaion = {\n  ConversionTag: ConversionTag,\n  BidirectionalBarAxisText: BidirectionalBarAxisText\n};\nvar Controller = /** @class */function () {\n  function Controller(chart, config) {\n    this.container = new Map();\n    this.chart = chart;\n    this.config = config;\n    this.init();\n  }\n  Controller.prototype.init = function () {\n    var _this = this;\n    ANNOTATION_LIST.forEach(function (annotation) {\n      var _a;\n      var key = annotation.key,\n        shape = annotation.shape;\n      var annotationOptions = _this.config[key];\n      if (annotationOptions) {\n        var annotationInstance = new Annotaion[shape](_this.chart, annotationOptions);\n        var canvas = _this.chart.getContext().canvas;\n        canvas.appendChild(annotationInstance);\n        _this.container.set(key, annotationInstance);\n      } else {\n        (_a = _this.container.get(key)) === null || _a === void 0 ? void 0 : _a.clear();\n      }\n    });\n  };\n  /**\n   * Update annotaions\n   */\n  Controller.prototype.update = function () {\n    var _this = this;\n    if (!this.container.size) return;\n    ANNOTATION_LIST.forEach(function (annotation) {\n      var key = annotation.key;\n      var annotationInstance = _this.container.get(key);\n      annotationInstance === null || annotationInstance === void 0 ? void 0 : annotationInstance.update();\n    });\n  };\n  /**\n   * Dws the annotations\n   */\n  Controller.prototype.destroy = function () {\n    this.container.forEach(function (annotationInstance) {\n      annotationInstance.destroy();\n    });\n    this.container.clear();\n  };\n  return Controller;\n}();\nexport { Controller };","map":{"version":3,"names":["ANNOTATION_LIST","ConversionTag","BidirectionalBarAxisText","Annotaion","Controller","chart","config","container","Map","init","prototype","_this","forEach","annotation","_a","key","shape","annotationOptions","annotationInstance","canvas","getContext","appendChild","set","get","clear","update","size","destroy"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@ant-design/plots/es/core/annotation/index.js"],"sourcesContent":["import { ANNOTATION_LIST } from '../constants';\nimport { ConversionTag } from './conversion-tag';\nimport { BidirectionalBarAxisText } from './bidirectional-bar-axis-text';\nvar Annotaion = { ConversionTag: ConversionTag, BidirectionalBarAxisText: BidirectionalBarAxisText };\nvar Controller = /** @class */ (function () {\n    function Controller(chart, config) {\n        this.container = new Map();\n        this.chart = chart;\n        this.config = config;\n        this.init();\n    }\n    Controller.prototype.init = function () {\n        var _this = this;\n        ANNOTATION_LIST.forEach(function (annotation) {\n            var _a;\n            var key = annotation.key, shape = annotation.shape;\n            var annotationOptions = _this.config[key];\n            if (annotationOptions) {\n                var annotationInstance = new Annotaion[shape](_this.chart, annotationOptions);\n                var canvas = _this.chart.getContext().canvas;\n                canvas.appendChild(annotationInstance);\n                _this.container.set(key, annotationInstance);\n            }\n            else {\n                (_a = _this.container.get(key)) === null || _a === void 0 ? void 0 : _a.clear();\n            }\n        });\n    };\n    /**\n     * Update annotaions\n     */\n    Controller.prototype.update = function () {\n        var _this = this;\n        if (!this.container.size)\n            return;\n        ANNOTATION_LIST.forEach(function (annotation) {\n            var key = annotation.key;\n            var annotationInstance = _this.container.get(key);\n            annotationInstance === null || annotationInstance === void 0 ? void 0 : annotationInstance.update();\n        });\n    };\n    /**\n     * Dws the annotations\n     */\n    Controller.prototype.destroy = function () {\n        this.container.forEach(function (annotationInstance) {\n            annotationInstance.destroy();\n        });\n        this.container.clear();\n    };\n    return Controller;\n}());\nexport { Controller };\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,cAAc;AAC9C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,IAAIC,SAAS,GAAG;EAAEF,aAAa,EAAEA,aAAa;EAAEC,wBAAwB,EAAEA;AAAyB,CAAC;AACpG,IAAIE,UAAU,GAAG,aAAe,YAAY;EACxC,SAASA,UAAUA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAC/B,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACG,IAAI,CAAC,CAAC;EACf;EACAL,UAAU,CAACM,SAAS,CAACD,IAAI,GAAG,YAAY;IACpC,IAAIE,KAAK,GAAG,IAAI;IAChBX,eAAe,CAACY,OAAO,CAAC,UAAUC,UAAU,EAAE;MAC1C,IAAIC,EAAE;MACN,IAAIC,GAAG,GAAGF,UAAU,CAACE,GAAG;QAAEC,KAAK,GAAGH,UAAU,CAACG,KAAK;MAClD,IAAIC,iBAAiB,GAAGN,KAAK,CAACL,MAAM,CAACS,GAAG,CAAC;MACzC,IAAIE,iBAAiB,EAAE;QACnB,IAAIC,kBAAkB,GAAG,IAAIf,SAAS,CAACa,KAAK,CAAC,CAACL,KAAK,CAACN,KAAK,EAAEY,iBAAiB,CAAC;QAC7E,IAAIE,MAAM,GAAGR,KAAK,CAACN,KAAK,CAACe,UAAU,CAAC,CAAC,CAACD,MAAM;QAC5CA,MAAM,CAACE,WAAW,CAACH,kBAAkB,CAAC;QACtCP,KAAK,CAACJ,SAAS,CAACe,GAAG,CAACP,GAAG,EAAEG,kBAAkB,CAAC;MAChD,CAAC,MACI;QACD,CAACJ,EAAE,GAAGH,KAAK,CAACJ,SAAS,CAACgB,GAAG,CAACR,GAAG,CAAC,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACU,KAAK,CAAC,CAAC;MACnF;IACJ,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACIpB,UAAU,CAACM,SAAS,CAACe,MAAM,GAAG,YAAY;IACtC,IAAId,KAAK,GAAG,IAAI;IAChB,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACmB,IAAI,EACpB;IACJ1B,eAAe,CAACY,OAAO,CAAC,UAAUC,UAAU,EAAE;MAC1C,IAAIE,GAAG,GAAGF,UAAU,CAACE,GAAG;MACxB,IAAIG,kBAAkB,GAAGP,KAAK,CAACJ,SAAS,CAACgB,GAAG,CAACR,GAAG,CAAC;MACjDG,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACO,MAAM,CAAC,CAAC;IACvG,CAAC,CAAC;EACN,CAAC;EACD;AACJ;AACA;EACIrB,UAAU,CAACM,SAAS,CAACiB,OAAO,GAAG,YAAY;IACvC,IAAI,CAACpB,SAAS,CAACK,OAAO,CAAC,UAAUM,kBAAkB,EAAE;MACjDA,kBAAkB,CAACS,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC;IACF,IAAI,CAACpB,SAAS,CAACiB,KAAK,CAAC,CAAC;EAC1B,CAAC;EACD,OAAOpB,UAAU;AACrB,CAAC,CAAC,CAAE;AACJ,SAASA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}