{"ast":null,"code":"import { __awaiter, __rest } from \"tslib\";\nimport EventEmitter from '@antv/event-emitter';\nimport { isFunction } from '@antv/util';\nimport * as Comlink from 'comlink';\n/**\n * @example\n * const graph = new Graph();\n * const layout = new CircularLayout();\n *\n * const supervisor = new Supervisor(graph, layout, { iterations: 1000 });\n * const positions = await supervisor.execute();\n * supervisor.stop();\n * supervisor.kill();\n */\nexport class Supervisor extends EventEmitter {\n  constructor(graph, layout, options) {\n    super();\n    this.graph = graph;\n    this.layout = layout;\n    this.options = options;\n    this.spawnWorker();\n  }\n  spawnWorker() {\n    this.proxy = Comlink.wrap(\n    // @ts-ignore\n    new Worker(new URL('./worker.js', import.meta.url), {\n      type: 'module'\n    }));\n    if (this.running) {\n      this.running = false;\n      this.execute();\n    }\n  }\n  execute() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.running) return this;\n      this.running = true;\n      // Payload should include nodes & edges(if needed).\n      const _b = this.layout.options,\n        {\n          onTick\n        } = _b,\n        rest = __rest(_b, [\"onTick\"]);\n      const noFunctionOptions = {};\n      Object.keys(rest).forEach(name => {\n        if (!isFunction(rest[name])) noFunctionOptions[name] = rest[name];\n      });\n      const payload = {\n        layout: {\n          id: this.layout.id,\n          options: noFunctionOptions,\n          iterations: (_a = this.options) === null || _a === void 0 ? void 0 : _a.iterations\n        },\n        nodes: this.graph.getAllNodes(),\n        edges: this.graph.getAllEdges()\n      };\n      /**\n       * TODO: Convert graph object to linear memory(e.g. csr, adjacency matrix), then transfer the ownership to worker.\n       * @example\n       * const arraybufferWithNodesEdges = graphToByteArrays(this.graph); // Float32Array\n       */\n      const arraybufferWithNodesEdges = new Float32Array([0]);\n      // TODO: Support transferables.\n      // @see https://www.npmjs.com/package/@naoak/workerize-transferable\n      // setupTransferableMethodsOnMain(this.worker, {\n      //   calculateLayout: {\n      //     // pick a transferable object from the method parameters\n      //     pickTransferablesFromParams: (params) => [params[1].buffer],\n      //   },\n      // });\n      const [positions] = yield this.proxy.calculateLayout(payload, [arraybufferWithNodesEdges]);\n      return positions;\n    });\n  }\n  stop() {\n    this.running = false;\n    // trigger `layout.stop()` if needed\n    this.proxy.stopLayout();\n    return this;\n  }\n  kill() {\n    // allow the GC to collect wrapper port\n    // @see https://github.com/GoogleChromeLabs/comlink#comlinkreleaseproxy\n    this.proxy[Comlink.releaseProxy]();\n    // TODO: unbind listeners on graph.\n    // TODO: release attached memory\n  }\n  isRunning() {\n    return this.running;\n  }\n}","map":{"version":3,"names":["EventEmitter","isFunction","Comlink","Supervisor","constructor","graph","layout","options","spawnWorker","proxy","wrap","Worker","URL","import","meta","url","type","running","execute","_b","onTick","rest","__rest","noFunctionOptions","Object","keys","forEach","name","payload","id","iterations","_a","nodes","getAllNodes","edges","getAllEdges","arraybufferWithNodesEdges","Float32Array","positions","calculateLayout","stop","stopLayout","kill","releaseProxy","isRunning"],"sources":["../src/supervisor.ts"],"sourcesContent":[null],"mappings":";AAAA,OAAOA,YAAY,MAAM,qBAAqB;AAE9C,SAASC,UAAU,QAAQ,YAAY;AACvC,OAAO,KAAKC,OAAO,MAAM,SAAS;AAuBlC;;;;;;;;;;AAUA,OAAM,MAAOC,UAAW,SAAQH,YAAY;EAW1CI,YACUC,KAAsB,EACtBC,MAAmB,EACnBC,OAAoC;IAE5C,KAAK,EAAE;IAJC,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IAIf,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT,IAAI,CAACC,KAAK,GAAGP,OAAO,CAACQ,IAAI;IACvB;IACA,IAAIC,MAAM,CAAC,IAAIC,GAAG,CAAC,aAAa,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAQ,CAAE,CAAC,CACxE;IAED,IAAI,IAAI,CAACC,OAAO,EAAE;MAChB,IAAI,CAACA,OAAO,GAAG,KAAK;MACpB,IAAI,CAACC,OAAO,EAAE;;EAElB;EAEMA,OAAOA,CAAA;;;MACX,IAAI,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;MAE7B,IAAI,CAACA,OAAO,GAAG,IAAI;MAEnB;MACA,MAAME,EAAA,GAAsB,IAAI,CAACb,MAAM,CAACC,OAAO;QAAzC;UAAEa;QAAM,IAAAD,EAAiC;QAA5BE,IAAI,GAAAC,MAAA,CAAAH,EAAA,EAAjB,UAAmB,CAAsB;MAC/C,MAAMI,iBAAiB,GAAQ,EAAE;MACjCC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,OAAO,CAAEC,IAAI,IAAI;QACjC,IAAI,CAAC1B,UAAU,CAACoB,IAAI,CAACM,IAAI,CAAC,CAAC,EAAEJ,iBAAiB,CAACI,IAAI,CAAC,GAAGN,IAAI,CAACM,IAAI,CAAC;MACnE,CAAC,CAAC;MACF,MAAMC,OAAO,GAAG;QACdtB,MAAM,EAAE;UACNuB,EAAE,EAAE,IAAI,CAACvB,MAAM,CAACuB,EAAE;UAClBtB,OAAO,EAAEgB,iBAAiB;UAC1BO,UAAU,EAAE,CAAAC,EAAA,OAAI,CAACxB,OAAO,cAAAwB,EAAA,uBAAAA,EAAA,CAAED;SAC3B;QACDE,KAAK,EAAE,IAAI,CAAC3B,KAAK,CAAC4B,WAAW,EAAE;QAC/BC,KAAK,EAAE,IAAI,CAAC7B,KAAK,CAAC8B,WAAW;OAC9B;MAED;;;;;MAKA,MAAMC,yBAAyB,GAAG,IAAIC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;MAEvD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA,MAAM,CAACC,SAAS,CAAC,GAAG,MAAM,IAAI,CAAC7B,KAAK,CAAC8B,eAAe,CAACX,OAAO,EAAE,CAC5DQ,yBAAyB,CAC1B,CAAC;MAEF,OAAOE,SAAS;;;EAGlBE,IAAIA,CAAA;IACF,IAAI,CAACvB,OAAO,GAAG,KAAK;IAEpB;IACA,IAAI,CAACR,KAAK,CAACgC,UAAU,EAAE;IAEvB,OAAO,IAAI;EACb;EAEAC,IAAIA,CAAA;IACF;IACA;IACA,IAAI,CAACjC,KAAK,CAACP,OAAO,CAACyC,YAAY,CAAC,EAAE;IAElC;IAEA;EACF;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAAC3B,OAAO;EACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}