{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isFunction } from '@antv/util';\nimport { CommonEvent } from '../constants';\nimport { isCollapsed } from '../utils/collapsibility';\nimport { isElement } from '../utils/element';\nimport { BaseBehavior } from './base-behavior';\n/**\n * <zh/> 展开/收起元素交互\n *\n * <en/> Collapse/Expand Element behavior\n * @remarks\n * <zh/> 通过操作展开/收起元素。\n *\n * <en/> Expand/collapse elements by operation.\n */\nexport class CollapseExpand extends BaseBehavior {\n  constructor(context, options) {\n    super(context, Object.assign({}, CollapseExpand.defaultOptions, options));\n    this.onCollapseExpand = event => __awaiter(this, void 0, void 0, function* () {\n      if (!this.validate(event)) return;\n      const {\n        target\n      } = event;\n      if (!isElement(target)) return;\n      const id = target.id;\n      const {\n        model,\n        graph\n      } = this.context;\n      const data = model.getElementDataById(id);\n      if (!data) return false;\n      const {\n        onCollapse,\n        onExpand,\n        animation,\n        align\n      } = this.options;\n      if (isCollapsed(data)) {\n        yield graph.expandElement(id, {\n          animation,\n          align\n        });\n        onExpand === null || onExpand === void 0 ? void 0 : onExpand(id);\n      } else {\n        yield graph.collapseElement(id, {\n          animation,\n          align\n        });\n        onCollapse === null || onCollapse === void 0 ? void 0 : onCollapse(id);\n      }\n    });\n    this.bindEvents();\n  }\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n  bindEvents() {\n    const {\n      graph\n    } = this.context;\n    const {\n      trigger\n    } = this.options;\n    graph.on(`node:${trigger}`, this.onCollapseExpand);\n    graph.on(`combo:${trigger}`, this.onCollapseExpand);\n  }\n  unbindEvents() {\n    const {\n      graph\n    } = this.context;\n    const {\n      trigger\n    } = this.options;\n    graph.off(`node:${trigger}`, this.onCollapseExpand);\n    graph.off(`combo:${trigger}`, this.onCollapseExpand);\n  }\n  validate(event) {\n    if (this.destroyed) return false;\n    const {\n      enable\n    } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n  destroy() {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\nCollapseExpand.defaultOptions = {\n  enable: true,\n  animation: true,\n  trigger: CommonEvent.DBLCLICK,\n  align: true\n};","map":{"version":3,"names":["isFunction","CommonEvent","isCollapsed","isElement","BaseBehavior","CollapseExpand","constructor","context","options","Object","assign","defaultOptions","onCollapseExpand","event","__awaiter","validate","target","id","model","graph","data","getElementDataById","onCollapse","onExpand","animation","align","expandElement","collapseElement","bindEvents","update","unbindEvents","trigger","on","off","destroyed","enable","destroy","DBLCLICK"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/behaviors/collapse-expand.ts"],"sourcesContent":["import { isFunction } from '@antv/util';\nimport { CommonEvent } from '../constants';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { ID, IPointerEvent, NodeLikeData } from '../types';\nimport { isCollapsed } from '../utils/collapsibility';\nimport { isElement } from '../utils/element';\nimport type { BaseBehaviorOptions } from './base-behavior';\nimport { BaseBehavior } from './base-behavior';\n\n/**\n * <zh/> 展开/收起元素交互配置项\n *\n * <en/> Collapse/Expand combo behavior options\n */\nexport interface CollapseExpandOptions extends BaseBehaviorOptions {\n  /**\n   * <zh/> 是否启用动画\n   *\n   * <en/> Whether to enable animation\n   * @defaultValue true\n   */\n  animation?: boolean;\n  /**\n   * <zh/> 是否启用展开/收起功能\n   *\n   * <en/> Whether to enable the expand/collapse function\n   * @defaultValue true\n   */\n  enable?: boolean | ((event: IPointerEvent) => boolean);\n  /**\n   * <zh/> 触发方式\n   *\n   * <en/> Trigger method\n   * @defaultValue 'dblclick'\n   */\n  trigger?: CommonEvent.CLICK | CommonEvent.DBLCLICK;\n  /**\n   * <zh/> 完成收起时的回调\n   *\n   * <en/> Callback when collapse is completed\n   */\n  onCollapse?: (id: ID) => void;\n  /**\n   * <zh/> 完成展开时的回调\n   *\n   * <en/> Callback when expand is completed\n   */\n  onExpand?: (id: ID) => void;\n  /**\n   * <zh/> 是否对准目标元素，避免视图偏移\n   *\n   * <en/> Whether to focus on the target element to avoid view offset\n   */\n  align?: boolean;\n}\n\n/**\n * <zh/> 展开/收起元素交互\n *\n * <en/> Collapse/Expand Element behavior\n * @remarks\n * <zh/> 通过操作展开/收起元素。\n *\n * <en/> Expand/collapse elements by operation.\n */\nexport class CollapseExpand extends BaseBehavior<CollapseExpandOptions> {\n  static defaultOptions: Partial<CollapseExpandOptions> = {\n    enable: true,\n    animation: true,\n    trigger: CommonEvent.DBLCLICK,\n    align: true,\n  };\n\n  constructor(context: RuntimeContext, options: CollapseExpandOptions) {\n    super(context, Object.assign({}, CollapseExpand.defaultOptions, options));\n\n    this.bindEvents();\n  }\n\n  public update(options: Partial<CollapseExpandOptions>) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  private bindEvents() {\n    const { graph } = this.context;\n    const { trigger } = this.options;\n    graph.on(`node:${trigger}`, this.onCollapseExpand);\n    graph.on(`combo:${trigger}`, this.onCollapseExpand);\n  }\n\n  private unbindEvents() {\n    const { graph } = this.context;\n    const { trigger } = this.options;\n    graph.off(`node:${trigger}`, this.onCollapseExpand);\n    graph.off(`combo:${trigger}`, this.onCollapseExpand);\n  }\n\n  private onCollapseExpand = async (event: IPointerEvent) => {\n    if (!this.validate(event)) return;\n    const { target } = event;\n    if (!isElement(target)) return;\n\n    const id = target.id;\n    const { model, graph } = this.context;\n    const data = model.getElementDataById(id) as NodeLikeData;\n    if (!data) return false;\n\n    const { onCollapse, onExpand, animation, align } = this.options;\n    if (isCollapsed(data)) {\n      await graph.expandElement(id, { animation, align });\n      onExpand?.(id);\n    } else {\n      await graph.collapseElement(id, { animation, align });\n      onCollapse?.(id);\n    }\n  };\n\n  private validate(event: IPointerEvent): boolean {\n    if (this.destroyed) return false;\n    const { enable } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n\n  public destroy(): void {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}