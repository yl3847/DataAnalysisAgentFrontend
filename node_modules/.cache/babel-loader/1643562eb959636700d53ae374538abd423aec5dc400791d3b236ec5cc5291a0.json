{"ast":null,"code":"import { rad2deg } from '@antv/g';\nimport { idOf } from '../utils/id';\nimport { positionOf } from '../utils/position';\nimport { parseSize } from '../utils/size';\nimport { rad, subtract } from '../utils/vector';\nimport { BaseTransform } from './base-transform';\n/**\n * <zh/> 根据径向布局自动调整节点标签样式，包括位置和旋转角度\n *\n * <en/> Automatically adjust the style of node labels according to the radial layout, including position and rotation angle\n */\nexport class PlaceRadialLabels extends BaseTransform {\n  constructor(context, options) {\n    super(context, Object.assign({}, PlaceRadialLabels.defaultOptions, options));\n  }\n  get ref() {\n    return this.context.model.getRootsData()[0];\n  }\n  afterLayout() {\n    var _a;\n    const refPoint = positionOf(this.ref);\n    const {\n      graph,\n      model\n    } = this.context;\n    const data = model.getData();\n    (_a = data.nodes) === null || _a === void 0 ? void 0 : _a.forEach(datum => {\n      var _a;\n      if (idOf(datum) === idOf(this.ref)) return;\n      const radian = rad(subtract(positionOf(datum), refPoint));\n      const isLeft = Math.abs(radian) > Math.PI / 2;\n      const isLeaf = !datum.children || datum.children.length === 0;\n      const nodeId = idOf(datum);\n      const node = (_a = this.context.element) === null || _a === void 0 ? void 0 : _a.getElement(nodeId);\n      if (!node || !node.isVisible()) return;\n      const nodeHalfWidth = parseSize(graph.getElementRenderStyle(nodeId).size)[0] / 2;\n      const offset = (isLeaf ? 1 : -1) * (nodeHalfWidth + this.options.offset);\n      const labelTransform = [['translate', offset * Math.cos(radian), offset * Math.sin(radian)], ['rotate', isLeft ? rad2deg(radian) + 180 : rad2deg(radian)]];\n      model.updateNodeData([{\n        id: idOf(datum),\n        style: {\n          labelTextAlign: isLeft === isLeaf ? 'right' : 'left',\n          labelTextBaseline: 'middle',\n          labelTransform\n        }\n      }]);\n    });\n    graph.draw();\n  }\n}\nPlaceRadialLabels.defaultOptions = {\n  offset: 5\n};","map":{"version":3,"names":["rad2deg","idOf","positionOf","parseSize","rad","subtract","BaseTransform","PlaceRadialLabels","constructor","context","options","Object","assign","defaultOptions","ref","model","getRootsData","afterLayout","refPoint","graph","data","getData","_a","nodes","forEach","datum","radian","isLeft","Math","abs","PI","isLeaf","children","length","nodeId","node","element","getElement","isVisible","nodeHalfWidth","getElementRenderStyle","size","offset","labelTransform","cos","sin","updateNodeData","id","style","labelTextAlign","labelTextBaseline","draw"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/transforms/place-radial-labels.ts"],"sourcesContent":["import type { TransformArray } from '@antv/g';\nimport { rad2deg } from '@antv/g';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { NodeData } from '../spec';\nimport { idOf } from '../utils/id';\nimport { positionOf } from '../utils/position';\nimport { parseSize } from '../utils/size';\nimport { rad, subtract } from '../utils/vector';\nimport type { BaseTransformOptions } from './base-transform';\nimport { BaseTransform } from './base-transform';\n\n/**\n * <zh/> 根据径向布局自动调整节点标签样式的配置项\n *\n * <en/> Options for automatically adjusting the style of node labels according to the radial layout\n */\nexport interface PlaceRadialLabelsOptions extends BaseTransformOptions {\n  /**\n   * <zh/> 偏移量\n   *\n   * <en/> Offset\n   */\n  offset?: number;\n}\n\n/**\n * <zh/> 根据径向布局自动调整节点标签样式，包括位置和旋转角度\n *\n * <en/> Automatically adjust the style of node labels according to the radial layout, including position and rotation angle\n */\nexport class PlaceRadialLabels extends BaseTransform<PlaceRadialLabelsOptions> {\n  static defaultOptions: Partial<PlaceRadialLabelsOptions> = {\n    offset: 5,\n  };\n\n  constructor(context: RuntimeContext, options: PlaceRadialLabelsOptions) {\n    super(context, Object.assign({}, PlaceRadialLabels.defaultOptions, options));\n  }\n\n  private get ref(): NodeData {\n    return this.context.model.getRootsData()[0];\n  }\n\n  public afterLayout() {\n    const refPoint = positionOf(this.ref);\n\n    const { graph, model } = this.context;\n    const data = model.getData();\n\n    data.nodes?.forEach((datum) => {\n      if (idOf(datum) === idOf(this.ref)) return;\n\n      const radian = rad(subtract(positionOf(datum), refPoint));\n      const isLeft = Math.abs(radian) > Math.PI / 2;\n\n      const isLeaf = !datum.children || datum.children.length === 0;\n      const nodeId = idOf(datum);\n      const node = this.context.element?.getElement(nodeId);\n      if (!node || !node.isVisible()) return;\n\n      const nodeHalfWidth = parseSize(graph.getElementRenderStyle(nodeId).size)[0] / 2;\n      const offset = (isLeaf ? 1 : -1) * (nodeHalfWidth + this.options.offset);\n\n      const labelTransform: TransformArray = [\n        ['translate', offset * Math.cos(radian), offset * Math.sin(radian)],\n        ['rotate', isLeft ? rad2deg(radian) + 180 : rad2deg(radian)],\n      ];\n\n      model.updateNodeData([\n        {\n          id: idOf(datum),\n          style: {\n            labelTextAlign: isLeft === isLeaf ? 'right' : 'left',\n            labelTextBaseline: 'middle',\n            labelTransform,\n          },\n        },\n      ]);\n    });\n\n    graph.draw();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}