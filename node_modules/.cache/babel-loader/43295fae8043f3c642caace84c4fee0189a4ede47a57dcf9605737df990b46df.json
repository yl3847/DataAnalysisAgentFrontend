{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { isEmpty, isFunction, isNumber } from '@antv/util';\nimport { GraphEvent } from '../constants';\nimport { idOf } from '../utils/id';\nimport { getDescendantShapes } from '../utils/shape';\nimport { BaseBehavior } from './base-behavior';\n/**\n * <zh/> 缩放画布过程中固定元素大小\n *\n * <en/> Fix element size while zooming\n */\nexport class FixElementSize extends BaseBehavior {\n  constructor(context, options) {\n    super(context, Object.assign({}, FixElementSize.defaultOptions, options));\n    this.isZoomEvent = event => Boolean(event.data && 'scale' in event.data);\n    this.relatedEdgeToUpdate = new Set();\n    this.zoom = this.context.graph.getZoom();\n    this.fixElementSize = event => __awaiter(this, void 0, void 0, function* () {\n      if (!this.validate(event)) return;\n      const {\n        graph\n      } = this.context;\n      const {\n        state,\n        nodeFilter,\n        edgeFilter,\n        comboFilter\n      } = this.options;\n      const nodeData = (state ? graph.getElementDataByState('node', state) : graph.getNodeData()).filter(nodeFilter);\n      const edgeData = (state ? graph.getElementDataByState('edge', state) : graph.getEdgeData()).filter(edgeFilter);\n      const comboData = (state ? graph.getElementDataByState('combo', state) : graph.getComboData()).filter(comboFilter);\n      // 设置阈值防止过大或过小时抖动 | Set the threshold to prevent jitter when too large or too small\n      const currentScale = this.isZoomEvent(event) ? this.zoom = Math.max(0.01, Math.min(event.data.scale, 10)) : this.zoom;\n      const nodeLikeData = [...nodeData, ...comboData];\n      if (nodeLikeData.length > 0) {\n        nodeLikeData.forEach(datum => this.fixNodeLike(datum, currentScale));\n      }\n      this.updateRelatedEdges();\n      if (edgeData.length > 0) {\n        edgeData.forEach(datum => this.fixEdge(datum, currentScale));\n      }\n    });\n    this.cachedStyles = new Map();\n    this.getOriginalFieldValue = (id, shape, field) => {\n      var _a;\n      const shapesStyle = this.cachedStyles.get(id) || [];\n      const shapeStyle = ((_a = shapesStyle.find(style => style.shape === shape)) === null || _a === void 0 ? void 0 : _a.style) || {};\n      if (!(field in shapeStyle)) {\n        shapeStyle[field] = shape.attributes[field];\n        this.cachedStyles.set(id, [...shapesStyle.filter(style => style.shape !== shape), {\n          shape,\n          style: shapeStyle\n        }]);\n      }\n      return shapeStyle[field];\n    };\n    this.scaleEntireElement = (id, el, currentScale) => {\n      el.setLocalScale(1 / currentScale);\n      const shapesStyle = this.cachedStyles.get(id) || [];\n      shapesStyle.push({\n        shape: el\n      });\n      this.cachedStyles.set(id, shapesStyle);\n    };\n    this.scaleSpecificShapes = (el, currentScale, config) => {\n      const descendantShapes = getDescendantShapes(el);\n      const configs = Array.isArray(config) ? config : [config];\n      configs.forEach(config => {\n        const {\n          shape: shapeFilter,\n          fields\n        } = config;\n        const shape = typeof shapeFilter === 'function' ? shapeFilter(descendantShapes) : el.getShape(shapeFilter);\n        if (!shape) return;\n        if (!fields) {\n          this.scaleEntireElement(el.id, shape, currentScale);\n          return;\n        }\n        fields.forEach(field => {\n          const oriFieldValue = this.getOriginalFieldValue(el.id, shape, field);\n          if (!isNumber(oriFieldValue)) return;\n          shape.style[field] = oriFieldValue / currentScale;\n        });\n      });\n    };\n    this.skipIfExceedViewport = el => {\n      const {\n        viewport\n      } = this.context;\n      return !(viewport === null || viewport === void 0 ? void 0 : viewport.isInViewport(el.getRenderBounds(), false, 30));\n    };\n    this.fixNodeLike = (datum, currentScale) => {\n      const id = idOf(datum);\n      const {\n        element,\n        model\n      } = this.context;\n      const el = element.getElement(id);\n      if (!el || this.skipIfExceedViewport(el)) return;\n      const edges = model.getRelatedEdgesData(id);\n      edges.forEach(edge => this.relatedEdgeToUpdate.add(idOf(edge)));\n      const config = this.options[el.type];\n      if (!config) {\n        this.scaleEntireElement(id, el, currentScale);\n        return;\n      }\n      this.scaleSpecificShapes(el, currentScale, config);\n    };\n    this.fixEdge = (datum, currentScale) => {\n      const id = idOf(datum);\n      const el = this.context.element.getElement(id);\n      if (!el || this.skipIfExceedViewport(el)) return;\n      const config = this.options.edge;\n      if (!config) {\n        el.style.transformOrigin = 'center';\n        this.scaleEntireElement(id, el, currentScale);\n        return;\n      }\n      this.scaleSpecificShapes(el, currentScale, config);\n    };\n    this.updateRelatedEdges = () => {\n      const {\n        element\n      } = this.context;\n      if (this.relatedEdgeToUpdate.size > 0) {\n        this.relatedEdgeToUpdate.forEach(id => {\n          const edge = element.getElement(id);\n          edge === null || edge === void 0 ? void 0 : edge.update({});\n        });\n      }\n      this.relatedEdgeToUpdate.clear();\n    };\n    this.resetTransform = event => __awaiter(this, void 0, void 0, function* () {\n      var _a;\n      // 首屏渲染时跳过 | Skip when rendering the first screen\n      if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.firstRender) return;\n      if (this.options.reset) {\n        this.restoreCachedStyles();\n      } else {\n        this.fixElementSize({\n          data: {\n            scale: this.zoom\n          }\n        });\n      }\n    });\n    this.bindEvents();\n  }\n  restoreCachedStyles() {\n    if (this.cachedStyles.size > 0) {\n      this.cachedStyles.forEach(shapesStyle => {\n        shapesStyle.forEach(({\n          shape,\n          style\n        }) => {\n          if (isEmpty(style)) {\n            shape.setLocalScale(1);\n          } else {\n            if (this.options.state) return;\n            Object.entries(style).forEach(([field, value]) => shape.style[field] = value);\n          }\n        });\n      });\n      const {\n        graph,\n        element\n      } = this.context;\n      const nodeIds = Object.keys(Object.fromEntries(this.cachedStyles)).filter(id => id && graph.getElementType(id) === 'node');\n      if (nodeIds.length > 0) {\n        const edgeIds = new Set();\n        nodeIds.forEach(id => {\n          graph.getRelatedEdgesData(id).forEach(edge => edgeIds.add(idOf(edge)));\n        });\n        edgeIds.forEach(id => {\n          const edge = element === null || element === void 0 ? void 0 : element.getElement(id);\n          edge === null || edge === void 0 ? void 0 : edge.update({});\n        });\n      }\n    }\n    // this.cachedStyles.clear();\n  }\n  bindEvents() {\n    const {\n      graph\n    } = this.context;\n    graph.on(GraphEvent.AFTER_DRAW, this.resetTransform);\n    graph.on(GraphEvent.AFTER_TRANSFORM, this.fixElementSize);\n  }\n  unbindEvents() {\n    const {\n      graph\n    } = this.context;\n    graph.off(GraphEvent.AFTER_DRAW, this.resetTransform);\n    graph.off(GraphEvent.AFTER_TRANSFORM, this.fixElementSize);\n  }\n  validate(event) {\n    if (this.destroyed) return false;\n    const {\n      enable\n    } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n  destroy() {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\nFixElementSize.defaultOptions = {\n  enable: event => event.data.scale < 1,\n  nodeFilter: () => true,\n  edgeFilter: () => true,\n  comboFilter: () => true,\n  edge: [{\n    shape: 'key',\n    fields: ['lineWidth']\n  }, {\n    shape: 'halo',\n    fields: ['lineWidth']\n  }, {\n    shape: 'label'\n  }],\n  reset: false\n};","map":{"version":3,"names":["isEmpty","isFunction","isNumber","GraphEvent","idOf","getDescendantShapes","BaseBehavior","FixElementSize","constructor","context","options","Object","assign","defaultOptions","isZoomEvent","event","Boolean","data","relatedEdgeToUpdate","Set","zoom","graph","getZoom","fixElementSize","__awaiter","validate","state","nodeFilter","edgeFilter","comboFilter","nodeData","getElementDataByState","getNodeData","filter","edgeData","getEdgeData","comboData","getComboData","currentScale","Math","max","min","scale","nodeLikeData","length","forEach","datum","fixNodeLike","updateRelatedEdges","fixEdge","cachedStyles","Map","getOriginalFieldValue","id","shape","field","shapesStyle","get","shapeStyle","_a","find","style","attributes","set","scaleEntireElement","el","setLocalScale","push","scaleSpecificShapes","config","descendantShapes","configs","Array","isArray","shapeFilter","fields","getShape","oriFieldValue","skipIfExceedViewport","viewport","isInViewport","getRenderBounds","element","model","getElement","edges","getRelatedEdgesData","edge","add","type","transformOrigin","size","update","clear","resetTransform","firstRender","reset","restoreCachedStyles","bindEvents","entries","value","nodeIds","keys","fromEntries","getElementType","edgeIds","on","AFTER_DRAW","AFTER_TRANSFORM","unbindEvents","off","destroyed","enable","destroy"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/behaviors/fix-element-size.ts"],"sourcesContent":["import type { DisplayObject } from '@antv/g';\nimport { isEmpty, isFunction, isNumber } from '@antv/util';\nimport { GraphEvent } from '../constants';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { ComboData, EdgeData, NodeData } from '../spec';\nimport type {\n  Combo,\n  Edge,\n  Element,\n  ID,\n  IGraphLifeCycleEvent,\n  IViewportEvent,\n  Node,\n  NodeLikeData,\n  State,\n} from '../types';\nimport { idOf } from '../utils/id';\nimport { getDescendantShapes } from '../utils/shape';\nimport type { BaseBehaviorOptions } from './base-behavior';\nimport { BaseBehavior } from './base-behavior';\n\nexport type FixShapeConfig = {\n  /**\n   * <zh/> 指定要固定大小的图形，可以是图形的类名字，或者是一个函数，该函数接收构成元素的所有图形并返回目标图形\n   *\n   * <en/> Specify the shape to be fixed in size. This can be a class name string of the shape, or a function that takes all shapes composing the element and returns the target shape\n   */\n  shape: string | ((shapes: DisplayObject[]) => DisplayObject);\n  /**\n   * <zh/> 指定要固定大小的图形属性字段。如果未指定，则默认固定整个图形的大小\n   *\n   * <en/> Specify the fields of the shape to be fixed in size. If not specified, the entire shape's size will be fixed by default\n   */\n  fields?: string[];\n};\n\n/**\n * <zh/> 固定元素大小交互配置项\n *\n * <en/> Fix element size behavior options\n */\nexport interface FixElementSizeOptions extends BaseBehaviorOptions {\n  /**\n   * <zh/> 是否启用固定元素大小交互。默认在缩小画布时启用\n   *\n   * <en/> Whether to enable the fix element size behavior. Enabled by default when zooming out\n   * @remarks\n   * <zh/> 默认在缩小画布时启用，设置 `enable: (event) => event.data.scale < 1`；如果希望在放大画布时启用，设置 `enable: (event) => event.data.scale > 1`；如果希望在放大缩小画布时都启用，设置 `enable: true`\n   *\n   * <en/> Enabled by default when zooming out, set `enable: (event) => event.data.scale < 1`; If you want to enable it when zooming in, set `enable: (event) => event.data.scale > 1`; If you want to enable it when zooming in and out, set `enable: true`\n   * @defaultValue (event) => Boolean(event.data.scale < 1)\n   */\n  enable?: boolean | ((event: IViewportEvent) => boolean);\n  /**\n   * <zh/> 指定要固定大小的元素状态\n   *\n   * <en/> Specify the state of elements to be fixed in size\n   * @defaultValue `'selected'`\n   */\n  state?: State;\n  /**\n   * <zh/> 节点过滤器，用于过滤哪些节点在缩放过程中保持固定大小\n   *\n   * <en/> Node filter for filtering which nodes remain fixed in size during zooming\n   * @defaultValue () => true\n   */\n  nodeFilter?: (datum: NodeData) => boolean;\n  /**\n   * <zh/> 边过滤器，用于过滤哪些边在缩放过程中保持固定大小\n   *\n   * <en/> Edge filter for filtering which edges remain fixed in size during zooming\n   * @defaultValue () => true\n   */\n  edgeFilter?: (datum: EdgeData) => boolean;\n  /**\n   * <zh/> Combo 过滤器，用于过滤哪些 Combo 在缩放过程中保持固定大小\n   *\n   * <en/> Combo filter for filtering which combos remain fixed in size during zooming\n   * @defaultValue () => true\n   */\n  comboFilter?: (datum: ComboData) => boolean;\n  /**\n   * <zh/> 节点配置项，用于定义哪些属性在视觉上保持固定大小。若未指定（即为 undefined），则整个节点将被固定\n   *\n   * <en/> Node configuration for defining which node attributes should remain fixed in size visually. If not specified (i.e., undefined), the entire node will be fixed in size.\n   * @example\n   * <zh/> 如果在缩放过程中希望固定节点主图形的 lineWidth，可以这样配置：\n   *\n   * <en/> If you want to fix the lineWidth of the key shape of the node during zooming, you can configure it like this:\n   * ```ts\n   * { node: [{ shape: 'key', fields: ['lineWidth'] }] }\n   *```\n   * <zh/> 如果在缩放过程中想保持元素标签大小不变，可以这样配置：\n   *\n   * <en/> If you want to keep the label size of the element unchanged during zooming, you can configure it like this:\n   * ```ts\n   *  { shape: 'label' }\n   * ```\n   */\n  node?: FixShapeConfig | FixShapeConfig[];\n  /**\n   * <zh/> 边配置项，用于定义哪些属性在视觉上保持固定大小。默认固定 lineWidth、labelFontSize 属性\n   *\n   * <en/> Edge configuration for defining which edge attributes should remain fixed in size visually. By default, the lineWidth and labelFontSize attributes are fixed\n   * @defaultValue [{ shape: 'key', fields: ['lineWidth'] }, { shape: 'halo', fields: ['lineWidth'] }, { shape: 'label' }]\n   */\n  edge?: FixShapeConfig | FixShapeConfig[];\n  /**\n   * <zh/> Combo 配置项，用于定义哪些属性在视觉上保持固定大小。默认整个 Combo 将被固定\n   *\n   * <en/> Combo configuration for defining which combo attributes should remain fixed in size visually. By default, the entire combo will be fixed\n   */\n  combo?: FixShapeConfig | FixShapeConfig[];\n  /**\n   * <zh/> 元素重绘时是否还原样式\n   *\n   * <en/> Whether to reset styles when elements are redrawn\n   * @defaultValue false\n   */\n  reset?: boolean;\n}\n\n/**\n * <zh/> 缩放画布过程中固定元素大小\n *\n * <en/> Fix element size while zooming\n */\nexport class FixElementSize extends BaseBehavior<FixElementSizeOptions> {\n  static defaultOptions: Partial<FixElementSizeOptions> = {\n    enable: (event: IViewportEvent) => event.data.scale! < 1,\n    nodeFilter: () => true,\n    edgeFilter: () => true,\n    comboFilter: () => true,\n    edge: [{ shape: 'key', fields: ['lineWidth'] }, { shape: 'halo', fields: ['lineWidth'] }, { shape: 'label' }],\n    reset: false,\n  };\n\n  constructor(context: RuntimeContext, options: FixElementSizeOptions) {\n    super(context, Object.assign({}, FixElementSize.defaultOptions, options));\n    this.bindEvents();\n  }\n\n  private isZoomEvent = (event: IViewportEvent) => Boolean(event.data && 'scale' in event.data);\n\n  private relatedEdgeToUpdate: Set<ID> = new Set();\n\n  private zoom = this.context.graph.getZoom();\n\n  private fixElementSize = async (event: IViewportEvent) => {\n    if (!this.validate(event)) return;\n\n    const { graph } = this.context;\n    const { state, nodeFilter, edgeFilter, comboFilter } = this.options;\n\n    const nodeData = (state ? graph.getElementDataByState('node', state) : graph.getNodeData()).filter(nodeFilter);\n    const edgeData = (state ? graph.getElementDataByState('edge', state) : graph.getEdgeData()).filter(edgeFilter);\n    const comboData = (state ? graph.getElementDataByState('combo', state) : graph.getComboData()).filter(comboFilter);\n\n    // 设置阈值防止过大或过小时抖动 | Set the threshold to prevent jitter when too large or too small\n    const currentScale = this.isZoomEvent(event)\n      ? (this.zoom = Math.max(0.01, Math.min(event.data.scale!, 10)))\n      : this.zoom;\n\n    const nodeLikeData = [...nodeData, ...comboData];\n    if (nodeLikeData.length > 0) {\n      nodeLikeData.forEach((datum) => this.fixNodeLike(datum, currentScale));\n    }\n\n    this.updateRelatedEdges();\n\n    if (edgeData.length > 0) {\n      edgeData.forEach((datum) => this.fixEdge(datum, currentScale));\n    }\n  };\n\n  private cachedStyles: Map<ID, { shape: DisplayObject; [field: string]: any }[]> = new Map();\n\n  private getOriginalFieldValue = (id: ID, shape: DisplayObject, field: string) => {\n    const shapesStyle = this.cachedStyles.get(id) || [];\n    const shapeStyle = shapesStyle.find((style) => style.shape === shape)?.style || {};\n    if (!(field in shapeStyle)) {\n      shapeStyle[field] = shape.attributes[field];\n      this.cachedStyles.set(id, [\n        ...shapesStyle.filter((style) => style.shape !== shape),\n        { shape, style: shapeStyle },\n      ]);\n    }\n    return shapeStyle[field];\n  };\n\n  private scaleEntireElement = (id: ID, el: DisplayObject, currentScale: number) => {\n    el.setLocalScale(1 / currentScale);\n    const shapesStyle = this.cachedStyles.get(id) || [];\n    shapesStyle.push({ shape: el });\n    this.cachedStyles.set(id, shapesStyle);\n  };\n\n  private scaleSpecificShapes = (el: Element, currentScale: number, config: FixShapeConfig | FixShapeConfig[]) => {\n    const descendantShapes = getDescendantShapes(el);\n    const configs = Array.isArray(config) ? config : [config];\n\n    configs.forEach((config: FixShapeConfig) => {\n      const { shape: shapeFilter, fields } = config;\n      const shape = typeof shapeFilter === 'function' ? shapeFilter(descendantShapes) : el.getShape(shapeFilter);\n\n      if (!shape) return;\n      if (!fields) {\n        this.scaleEntireElement(el.id, shape, currentScale);\n        return;\n      }\n\n      fields.forEach((field) => {\n        const oriFieldValue = this.getOriginalFieldValue(el.id, shape, field);\n        if (!isNumber(oriFieldValue)) return;\n        shape.style[field] = oriFieldValue / currentScale;\n      });\n    });\n  };\n\n  private skipIfExceedViewport = (el: Element) => {\n    const { viewport } = this.context;\n    return !viewport?.isInViewport(el.getRenderBounds(), false, 30);\n  };\n\n  private fixNodeLike = (datum: NodeLikeData, currentScale: number) => {\n    const id = idOf(datum);\n    const { element, model } = this.context;\n    const el = element!.getElement(id) as Node | Combo;\n\n    if (!el || this.skipIfExceedViewport(el)) return;\n\n    const edges = model.getRelatedEdgesData(id);\n    edges.forEach((edge) => this.relatedEdgeToUpdate.add(idOf(edge)));\n\n    const config = this.options[(el as any).type];\n    if (!config) {\n      this.scaleEntireElement(id, el, currentScale);\n      return;\n    }\n    this.scaleSpecificShapes(el, currentScale, config);\n  };\n\n  private fixEdge = (datum: EdgeData, currentScale: number) => {\n    const id = idOf(datum);\n    const el = this.context.element!.getElement(id) as Edge;\n\n    if (!el || this.skipIfExceedViewport(el)) return;\n\n    const config = this.options.edge;\n    if (!config) {\n      el.style.transformOrigin = 'center';\n      this.scaleEntireElement(id, el, currentScale);\n      return;\n    }\n    this.scaleSpecificShapes(el, currentScale, config);\n  };\n\n  private updateRelatedEdges = () => {\n    const { element } = this.context;\n    if (this.relatedEdgeToUpdate.size > 0) {\n      this.relatedEdgeToUpdate.forEach((id) => {\n        const edge = element!.getElement(id) as Edge;\n        edge?.update({});\n      });\n    }\n    this.relatedEdgeToUpdate.clear();\n  };\n\n  private restoreCachedStyles() {\n    if (this.cachedStyles.size > 0) {\n      this.cachedStyles.forEach((shapesStyle) => {\n        shapesStyle.forEach(({ shape, style }) => {\n          if (isEmpty(style)) {\n            shape.setLocalScale(1);\n          } else {\n            if (this.options.state) return;\n            Object.entries(style).forEach(([field, value]) => (shape.style[field] = value));\n          }\n        });\n      });\n      const { graph, element } = this.context;\n      const nodeIds = Object.keys(Object.fromEntries(this.cachedStyles)).filter(\n        (id) => id && graph.getElementType(id) === 'node',\n      );\n      if (nodeIds.length > 0) {\n        const edgeIds = new Set<ID>();\n        nodeIds.forEach((id) => {\n          graph.getRelatedEdgesData(id).forEach((edge) => edgeIds.add(idOf(edge)));\n        });\n        edgeIds.forEach((id) => {\n          const edge = element?.getElement(id) as Edge;\n          edge?.update({});\n        });\n      }\n    }\n    // this.cachedStyles.clear();\n  }\n\n  private resetTransform = async (event: IGraphLifeCycleEvent) => {\n    // 首屏渲染时跳过 | Skip when rendering the first screen\n    if (event.data?.firstRender) return;\n\n    if (this.options.reset) {\n      this.restoreCachedStyles();\n    } else {\n      this.fixElementSize({ data: { scale: this.zoom } } as IViewportEvent);\n    }\n  };\n\n  private bindEvents() {\n    const { graph } = this.context;\n    graph.on(GraphEvent.AFTER_DRAW, this.resetTransform);\n    graph.on(GraphEvent.AFTER_TRANSFORM, this.fixElementSize);\n  }\n\n  private unbindEvents() {\n    const { graph } = this.context;\n    graph.off(GraphEvent.AFTER_DRAW, this.resetTransform);\n    graph.off(GraphEvent.AFTER_TRANSFORM, this.fixElementSize);\n  }\n\n  private validate(event: IViewportEvent) {\n    if (this.destroyed) return false;\n    const { enable } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n\n  public destroy(): void {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}