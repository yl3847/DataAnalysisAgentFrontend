{"ast":null,"code":"import { ExtensionController } from '../registry/extension';\nimport { print } from '../utils/print';\nexport class PluginController extends ExtensionController {\n  constructor(context) {\n    super(context);\n    this.category = 'plugin';\n    this.setPlugins(this.context.options.plugins || []);\n  }\n  setPlugins(plugins) {\n    this.setExtensions(plugins);\n  }\n  getPluginInstance(key) {\n    const exactly = this.extensionMap[key];\n    if (exactly) return exactly;\n    print.warn(`Cannot find the plugin ${key}, will try to find it by type.`);\n    const fussily = this.extensions.find(extension => extension.type === key);\n    if (fussily) return this.extensionMap[fussily.key];\n  }\n}","map":{"version":3,"names":["ExtensionController","print","PluginController","constructor","context","category","setPlugins","options","plugins","setExtensions","getPluginInstance","key","exactly","extensionMap","warn","fussily","extensions","find","extension","type"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/runtime/plugin.ts"],"sourcesContent":["import type { BasePlugin } from '../plugins/base-plugin';\nimport { ExtensionController } from '../registry/extension';\nimport type { CustomPluginOption, PluginOptions } from '../spec/plugin';\nimport { print } from '../utils/print';\nimport type { RuntimeContext } from './types';\n\nexport class PluginController extends ExtensionController<BasePlugin<CustomPluginOption>> {\n  public category = 'plugin' as const;\n\n  constructor(context: RuntimeContext) {\n    super(context);\n    this.setPlugins(this.context.options.plugins || []);\n  }\n\n  public setPlugins(plugins: PluginOptions) {\n    this.setExtensions(plugins);\n  }\n\n  public getPluginInstance(key: string) {\n    const exactly = this.extensionMap[key];\n    if (exactly) return exactly;\n\n    print.warn(`Cannot find the plugin ${key}, will try to find it by type.`);\n\n    const fussily = this.extensions.find((extension) => extension.type === key);\n    if (fussily) return this.extensionMap[fussily.key];\n  }\n}\n"],"mappings":"AACA,SAASA,mBAAmB,QAAQ,uBAAuB;AAE3D,SAASC,KAAK,QAAQ,gBAAgB;AAGtC,OAAM,MAAOC,gBAAiB,SAAQF,mBAAmD;EAGvFG,YAAYC,OAAuB;IACjC,KAAK,CAACA,OAAO,CAAC;IAHT,KAAAC,QAAQ,GAAG,QAAiB;IAIjC,IAAI,CAACC,UAAU,CAAC,IAAI,CAACF,OAAO,CAACG,OAAO,CAACC,OAAO,IAAI,EAAE,CAAC;EACrD;EAEOF,UAAUA,CAACE,OAAsB;IACtC,IAAI,CAACC,aAAa,CAACD,OAAO,CAAC;EAC7B;EAEOE,iBAAiBA,CAACC,GAAW;IAClC,MAAMC,OAAO,GAAG,IAAI,CAACC,YAAY,CAACF,GAAG,CAAC;IACtC,IAAIC,OAAO,EAAE,OAAOA,OAAO;IAE3BX,KAAK,CAACa,IAAI,CAAC,0BAA0BH,GAAG,gCAAgC,CAAC;IAEzE,MAAMI,OAAO,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAAEC,SAAS,IAAKA,SAAS,CAACC,IAAI,KAAKR,GAAG,CAAC;IAC3E,IAAII,OAAO,EAAE,OAAO,IAAI,CAACF,YAAY,CAACE,OAAO,CAACJ,GAAG,CAAC;EACpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}