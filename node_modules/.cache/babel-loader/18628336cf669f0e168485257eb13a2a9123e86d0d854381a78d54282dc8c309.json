{"ast":null,"code":"import { get, set } from '@antv/util';\nconst CacheTargetKey = 'cachedStyle';\nconst getStyleCacheKey = name => `__${name}__`;\n/**\n * <zh/> 缓存图形样式\n *\n * <en/> Cache shape style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n */\nexport function cacheStyle(element, name) {\n  const names = Array.isArray(name) ? name : [name];\n  if (!get(element, CacheTargetKey)) set(element, CacheTargetKey, {});\n  names.forEach(n => {\n    set(get(element, CacheTargetKey), getStyleCacheKey(n), element.attributes[n]);\n  });\n}\n/**\n * <zh/> 获取缓存的样式\n *\n * <en/> Get cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @returns <zh/> 样式值 | <en/> style value\n */\nexport function getCachedStyle(element, name) {\n  return get(element, [CacheTargetKey, getStyleCacheKey(name)]);\n}\n/**\n * <zh/> 是否有缓存的样式\n *\n * <en/> Whether there is a cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @returns <zh/> 是否有缓存的样式 | <en/> Whether there is a cached style\n */\nexport function hasCachedStyle(element, name) {\n  return getStyleCacheKey(name) in (get(element, CacheTargetKey) || {});\n}\n/**\n * <zh/> 设置缓存的样式\n *\n * <en/> Set cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @param value - <zh/> 样式值 | <en/> style value\n */\nexport function setCacheStyle(element, name, value) {\n  set(element, [CacheTargetKey, getStyleCacheKey(name)], value);\n}","map":{"version":3,"names":["get","set","CacheTargetKey","getStyleCacheKey","name","cacheStyle","element","names","Array","isArray","forEach","n","attributes","getCachedStyle","hasCachedStyle","setCacheStyle","value"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/cache.ts"],"sourcesContent":["import type { DisplayObject } from '@antv/g';\nimport { get, set } from '@antv/util';\n\nconst CacheTargetKey = 'cachedStyle';\n\nconst getStyleCacheKey = (name: string) => `__${name}__`;\n\n/**\n * <zh/> 缓存图形样式\n *\n * <en/> Cache shape style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n */\nexport function cacheStyle(element: DisplayObject, name: string | string[]) {\n  const names = Array.isArray(name) ? name : [name];\n  if (!get(element, CacheTargetKey)) set(element, CacheTargetKey, {});\n  names.forEach((n) => {\n    set(get(element, CacheTargetKey), getStyleCacheKey(n), element.attributes[n]);\n  });\n}\n\n/**\n * <zh/> 获取缓存的样式\n *\n * <en/> Get cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @returns <zh/> 样式值 | <en/> style value\n */\nexport function getCachedStyle(element: DisplayObject, name: string) {\n  return get(element, [CacheTargetKey, getStyleCacheKey(name)]);\n}\n\n/**\n * <zh/> 是否有缓存的样式\n *\n * <en/> Whether there is a cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @returns <zh/> 是否有缓存的样式 | <en/> Whether there is a cached style\n */\nexport function hasCachedStyle(element: DisplayObject, name: string) {\n  return getStyleCacheKey(name) in (get(element, CacheTargetKey) || {});\n}\n\n/**\n * <zh/> 设置缓存的样式\n *\n * <en/> Set cached style\n * @param element - <zh/> 图形元素 | <en/> shape element\n * @param name - <zh/> 样式名 | <en/> style name\n * @param value - <zh/> 样式值 | <en/> style value\n */\nexport function setCacheStyle(element: DisplayObject, name: string, value: any) {\n  set(element, [CacheTargetKey, getStyleCacheKey(name)], value);\n}\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,GAAG,QAAQ,YAAY;AAErC,MAAMC,cAAc,GAAG,aAAa;AAEpC,MAAMC,gBAAgB,GAAIC,IAAY,IAAK,KAAKA,IAAI,IAAI;AAExD;;;;;;;AAOA,OAAM,SAAUC,UAAUA,CAACC,OAAsB,EAAEF,IAAuB;EACxE,MAAMG,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;EACjD,IAAI,CAACJ,GAAG,CAACM,OAAO,EAAEJ,cAAc,CAAC,EAAED,GAAG,CAACK,OAAO,EAAEJ,cAAc,EAAE,EAAE,CAAC;EACnEK,KAAK,CAACG,OAAO,CAAEC,CAAC,IAAI;IAClBV,GAAG,CAACD,GAAG,CAACM,OAAO,EAAEJ,cAAc,CAAC,EAAEC,gBAAgB,CAACQ,CAAC,CAAC,EAAEL,OAAO,CAACM,UAAU,CAACD,CAAC,CAAC,CAAC;EAC/E,CAAC,CAAC;AACJ;AAEA;;;;;;;;AAQA,OAAM,SAAUE,cAAcA,CAACP,OAAsB,EAAEF,IAAY;EACjE,OAAOJ,GAAG,CAACM,OAAO,EAAE,CAACJ,cAAc,EAAEC,gBAAgB,CAACC,IAAI,CAAC,CAAC,CAAC;AAC/D;AAEA;;;;;;;;AAQA,OAAM,SAAUU,cAAcA,CAACR,OAAsB,EAAEF,IAAY;EACjE,OAAOD,gBAAgB,CAACC,IAAI,CAAC,KAAKJ,GAAG,CAACM,OAAO,EAAEJ,cAAc,CAAC,IAAI,EAAE,CAAC;AACvE;AAEA;;;;;;;;AAQA,OAAM,SAAUa,aAAaA,CAACT,OAAsB,EAAEF,IAAY,EAAEY,KAAU;EAC5Ef,GAAG,CAACK,OAAO,EAAE,CAACJ,cAAc,EAAEC,gBAAgB,CAACC,IAAI,CAAC,CAAC,EAAEY,KAAK,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}