{"ast":null,"code":"import { deepMix } from '@antv/util';\nimport { column, columnOf } from './utils/helper';\n/**\n * Add 3 constant encode for size channel.\n * This is useful for point geometry.\n */\nexport const MaybeIdentityY = () => {\n  return (I, mark) => {\n    const {\n      encode\n    } = mark;\n    const {\n      y1\n    } = encode;\n    if (y1) return [I, mark];\n    const [Y] = columnOf(encode, 'y');\n    return [I, deepMix({}, mark, {\n      encode: {\n        y1: column([...Y])\n      }\n    })];\n  };\n};\nMaybeIdentityY.props = {};","map":{"version":3,"names":["deepMix","column","columnOf","MaybeIdentityY","I","mark","encode","y1","Y","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/transform/maybeIdentityY.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport { TransformComponent as TC } from '../runtime';\nimport { column, columnOf } from './utils/helper';\n\nexport type MaybeIdentityYOptions = Record<string, never>;\n\n/**\n * Add 3 constant encode for size channel.\n * This is useful for point geometry.\n */\nexport const MaybeIdentityY: TC<MaybeIdentityYOptions> = () => {\n  return (I, mark) => {\n    const { encode } = mark;\n    const { y1 } = encode;\n    if (y1) return [I, mark];\n    const [Y] = columnOf(encode, 'y');\n    return [I, deepMix({}, mark, { encode: { y1: column([...Y]) } })];\n  };\n};\n\nMaybeIdentityY.props = {};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,gBAAgB;AAIjD;;;;AAIA,OAAO,MAAMC,cAAc,GAA8BA,CAAA,KAAK;EAC5D,OAAO,CAACC,CAAC,EAAEC,IAAI,KAAI;IACjB,MAAM;MAAEC;IAAM,CAAE,GAAGD,IAAI;IACvB,MAAM;MAAEE;IAAE,CAAE,GAAGD,MAAM;IACrB,IAAIC,EAAE,EAAE,OAAO,CAACH,CAAC,EAAEC,IAAI,CAAC;IACxB,MAAM,CAACG,CAAC,CAAC,GAAGN,QAAQ,CAACI,MAAM,EAAE,GAAG,CAAC;IACjC,OAAO,CAACF,CAAC,EAAEJ,OAAO,CAAC,EAAE,EAAEK,IAAI,EAAE;MAAEC,MAAM,EAAE;QAAEC,EAAE,EAAEN,MAAM,CAAC,CAAC,GAAGO,CAAC,CAAC;MAAC;IAAE,CAAE,CAAC,CAAC;EACnE,CAAC;AACH,CAAC;AAEDL,cAAc,CAACM,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}