{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport * as ReactDOM from 'react-dom';\n// Let compiler not to search module usage\nconst fullClone = Object.assign({}, ReactDOM);\nconst {\n  version,\n  render: reactRender,\n  unmountComponentAtNode\n} = fullClone;\nlet createRoot;\nfunction initCreateRoot() {\n  return __awaiter(this, void 0, void 0, function* () {\n    if (createRoot) return;\n    const mainVersion = Number((version || '').split('.')[0]);\n    // React 18+ 使用 createRoot\n    if (mainVersion >= 18) {\n      try {\n        /* @vite-ignore */\n        const client = yield import('react-dom/client');\n        if (client.createRoot) {\n          createRoot = client.createRoot;\n        }\n      } catch (error) {\n        // 如果动态导入失败，回退到旧版本渲染\n        // Silent error\n      }\n    }\n  });\n}\n/**\n * <zh/> 切换警告\n *\n * <en/> Toggle warning\n * @param skip <zh/> 是否跳过警告 | <en/> Whether to skip the warning\n */\nfunction toggleWarning(skip) {\n  const {\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n  } = fullClone;\n  if (__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED && typeof __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === 'object') {\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;\n  }\n}\nconst MARK = '__rc_react_root__';\n/**\n * <zh/> 渲染 React 节点(React >= 18)\n *\n * <en/> Render React node(React >= 18)\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction modernRender(node, container) {\n  toggleWarning(true);\n  const root = container[MARK] || createRoot(container);\n  toggleWarning(false);\n  root.render(node);\n  container[MARK] = root;\n}\n/**\n * <zh/> 使用旧的 React 渲染\n *\n * <en/> Use old React render\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction legacyRender(node, container) {\n  reactRender(node, container);\n}\n/**\n * <zh/> 渲染 React 节点(兼容 React 16 ~ 18)\n *\n * <en/> Render React node(Compatible with React 16 ~ 18)\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nexport function render(node, container) {\n  return __awaiter(this, void 0, void 0, function* () {\n    yield initCreateRoot();\n    if (createRoot) modernRender(node, container);else legacyRender(node, container);\n  });\n}\n/**\n * <zh/> 卸载 React 节点(React >= 18)\n *\n * <en/> Unmount React node(React >= 18)\n * @param container - <zh/> 容器 | <en/> Container\n * @returns <zh/> Promise | <en/> Promise\n */\nfunction modernUnmount(container) {\n  return __awaiter(this, void 0, void 0, function* () {\n    // Delay to unmount to avoid React 18 sync warning\n    return Promise.resolve().then(() => {\n      var _a;\n      (_a = container[MARK]) === null || _a === void 0 ? void 0 : _a.unmount();\n      delete container[MARK];\n    });\n  });\n}\n/**\n * <zh/> 卸载 React 节点(React < 18)\n *\n * <en/> Unmount React node(React < 18)\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction legacyUnmount(container) {\n  unmountComponentAtNode(container);\n}\n/**\n * <zh/> 卸载 React 节点(兼容 React 16 ~ 18)\n *\n * <en/> Unmount React node(Compatible with React 16 ~ 18)\n * @param container - <zh/> 容器 | <en/> Container\n * @returns <zh/> Promise | <en/> Promise\n */\nexport function unmount(container) {\n  return __awaiter(this, void 0, void 0, function* () {\n    yield initCreateRoot();\n    if (createRoot) {\n      // Delay to unmount to avoid React 18 sync warning\n      return modernUnmount(container);\n    }\n    legacyUnmount(container);\n  });\n}","map":{"version":3,"names":["ReactDOM","fullClone","Object","assign","version","render","reactRender","unmountComponentAtNode","createRoot","initCreateRoot","mainVersion","Number","split","client","error","toggleWarning","skip","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","usingClientEntryPoint","MARK","modernRender","node","container","root","legacyRender","modernUnmount","Promise","resolve","then","_a","unmount","legacyUnmount"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6-extension-react/src/react-node/render.ts"],"sourcesContent":["import type * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport type { Root } from 'react-dom/client';\n\n// Let compiler not to search module usage\nconst fullClone = {\n  ...ReactDOM,\n} as typeof ReactDOM & {\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?: {\n    usingClientEntryPoint?: boolean;\n  };\n  createRoot?: CreateRoot;\n};\n\ntype CreateRoot = (container: ContainerType) => Root;\n\nconst { version, render: reactRender, unmountComponentAtNode } = fullClone as any;\n\nlet createRoot: CreateRoot | undefined;\n\nasync function initCreateRoot() {\n  if (createRoot) return;\n  const mainVersion = Number((version || '').split('.')[0]);\n\n  // React 18+ 使用 createRoot\n  if (mainVersion >= 18) {\n    try {\n      /* @vite-ignore */\n      const client = await import('react-dom/client');\n      if (client.createRoot) {\n        createRoot = client.createRoot;\n      }\n    } catch (error) {\n      // 如果动态导入失败，回退到旧版本渲染\n      // Silent error\n    }\n  }\n}\n\n/**\n * <zh/> 切换警告\n *\n * <en/> Toggle warning\n * @param skip <zh/> 是否跳过警告 | <en/> Whether to skip the warning\n */\nfunction toggleWarning(skip: boolean) {\n  const { __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED } = fullClone;\n\n  if (\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED &&\n    typeof __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === 'object'\n  ) {\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.usingClientEntryPoint = skip;\n  }\n}\n\nconst MARK = '__rc_react_root__';\n\n// ========================== Render ==========================\ntype ContainerType = (Element | DocumentFragment) & {\n  [MARK]?: Root;\n};\n\n/**\n * <zh/> 渲染 React 节点(React >= 18)\n *\n * <en/> Render React node(React >= 18)\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction modernRender(node: React.ReactNode, container: ContainerType) {\n  toggleWarning(true);\n  const root = container[MARK] || createRoot!(container);\n  toggleWarning(false);\n\n  root.render(node);\n\n  container[MARK] = root;\n}\n\n/**\n * <zh/> 使用旧的 React 渲染\n *\n * <en/> Use old React render\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction legacyRender(node: React.ReactElement, container: ContainerType) {\n  reactRender(node, container);\n}\n\n/**\n * <zh/> 渲染 React 节点(兼容 React 16 ~ 18)\n *\n * <en/> Render React node(Compatible with React 16 ~ 18)\n * @param node - <zh/> React 节点 | <en/> React node\n * @param container - <zh/> 容器 | <en/> Container\n */\nexport async function render(node: React.ReactElement, container: ContainerType) {\n  await initCreateRoot();\n  if (createRoot) modernRender(node, container);\n  else legacyRender(node, container);\n}\n\n/**\n * <zh/> 卸载 React 节点(React >= 18)\n *\n * <en/> Unmount React node(React >= 18)\n * @param container - <zh/> 容器 | <en/> Container\n * @returns <zh/> Promise | <en/> Promise\n */\nasync function modernUnmount(container: ContainerType) {\n  // Delay to unmount to avoid React 18 sync warning\n  return Promise.resolve().then(() => {\n    container[MARK]?.unmount();\n    delete container[MARK];\n  });\n}\n\n/**\n * <zh/> 卸载 React 节点(React < 18)\n *\n * <en/> Unmount React node(React < 18)\n * @param container - <zh/> 容器 | <en/> Container\n */\nfunction legacyUnmount(container: ContainerType) {\n  unmountComponentAtNode(container);\n}\n\n/**\n * <zh/> 卸载 React 节点(兼容 React 16 ~ 18)\n *\n * <en/> Unmount React node(Compatible with React 16 ~ 18)\n * @param container - <zh/> 容器 | <en/> Container\n * @returns <zh/> Promise | <en/> Promise\n */\nexport async function unmount(container: ContainerType) {\n  await initCreateRoot();\n  if (createRoot) {\n    // Delay to unmount to avoid React 18 sync warning\n    return modernUnmount(container);\n  }\n\n  legacyUnmount(container);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAO,KAAKA,QAAQ,MAAM,WAAW;AAGrC;AACA,MAAMC,SAAS,GAAGC,MAAA,CAAAC,MAAA,KACbH,QAAQ,CAMZ;AAID,MAAM;EAAEI,OAAO;EAAEC,MAAM,EAAEC,WAAW;EAAEC;AAAsB,CAAE,GAAGN,SAAgB;AAEjF,IAAIO,UAAkC;AAEtC,SAAeC,cAAcA,CAAA;;IAC3B,IAAID,UAAU,EAAE;IAChB,MAAME,WAAW,GAAGC,MAAM,CAAC,CAACP,OAAO,IAAI,EAAE,EAAEQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzD;IACA,IAAIF,WAAW,IAAI,EAAE,EAAE;MACrB,IAAI;QACF;QACA,MAAMG,MAAM,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC;QAC/C,IAAIA,MAAM,CAACL,UAAU,EAAE;UACrBA,UAAU,GAAGK,MAAM,CAACL,UAAU;QAChC;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACd;QACA;MAAA;IAEJ;EACF,CAAC;;AAED;;;;;;AAMA,SAASC,aAAaA,CAACC,IAAa;EAClC,MAAM;IAAEC;EAAkD,CAAE,GAAGhB,SAAS;EAExE,IACEgB,kDAAkD,IAClD,OAAOA,kDAAkD,KAAK,QAAQ,EACtE;IACAA,kDAAkD,CAACC,qBAAqB,GAAGF,IAAI;EACjF;AACF;AAEA,MAAMG,IAAI,GAAG,mBAAmB;AAOhC;;;;;;;AAOA,SAASC,YAAYA,CAACC,IAAqB,EAAEC,SAAwB;EACnEP,aAAa,CAAC,IAAI,CAAC;EACnB,MAAMQ,IAAI,GAAGD,SAAS,CAACH,IAAI,CAAC,IAAIX,UAAW,CAACc,SAAS,CAAC;EACtDP,aAAa,CAAC,KAAK,CAAC;EAEpBQ,IAAI,CAAClB,MAAM,CAACgB,IAAI,CAAC;EAEjBC,SAAS,CAACH,IAAI,CAAC,GAAGI,IAAI;AACxB;AAEA;;;;;;;AAOA,SAASC,YAAYA,CAACH,IAAwB,EAAEC,SAAwB;EACtEhB,WAAW,CAACe,IAAI,EAAEC,SAAS,CAAC;AAC9B;AAEA;;;;;;;AAOA,OAAM,SAAgBjB,MAAMA,CAACgB,IAAwB,EAAEC,SAAwB;;IAC7E,MAAMb,cAAc,EAAE;IACtB,IAAID,UAAU,EAAEY,YAAY,CAACC,IAAI,EAAEC,SAAS,CAAC,CAAC,KACzCE,YAAY,CAACH,IAAI,EAAEC,SAAS,CAAC;EACpC,CAAC;;AAED;;;;;;;AAOA,SAAeG,aAAaA,CAACH,SAAwB;;IACnD;IACA,OAAOI,OAAO,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,MAAK;;MACjC,CAAAC,EAAA,GAAAP,SAAS,CAACH,IAAI,CAAC,cAAAU,EAAA,uBAAAA,EAAA,CAAEC,OAAO,EAAE;MAC1B,OAAOR,SAAS,CAACH,IAAI,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC;;AAED;;;;;;AAMA,SAASY,aAAaA,CAACT,SAAwB;EAC7Cf,sBAAsB,CAACe,SAAS,CAAC;AACnC;AAEA;;;;;;;AAOA,OAAM,SAAgBQ,OAAOA,CAACR,SAAwB;;IACpD,MAAMb,cAAc,EAAE;IACtB,IAAID,UAAU,EAAE;MACd;MACA,OAAOiB,aAAa,CAACH,SAAS,CAAC;IACjC;IAEAS,aAAa,CAACT,SAAS,CAAC;EAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}