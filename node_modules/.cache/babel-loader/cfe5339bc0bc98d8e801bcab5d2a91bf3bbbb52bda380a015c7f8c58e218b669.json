{"ast":null,"code":"import { idOf } from '../utils/id';\nimport { BaseTransform } from './base-transform';\n/**\n * <zh/> 调整元素绘制顺序\n *\n * <en/> Adjust the drawing order of elements\n */\nexport class ArrangeDrawOrder extends BaseTransform {\n  beforeDraw(input) {\n    const {\n      model\n    } = this.context;\n    const combosToAdd = input.add.combos;\n    const arrangeCombo = combos => {\n      // id, data, zIndex\n      const order = [];\n      combos.forEach((combo, id) => {\n        const ancestors = model.getAncestorsData(id, 'combo');\n        const path = ancestors.map(ancestor => idOf(ancestor)).reverse();\n        // combo 的 zIndex 为距离根 combo 的深度\n        // The zIndex of the combo is the depth from the root combo\n        order.push([id, combo, path.length]);\n      });\n      return new Map(order\n      // 基于 zIndex 降序排序，优先绘制子 combo / Sort based on zIndex in descending order, draw child combo first\n      .sort(([,, zIndex1], [,, zIndex2]) => zIndex2 - zIndex1).map(([id, datum]) => [id, datum]));\n    };\n    input.add.combos = arrangeCombo(combosToAdd);\n    input.update.combos = arrangeCombo(input.update.combos);\n    return input;\n  }\n}","map":{"version":3,"names":["idOf","BaseTransform","ArrangeDrawOrder","beforeDraw","input","model","context","combosToAdd","add","combos","arrangeCombo","order","forEach","combo","id","ancestors","getAncestorsData","path","map","ancestor","reverse","push","length","Map","sort","zIndex1","zIndex2","datum","update"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/transforms/arrange-draw-order.ts"],"sourcesContent":["import type { ComboData } from '../spec';\nimport type { ID } from '../types';\nimport { idOf } from '../utils/id';\nimport { BaseTransform } from './base-transform';\nimport type { DrawData } from './types';\n\n/**\n * <zh/> 调整元素绘制顺序\n *\n * <en/> Adjust the drawing order of elements\n */\nexport class ArrangeDrawOrder extends BaseTransform {\n  public beforeDraw(input: DrawData): DrawData {\n    const { model } = this.context;\n\n    const combosToAdd = input.add.combos;\n\n    const arrangeCombo = (combos: Map<string, ComboData>): Map<string, ComboData> => {\n      // id, data, zIndex\n      const order: [ID, ComboData, number][] = [];\n      combos.forEach((combo, id) => {\n        const ancestors = model.getAncestorsData(id, 'combo');\n        const path = ancestors.map((ancestor) => idOf(ancestor)).reverse();\n        // combo 的 zIndex 为距离根 combo 的深度\n        // The zIndex of the combo is the depth from the root combo\n        order.push([id, combo, path.length]);\n      });\n\n      return new Map(\n        order\n          // 基于 zIndex 降序排序，优先绘制子 combo / Sort based on zIndex in descending order, draw child combo first\n          .sort(([, , zIndex1], [, , zIndex2]) => zIndex2 - zIndex1)\n          .map(([id, datum]) => [id, datum]),\n      );\n    };\n\n    input.add.combos = arrangeCombo(combosToAdd);\n    input.update.combos = arrangeCombo(input.update.combos);\n\n    return input;\n  }\n}\n"],"mappings":"AAEA,SAASA,IAAI,QAAQ,aAAa;AAClC,SAASC,aAAa,QAAQ,kBAAkB;AAGhD;;;;;AAKA,OAAM,MAAOC,gBAAiB,SAAQD,aAAa;EAC1CE,UAAUA,CAACC,KAAe;IAC/B,MAAM;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACC,OAAO;IAE9B,MAAMC,WAAW,GAAGH,KAAK,CAACI,GAAG,CAACC,MAAM;IAEpC,MAAMC,YAAY,GAAID,MAA8B,IAA4B;MAC9E;MACA,MAAME,KAAK,GAA8B,EAAE;MAC3CF,MAAM,CAACG,OAAO,CAAC,CAACC,KAAK,EAAEC,EAAE,KAAI;QAC3B,MAAMC,SAAS,GAAGV,KAAK,CAACW,gBAAgB,CAACF,EAAE,EAAE,OAAO,CAAC;QACrD,MAAMG,IAAI,GAAGF,SAAS,CAACG,GAAG,CAAEC,QAAQ,IAAKnB,IAAI,CAACmB,QAAQ,CAAC,CAAC,CAACC,OAAO,EAAE;QAClE;QACA;QACAT,KAAK,CAACU,IAAI,CAAC,CAACP,EAAE,EAAED,KAAK,EAAEI,IAAI,CAACK,MAAM,CAAC,CAAC;MACtC,CAAC,CAAC;MAEF,OAAO,IAAIC,GAAG,CACZZ;MACE;MAAA,CACCa,IAAI,CAAC,CAAC,IAAKC,OAAO,CAAC,EAAE,IAAKC,OAAO,CAAC,KAAKA,OAAO,GAAGD,OAAO,CAAC,CACzDP,GAAG,CAAC,CAAC,CAACJ,EAAE,EAAEa,KAAK,CAAC,KAAK,CAACb,EAAE,EAAEa,KAAK,CAAC,CAAC,CACrC;IACH,CAAC;IAEDvB,KAAK,CAACI,GAAG,CAACC,MAAM,GAAGC,YAAY,CAACH,WAAW,CAAC;IAC5CH,KAAK,CAACwB,MAAM,CAACnB,MAAM,GAAGC,YAAY,CAACN,KAAK,CAACwB,MAAM,CAACnB,MAAM,CAAC;IAEvD,OAAOL,KAAK;EACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}