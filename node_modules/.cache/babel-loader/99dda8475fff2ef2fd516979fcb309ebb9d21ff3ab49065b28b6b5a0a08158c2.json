{"ast":null,"code":"import { cluster, hierarchy } from '@antv/vendor/d3-hierarchy';\nexport const hierarchyFunction = layoutFunction => options => {\n  return data => {\n    const {\n      field = 'value',\n      nodeSize,\n      separation,\n      sortBy,\n      as = ['x', 'y']\n    } = options;\n    const [x, y] = as;\n    // Process root data.\n    const root = hierarchy(data, d => d.children).sum(d => d[field]).sort(sortBy);\n    // Layout\n    const c = layoutFunction();\n    c.size([1, 1]);\n    if (nodeSize) c.nodeSize(nodeSize);\n    if (separation) c.separation(separation);\n    c(root);\n    const nodes = [];\n    root.each(node => {\n      node[x] = node.x;\n      node[y] = node.y;\n      node.name = node.data.name;\n      nodes.push(node);\n    });\n    const edges = root.links();\n    edges.forEach(edge => {\n      edge[x] = [edge.source[x], edge.target[x]];\n      edge[y] = [edge.source[y], edge.target[y]];\n    });\n    return {\n      nodes,\n      edges\n    };\n  };\n};\nexport const Cluster = options => {\n  return hierarchyFunction(cluster)(options);\n};\nCluster.props = {};","map":{"version":3,"names":["cluster","hierarchy","hierarchyFunction","layoutFunction","options","data","field","nodeSize","separation","sortBy","as","x","y","root","d","children","sum","sort","c","size","nodes","each","node","name","push","edges","links","forEach","edge","source","target","Cluster","props"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/data/cluster.ts"],"sourcesContent":["import { cluster, hierarchy } from '@antv/vendor/d3-hierarchy';\nimport { DataComponent as DC } from '../runtime';\n\nexport type ClusterOptions = Omit<Record<string, any>, 'type'>;\n\nexport const hierarchyFunction = (layoutFunction) => (options) => {\n  return (data) => {\n    const {\n      field = 'value',\n      nodeSize,\n      separation,\n      sortBy,\n      as = ['x', 'y'],\n    } = options;\n    const [x, y] = as;\n\n    // Process root data.\n    const root = hierarchy(data, (d) => d.children)\n      .sum((d) => d[field!])\n      .sort(sortBy);\n\n    // Layout\n    const c = layoutFunction();\n    c.size([1, 1]);\n    if (nodeSize) c.nodeSize(nodeSize);\n    if (separation) c.separation(separation);\n    c(root);\n\n    const nodes = [];\n    root.each((node: any) => {\n      node[x] = node.x;\n      node[y] = node.y;\n      node.name = node.data.name;\n\n      nodes.push(node);\n    });\n\n    const edges = root.links();\n    edges.forEach((edge) => {\n      edge[x] = [edge.source[x], edge.target[x]];\n      edge[y] = [edge.source[y], edge.target[y]];\n    });\n\n    return { nodes, edges };\n  };\n};\n\nexport const Cluster: DC<ClusterOptions> = (options) => {\n  return hierarchyFunction(cluster)(options);\n};\n\nCluster.props = {};\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,SAAS,QAAQ,2BAA2B;AAK9D,OAAO,MAAMC,iBAAiB,GAAIC,cAAc,IAAMC,OAAO,IAAI;EAC/D,OAAQC,IAAI,IAAI;IACd,MAAM;MACJC,KAAK,GAAG,OAAO;MACfC,QAAQ;MACRC,UAAU;MACVC,MAAM;MACNC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG;IAAC,CAChB,GAAGN,OAAO;IACX,MAAM,CAACO,CAAC,EAAEC,CAAC,CAAC,GAAGF,EAAE;IAEjB;IACA,MAAMG,IAAI,GAAGZ,SAAS,CAACI,IAAI,EAAGS,CAAC,IAAKA,CAAC,CAACC,QAAQ,CAAC,CAC5CC,GAAG,CAAEF,CAAC,IAAKA,CAAC,CAACR,KAAM,CAAC,CAAC,CACrBW,IAAI,CAACR,MAAM,CAAC;IAEf;IACA,MAAMS,CAAC,GAAGf,cAAc,EAAE;IAC1Be,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,IAAIZ,QAAQ,EAAEW,CAAC,CAACX,QAAQ,CAACA,QAAQ,CAAC;IAClC,IAAIC,UAAU,EAAEU,CAAC,CAACV,UAAU,CAACA,UAAU,CAAC;IACxCU,CAAC,CAACL,IAAI,CAAC;IAEP,MAAMO,KAAK,GAAG,EAAE;IAChBP,IAAI,CAACQ,IAAI,CAAEC,IAAS,IAAI;MACtBA,IAAI,CAACX,CAAC,CAAC,GAAGW,IAAI,CAACX,CAAC;MAChBW,IAAI,CAACV,CAAC,CAAC,GAAGU,IAAI,CAACV,CAAC;MAChBU,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACjB,IAAI,CAACkB,IAAI;MAE1BH,KAAK,CAACI,IAAI,CAACF,IAAI,CAAC;IAClB,CAAC,CAAC;IAEF,MAAMG,KAAK,GAAGZ,IAAI,CAACa,KAAK,EAAE;IAC1BD,KAAK,CAACE,OAAO,CAAEC,IAAI,IAAI;MACrBA,IAAI,CAACjB,CAAC,CAAC,GAAG,CAACiB,IAAI,CAACC,MAAM,CAAClB,CAAC,CAAC,EAAEiB,IAAI,CAACE,MAAM,CAACnB,CAAC,CAAC,CAAC;MAC1CiB,IAAI,CAAChB,CAAC,CAAC,GAAG,CAACgB,IAAI,CAACC,MAAM,CAACjB,CAAC,CAAC,EAAEgB,IAAI,CAACE,MAAM,CAAClB,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC;IAEF,OAAO;MAAEQ,KAAK;MAAEK;IAAK,CAAE;EACzB,CAAC;AACH,CAAC;AAED,OAAO,MAAMM,OAAO,GAAwB3B,OAAO,IAAI;EACrD,OAAOF,iBAAiB,CAACF,OAAO,CAAC,CAACI,OAAO,CAAC;AAC5C,CAAC;AAED2B,OAAO,CAACC,KAAK,GAAG,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}