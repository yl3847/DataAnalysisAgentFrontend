{"ast":null,"code":"import { RectShape, RectHollow } from '../shape';\nimport { MaybeZeroY1 } from '../transform';\nimport { baseGeometryChannels, basePostInference, basePreInference, tooltip1d } from './utils';\nconst shape = {\n  rect: RectShape,\n  hollow: RectHollow\n};\nexport const Rect = () => {\n  return (index, scale, value, coordinate) => {\n    const {\n      x: X,\n      x1: X1,\n      y: Y,\n      y1: Y1\n    } = value;\n    const P = Array.from(index, i => {\n      const p1 = [+X[i], +Y[i]];\n      const p2 = [+X1[i], +Y[i]];\n      const p3 = [+X1[i], +Y1[i]];\n      const p4 = [+X[i], +Y1[i]];\n      return [p1, p2, p3, p4].map(d => coordinate.map(d));\n    });\n    return [index, P];\n  };\n};\nRect.props = {\n  defaultShape: 'rect',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [...baseGeometryChannels({\n    shapes: Object.keys(shape)\n  }), {\n    name: 'x',\n    required: true\n  }, {\n    name: 'y',\n    required: true\n  }],\n  preInference: [...basePreInference(), {\n    type: MaybeZeroY1\n  }],\n  postInference: [...basePostInference(), ...tooltip1d()],\n  interaction: {\n    shareTooltip: true\n  }\n};","map":{"version":3,"names":["RectShape","RectHollow","MaybeZeroY1","baseGeometryChannels","basePostInference","basePreInference","tooltip1d","shape","rect","hollow","Rect","index","scale","value","coordinate","x","X","x1","X1","y","Y","y1","Y1","P","Array","from","i","p1","p2","p3","p4","map","d","props","defaultShape","defaultLabelShape","composite","channels","shapes","Object","keys","name","required","preInference","type","postInference","interaction","shareTooltip"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/mark/rect.ts"],"sourcesContent":["import { MarkComponent as MC, Vector2 } from '../runtime';\nimport { RectMark } from '../spec';\nimport { RectShape, RectHollow } from '../shape';\nimport { MaybeZeroY1 } from '../transform';\nimport {\n  baseGeometryChannels,\n  basePostInference,\n  basePreInference,\n  tooltip1d,\n} from './utils';\n\nconst shape = {\n  rect: RectShape,\n  hollow: RectHollow,\n};\n\nexport type RectOptions = Omit<RectMark, 'type'>;\n\nexport const Rect: MC<RectOptions> = () => {\n  return (index, scale, value, coordinate) => {\n    const { x: X, x1: X1, y: Y, y1: Y1 } = value;\n\n    const P = Array.from(index, (i) => {\n      const p1 = [+X[i], +Y[i]];\n      const p2 = [+X1[i], +Y[i]];\n      const p3 = [+X1[i], +Y1[i]];\n      const p4 = [+X[i], +Y1[i]];\n\n      return [p1, p2, p3, p4].map((d) => coordinate.map(d)) as Vector2[];\n    });\n\n    return [index, P];\n  };\n};\n\nRect.props = {\n  defaultShape: 'rect',\n  defaultLabelShape: 'label',\n  composite: false,\n  shape,\n  channels: [\n    ...baseGeometryChannels({ shapes: Object.keys(shape) }),\n    { name: 'x', required: true },\n    { name: 'y', required: true },\n  ],\n  preInference: [...basePreInference(), { type: MaybeZeroY1 }],\n  postInference: [...basePostInference(), ...tooltip1d()],\n  interaction: {\n    shareTooltip: true,\n  },\n};\n"],"mappings":"AAEA,SAASA,SAAS,EAAEC,UAAU,QAAQ,UAAU;AAChD,SAASC,WAAW,QAAQ,cAAc;AAC1C,SACEC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAgB,EAChBC,SAAS,QACJ,SAAS;AAEhB,MAAMC,KAAK,GAAG;EACZC,IAAI,EAAER,SAAS;EACfS,MAAM,EAAER;CACT;AAID,OAAO,MAAMS,IAAI,GAAoBA,CAAA,KAAK;EACxC,OAAO,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,KAAI;IACzC,MAAM;MAAEC,CAAC,EAAEC,CAAC;MAAEC,EAAE,EAAEC,EAAE;MAAEC,CAAC,EAAEC,CAAC;MAAEC,EAAE,EAAEC;IAAE,CAAE,GAAGT,KAAK;IAE5C,MAAMU,CAAC,GAAGC,KAAK,CAACC,IAAI,CAACd,KAAK,EAAGe,CAAC,IAAI;MAChC,MAAMC,EAAE,GAAG,CAAC,CAACX,CAAC,CAACU,CAAC,CAAC,EAAE,CAACN,CAAC,CAACM,CAAC,CAAC,CAAC;MACzB,MAAME,EAAE,GAAG,CAAC,CAACV,EAAE,CAACQ,CAAC,CAAC,EAAE,CAACN,CAAC,CAACM,CAAC,CAAC,CAAC;MAC1B,MAAMG,EAAE,GAAG,CAAC,CAACX,EAAE,CAACQ,CAAC,CAAC,EAAE,CAACJ,EAAE,CAACI,CAAC,CAAC,CAAC;MAC3B,MAAMI,EAAE,GAAG,CAAC,CAACd,CAAC,CAACU,CAAC,CAAC,EAAE,CAACJ,EAAE,CAACI,CAAC,CAAC,CAAC;MAE1B,OAAO,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC,CAACC,GAAG,CAAEC,CAAC,IAAKlB,UAAU,CAACiB,GAAG,CAACC,CAAC,CAAC,CAAc;IACpE,CAAC,CAAC;IAEF,OAAO,CAACrB,KAAK,EAAEY,CAAC,CAAC;EACnB,CAAC;AACH,CAAC;AAEDb,IAAI,CAACuB,KAAK,GAAG;EACXC,YAAY,EAAE,MAAM;EACpBC,iBAAiB,EAAE,OAAO;EAC1BC,SAAS,EAAE,KAAK;EAChB7B,KAAK;EACL8B,QAAQ,EAAE,CACR,GAAGlC,oBAAoB,CAAC;IAAEmC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACjC,KAAK;EAAC,CAAE,CAAC,EACvD;IAAEkC,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,EAC7B;IAAED,IAAI,EAAE,GAAG;IAAEC,QAAQ,EAAE;EAAI,CAAE,CAC9B;EACDC,YAAY,EAAE,CAAC,GAAGtC,gBAAgB,EAAE,EAAE;IAAEuC,IAAI,EAAE1C;EAAW,CAAE,CAAC;EAC5D2C,aAAa,EAAE,CAAC,GAAGzC,iBAAiB,EAAE,EAAE,GAAGE,SAAS,EAAE,CAAC;EACvDwC,WAAW,EAAE;IACXC,YAAY,EAAE;;CAEjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}