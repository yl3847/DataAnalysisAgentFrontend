{"ast":null,"code":"import { applyStyle } from '../../shape/utils';\nimport { select } from '../../utils/selection';\nimport { Advance } from './advance';\n/**\n * @todo autoRotate when in polar coordinate\n */\nexport const Text = (options, context) => {\n  const {\n    coordinate\n  } = context;\n  return (points, value, defaults) => {\n    const {\n      color,\n      text = '',\n      fontSize,\n      rotate = 0,\n      transform = ''\n    } = value;\n    const textStyle = {\n      text: String(text),\n      stroke: color,\n      fill: color,\n      fontSize\n    };\n    const [[x0, y0]] = points;\n    return select(new Advance()).style('x', x0).style('y', y0).call(applyStyle, defaults).style('transform', `${transform}rotate(${+rotate})`).style('coordCenter', coordinate.getCenter()).call(applyStyle, textStyle).call(applyStyle, options).node();\n  };\n};\nText.props = {\n  defaultMarker: 'point',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut'\n};","map":{"version":3,"names":["applyStyle","select","Advance","Text","options","context","coordinate","points","value","defaults","color","text","fontSize","rotate","transform","textStyle","String","stroke","fill","x0","y0","style","call","getCenter","node","props","defaultMarker","defaultEnterAnimation","defaultUpdateAnimation","defaultExitAnimation"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/shape/text/text.ts"],"sourcesContent":["import { ShapeComponent as SC } from '../../runtime';\nimport { applyStyle } from '../../shape/utils';\nimport { select } from '../../utils/selection';\nimport { Advance } from './advance';\n\nexport type TextOptions = Record<string, any>;\n\n/**\n * @todo autoRotate when in polar coordinate\n */\nexport const Text: SC<TextOptions> = (options, context) => {\n  const { coordinate } = context;\n  return (points, value, defaults) => {\n    const { color, text = '', fontSize, rotate = 0, transform = '' } = value;\n    const textStyle = {\n      text: String(text),\n      stroke: color,\n      fill: color,\n      fontSize,\n    };\n    const [[x0, y0]] = points;\n    return select(new Advance())\n      .style('x', x0)\n      .style('y', y0)\n      .call(applyStyle, defaults)\n      .style('transform', `${transform}rotate(${+rotate})`)\n      .style('coordCenter', coordinate.getCenter())\n      .call(applyStyle, textStyle)\n      .call(applyStyle, options)\n      .node();\n  };\n};\n\nText.props = {\n  defaultMarker: 'point',\n  defaultEnterAnimation: 'fadeIn',\n  defaultUpdateAnimation: 'morphing',\n  defaultExitAnimation: 'fadeOut',\n};\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,OAAO,QAAQ,WAAW;AAInC;;;AAGA,OAAO,MAAMC,IAAI,GAAoBA,CAACC,OAAO,EAAEC,OAAO,KAAI;EACxD,MAAM;IAAEC;EAAU,CAAE,GAAGD,OAAO;EAC9B,OAAO,CAACE,MAAM,EAAEC,KAAK,EAAEC,QAAQ,KAAI;IACjC,MAAM;MAAEC,KAAK;MAAEC,IAAI,GAAG,EAAE;MAAEC,QAAQ;MAAEC,MAAM,GAAG,CAAC;MAAEC,SAAS,GAAG;IAAE,CAAE,GAAGN,KAAK;IACxE,MAAMO,SAAS,GAAG;MAChBJ,IAAI,EAAEK,MAAM,CAACL,IAAI,CAAC;MAClBM,MAAM,EAAEP,KAAK;MACbQ,IAAI,EAAER,KAAK;MACXE;KACD;IACD,MAAM,CAAC,CAACO,EAAE,EAAEC,EAAE,CAAC,CAAC,GAAGb,MAAM;IACzB,OAAON,MAAM,CAAC,IAAIC,OAAO,EAAE,CAAC,CACzBmB,KAAK,CAAC,GAAG,EAAEF,EAAE,CAAC,CACdE,KAAK,CAAC,GAAG,EAAED,EAAE,CAAC,CACdE,IAAI,CAACtB,UAAU,EAAES,QAAQ,CAAC,CAC1BY,KAAK,CAAC,WAAW,EAAE,GAAGP,SAAS,UAAU,CAACD,MAAM,GAAG,CAAC,CACpDQ,KAAK,CAAC,aAAa,EAAEf,UAAU,CAACiB,SAAS,EAAE,CAAC,CAC5CD,IAAI,CAACtB,UAAU,EAAEe,SAAS,CAAC,CAC3BO,IAAI,CAACtB,UAAU,EAAEI,OAAO,CAAC,CACzBoB,IAAI,EAAE;EACX,CAAC;AACH,CAAC;AAEDrB,IAAI,CAACsB,KAAK,GAAG;EACXC,aAAa,EAAE,OAAO;EACtBC,qBAAqB,EAAE,QAAQ;EAC/BC,sBAAsB,EAAE,UAAU;EAClCC,oBAAoB,EAAE;CACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}