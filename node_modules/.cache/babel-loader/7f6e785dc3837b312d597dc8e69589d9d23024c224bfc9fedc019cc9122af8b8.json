{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { upperFirst } from '@antv/util';\nimport { createAnimationsProxy, inferDefaultValue, preprocessKeyframes } from '../utils/animation';\nimport { replaceTranslateInTransform } from '../utils/transform';\n/**\n * <zh/> 动画语法执行器\n *\n * <en/> Animation syntax executor\n * @param element - <zh/> 要执行动画的图形 | <en/> shape to execute animation\n * @param keyframes - <zh/> 动画关键帧 | <en/> animation keyframes\n * @param options - <zh/> 动画语法 | <en/> animation syntax\n * @returns <zh/> 动画实例 | <en/> animation instance\n */\nexport const executor = (element, keyframes, options) => {\n  if (!options.length) return null;\n  const [originalStyle, modifiedStyle] = keyframes;\n  /**\n   * <zh/> 获取图形关键帧样式\n   *\n   * <en/> Get the keyframe style of the shape\n   * @param shapeID - <zh/> 图形 ID | <en/> shape ID\n   * @returns <zh/> 图形关键帧样式 | <en/> keyframe style of the shape\n   */\n  const getKeyframeStyle = shapeID => {\n    var _a;\n    if (shapeID) {\n      const shape = element.getShape(shapeID);\n      if (!shape) return null;\n      const name = `get${upperFirst(shapeID)}Style`;\n      const styler = ((_a = element === null || element === void 0 ? void 0 : element[name]) === null || _a === void 0 ? void 0 : _a.bind(element)) || (attrs => attrs);\n      const fromStyle = (styler === null || styler === void 0 ? void 0 : styler(originalStyle)) || {};\n      const toStyle = (styler === null || styler === void 0 ? void 0 : styler(modifiedStyle)) || {};\n      return {\n        shape,\n        fromStyle,\n        toStyle\n      };\n    } else {\n      const shape = element;\n      return {\n        shape,\n        fromStyle: originalStyle,\n        toStyle: modifiedStyle\n      };\n    }\n  };\n  let mainResult;\n  const subResults = options.map(_a => {\n    var {\n        fields,\n        shape: shapeID,\n        states: enabledStates\n      } = _a,\n      effectTiming = __rest(_a, [\"fields\", \"shape\", \"states\"]);\n    const keyframeStyle = getKeyframeStyle(shapeID);\n    if (!keyframeStyle) return null;\n    const {\n      shape,\n      fromStyle,\n      toStyle\n    } = keyframeStyle;\n    const keyframes = [{}, {}];\n    fields.forEach(attr => {\n      var _a, _b;\n      Object.assign(keyframes[0], {\n        [attr]: (_a = fromStyle[attr]) !== null && _a !== void 0 ? _a : inferDefaultValue(attr)\n      });\n      Object.assign(keyframes[1], {\n        [attr]: (_b = toStyle[attr]) !== null && _b !== void 0 ? _b : inferDefaultValue(attr)\n      });\n    });\n    // x/y -> translate\n    if (keyframes.some(keyframe => Object.keys(keyframe).some(attr => ['x', 'y', 'z'].includes(attr)))) {\n      const {\n        x = 0,\n        y = 0,\n        z,\n        transform = ''\n      } = shape.attributes || {};\n      keyframes.forEach(keyframe => {\n        var _a, _b, _c;\n        // @ts-expect-error ignore type error\n        keyframe.transform = replaceTranslateInTransform((_a = keyframe.x) !== null && _a !== void 0 ? _a : x, (_b = keyframe.y) !== null && _b !== void 0 ? _b : y, (_c = keyframe.z) !== null && _c !== void 0 ? _c : z, transform);\n      });\n    }\n    const result = shape.animate(preprocessKeyframes(keyframes), effectTiming);\n    if (shapeID === undefined) mainResult = result;\n    return result;\n  }).filter(Boolean);\n  const result = mainResult || (subResults === null || subResults === void 0 ? void 0 : subResults[0]);\n  if (!result) return null;\n  return createAnimationsProxy(result, subResults.filter(result => result !== result));\n};","map":{"version":3,"names":["upperFirst","createAnimationsProxy","inferDefaultValue","preprocessKeyframes","replaceTranslateInTransform","executor","element","keyframes","options","length","originalStyle","modifiedStyle","getKeyframeStyle","shapeID","shape","getShape","name","styler","_a","bind","attrs","fromStyle","toStyle","mainResult","subResults","map","fields","states","enabledStates","effectTiming","__rest","keyframeStyle","forEach","attr","Object","assign","_b","some","keyframe","keys","includes","x","y","z","transform","attributes","_c","result","animate","undefined","filter","Boolean"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/animations/executor.ts"],"sourcesContent":["import type { DisplayObject, IAnimation } from '@antv/g';\nimport { upperFirst } from '@antv/util';\nimport { createAnimationsProxy, inferDefaultValue, preprocessKeyframes } from '../utils/animation';\nimport { replaceTranslateInTransform } from '../utils/transform';\nimport type { AnimationExecutor } from './types';\n\n/**\n * <zh/> 动画语法执行器\n *\n * <en/> Animation syntax executor\n * @param element - <zh/> 要执行动画的图形 | <en/> shape to execute animation\n * @param keyframes - <zh/> 动画关键帧 | <en/> animation keyframes\n * @param options - <zh/> 动画语法 | <en/> animation syntax\n * @returns <zh/> 动画实例 | <en/> animation instance\n */\nexport const executor: AnimationExecutor = (element, keyframes, options) => {\n  if (!options.length) return null;\n\n  const [originalStyle, modifiedStyle] = keyframes;\n  /**\n   * <zh/> 获取图形关键帧样式\n   *\n   * <en/> Get the keyframe style of the shape\n   * @param shapeID - <zh/> 图形 ID | <en/> shape ID\n   * @returns <zh/> 图形关键帧样式 | <en/> keyframe style of the shape\n   */\n  const getKeyframeStyle = (\n    shapeID?: string,\n  ): { shape: DisplayObject; fromStyle: Record<string, any>; toStyle: Record<string, any> } | null => {\n    if (shapeID) {\n      const shape = element.getShape(shapeID);\n      if (!shape) return null;\n\n      const name = `get${upperFirst(shapeID)}Style` as keyof typeof element;\n\n      const styler: (attrs?: Record<string, unknown>) => Record<string, unknown> =\n        element?.[name]?.bind(element) || ((attrs) => attrs);\n\n      const fromStyle = styler?.(originalStyle) || {};\n      const toStyle = styler?.(modifiedStyle) || {};\n\n      return { shape, fromStyle, toStyle };\n    } else {\n      const shape = element;\n      return { shape, fromStyle: originalStyle, toStyle: modifiedStyle };\n    }\n  };\n\n  let mainResult: IAnimation;\n\n  const subResults = options\n    .map(({ fields, shape: shapeID, states: enabledStates, ...effectTiming }) => {\n      const keyframeStyle = getKeyframeStyle(shapeID);\n      if (!keyframeStyle) return null;\n\n      const { shape, fromStyle, toStyle } = keyframeStyle;\n\n      const keyframes: Keyframe[] = [{}, {}];\n\n      fields.forEach((attr) => {\n        Object.assign(keyframes[0], { [attr]: fromStyle[attr] ?? inferDefaultValue(attr) });\n        Object.assign(keyframes[1], { [attr]: toStyle[attr] ?? inferDefaultValue(attr) });\n      });\n\n      // x/y -> translate\n      if (keyframes.some((keyframe) => Object.keys(keyframe).some((attr) => ['x', 'y', 'z'].includes(attr)))) {\n        const { x = 0, y = 0, z, transform = '' } = shape.attributes || {};\n        keyframes.forEach((keyframe) => {\n          // @ts-expect-error ignore type error\n          keyframe.transform = replaceTranslateInTransform(\n            (keyframe.x as number) ?? (x as number),\n            (keyframe.y as number) ?? (y as number),\n            (keyframe.z as number) ?? (z as number),\n            transform,\n          );\n        });\n      }\n\n      const result = shape.animate(preprocessKeyframes(keyframes), effectTiming);\n\n      if (shapeID === undefined) mainResult = result!;\n\n      return result;\n    })\n    .filter(Boolean) as IAnimation[];\n\n  const result = mainResult! || subResults?.[0];\n\n  if (!result) return null;\n\n  return createAnimationsProxy(\n    result,\n    subResults.filter((result) => result !== result),\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}