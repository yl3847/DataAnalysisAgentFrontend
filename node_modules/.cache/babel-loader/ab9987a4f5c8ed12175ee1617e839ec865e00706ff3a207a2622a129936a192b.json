{"ast":null,"code":"import { print } from '../../utils/print';\nimport { Shortcut } from '../../utils/shortcut';\nimport { BasePlugin } from '../base-plugin';\n/**\n * <zh/> 全屏\n *\n * <en/> Full screen\n */\nexport class Fullscreen extends BasePlugin {\n  constructor(context, options) {\n    super(context, Object.assign({}, Fullscreen.defaultOptions, options));\n    this.$el = this.context.canvas.getContainer();\n    this.graphSize = [0, 0];\n    this.onFullscreenChange = () => {\n      var _a, _b, _c, _d;\n      const isFull = !!document.fullscreenElement;\n      if (this.options.autoFit) this.setGraphSize(isFull);\n      if (isFull) {\n        (_b = (_a = this.options).onEnter) === null || _b === void 0 ? void 0 : _b.call(_a);\n      } else {\n        (_d = (_c = this.options).onExit) === null || _d === void 0 ? void 0 : _d.call(_c);\n      }\n    };\n    this.shortcut = new Shortcut(context.graph);\n    this.bindEvents();\n    this.style = document.createElement('style');\n    document.head.appendChild(this.style);\n    this.style.innerHTML = `\n      :not(:root):fullscreen::backdrop {\n        background: transparent;\n      }\n    `;\n  }\n  bindEvents() {\n    this.unbindEvents();\n    this.shortcut.unbindAll();\n    const {\n      request = [],\n      exit = []\n    } = this.options.trigger;\n    this.shortcut.bind(request, this.request);\n    this.shortcut.bind(exit, this.exit);\n    const events = ['webkitfullscreenchange', 'mozfullscreenchange', 'fullscreenchange', 'MSFullscreenChange'];\n    events.forEach(eventName => {\n      document.addEventListener(eventName, this.onFullscreenChange, false);\n    });\n  }\n  unbindEvents() {\n    this.shortcut.unbindAll();\n    const events = ['webkitfullscreenchange', 'mozfullscreenchange', 'fullscreenchange', 'MSFullscreenChange'];\n    events.forEach(eventName => {\n      document.removeEventListener(eventName, this.onFullscreenChange, false);\n    });\n  }\n  setGraphSize(fullScreen = true) {\n    var _a, _b;\n    let width, height;\n    if (fullScreen) {\n      width = ((_a = globalThis.screen) === null || _a === void 0 ? void 0 : _a.width) || 0;\n      height = ((_b = globalThis.screen) === null || _b === void 0 ? void 0 : _b.height) || 0;\n      this.graphSize = this.context.graph.getSize();\n    } else {\n      [width, height] = this.graphSize;\n    }\n    this.context.graph.setSize(width, height);\n    this.context.graph.render();\n  }\n  /**\n   * <zh/> 请求全屏\n   *\n   * <en/> Request full screen\n   */\n  request() {\n    if (document.fullscreenElement || !isFullscreenEnabled()) return;\n    this.$el.requestFullscreen().catch(err => {\n      print.warn(`Error attempting to enable full-screen: ${err.message} (${err.name})`);\n    });\n  }\n  /**\n   * <zh/> 退出全屏\n   *\n   * <en/> Exit full screen\n   */\n  exit() {\n    if (!document.fullscreenElement) return;\n    document.exitFullscreen();\n  }\n  /**\n   * <zh/> 更新配置\n   *\n   * <en/> Update options\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  update(options) {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n  destroy() {\n    this.exit();\n    this.style.remove();\n    super.destroy();\n  }\n}\nFullscreen.defaultOptions = {\n  trigger: {},\n  autoFit: true\n};\n/**\n * <zh/> 判断是否支持全屏\n *\n * <en/> Determine whether full screen is enabled\n * @returns <zh/> 是否支持全屏 | <en/> Whether full screen is enabled\n */\nfunction isFullscreenEnabled() {\n  return document.fullscreenEnabled ||\n  // <zh/> 使用 Reflect 语法规避 ts 检查 | <en/> use Reflect to avoid ts checking\n  Reflect.get(document, 'webkitFullscreenEnabled') || Reflect.get(document, 'mozFullscreenEnabled') || Reflect.get(document, 'msFullscreenEnabled');\n}","map":{"version":3,"names":["print","Shortcut","BasePlugin","Fullscreen","constructor","context","options","Object","assign","defaultOptions","$el","canvas","getContainer","graphSize","onFullscreenChange","isFull","document","fullscreenElement","autoFit","setGraphSize","_b","_a","onEnter","call","_d","_c","onExit","shortcut","graph","bindEvents","style","createElement","head","appendChild","innerHTML","unbindEvents","unbindAll","request","exit","trigger","bind","events","forEach","eventName","addEventListener","removeEventListener","fullScreen","width","height","globalThis","screen","getSize","setSize","render","isFullscreenEnabled","requestFullscreen","catch","err","warn","message","name","exitFullscreen","update","destroy","remove","fullscreenEnabled","Reflect","get"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/fullscreen/index.ts"],"sourcesContent":["import type { RuntimeContext } from '../../runtime/types';\nimport { print } from '../../utils/print';\nimport type { ShortcutKey } from '../../utils/shortcut';\nimport { Shortcut } from '../../utils/shortcut';\nimport type { BasePluginOptions } from '../base-plugin';\nimport { BasePlugin } from '../base-plugin';\n\n/**\n * <zh/> 全屏配置项\n *\n * <en/> Full screen options\n */\nexport interface FullscreenOptions extends BasePluginOptions {\n  /**\n   * <zh/> 触发全屏的方式\n   * - `request` : 请求全屏\n   * - `exit` : 退出全屏\n   *\n   * <en/> The way to trigger full screen\n   * - `request`: request full screen\n   * - `exit`: exit full screen\n   */\n  trigger?: {\n    request?: ShortcutKey;\n    exit?: ShortcutKey;\n  };\n  /**\n   * <zh/> 是否自适应画布尺寸，全屏后画布尺寸会自动适应屏幕尺寸\n   *\n   * <en/> Whether to adapt the canvas size\n   * @defaultValue true\n   */\n  autoFit?: boolean;\n  /**\n   * <zh/> 进入全屏后的回调\n   *\n   * <en/> Callback after entering full screen\n   */\n  onEnter?: () => void;\n  /**\n   * <zh/> 退出全屏后的回调\n   *\n   * <en/> Callback after exiting full screen\n   */\n  onExit?: () => void;\n}\n\n/**\n * <zh/> 全屏\n *\n * <en/> Full screen\n */\nexport class Fullscreen extends BasePlugin<FullscreenOptions> {\n  static defaultOptions: Partial<FullscreenOptions> = {\n    trigger: {},\n    autoFit: true,\n  };\n\n  private shortcut: Shortcut;\n\n  private style: HTMLStyleElement;\n\n  private $el = this.context.canvas.getContainer()!;\n\n  private graphSize: [number, number] = [0, 0];\n\n  constructor(context: RuntimeContext, options: FullscreenOptions) {\n    super(context, Object.assign({}, Fullscreen.defaultOptions, options));\n\n    this.shortcut = new Shortcut(context.graph);\n\n    this.bindEvents();\n\n    this.style = document.createElement('style');\n    document.head.appendChild(this.style);\n    this.style.innerHTML = `\n      :not(:root):fullscreen::backdrop {\n        background: transparent;\n      }\n    `;\n  }\n\n  private bindEvents() {\n    this.unbindEvents();\n    this.shortcut.unbindAll();\n\n    const { request = [], exit = [] } = this.options.trigger;\n    this.shortcut.bind(request, this.request);\n    this.shortcut.bind(exit, this.exit);\n\n    const events = ['webkitfullscreenchange', 'mozfullscreenchange', 'fullscreenchange', 'MSFullscreenChange'];\n    events.forEach((eventName) => {\n      document.addEventListener(eventName, this.onFullscreenChange, false);\n    });\n  }\n\n  private unbindEvents() {\n    this.shortcut.unbindAll();\n    const events = ['webkitfullscreenchange', 'mozfullscreenchange', 'fullscreenchange', 'MSFullscreenChange'];\n    events.forEach((eventName) => {\n      document.removeEventListener(eventName, this.onFullscreenChange, false);\n    });\n  }\n\n  private setGraphSize(fullScreen = true) {\n    let width, height;\n    if (fullScreen) {\n      width = globalThis.screen?.width || 0;\n      height = globalThis.screen?.height || 0;\n      this.graphSize = this.context.graph.getSize();\n    } else {\n      [width, height] = this.graphSize;\n    }\n    this.context.graph.setSize(width, height);\n    this.context.graph.render();\n  }\n\n  private onFullscreenChange = () => {\n    const isFull = !!document.fullscreenElement;\n    if (this.options.autoFit) this.setGraphSize(isFull);\n    if (isFull) {\n      this.options.onEnter?.();\n    } else {\n      this.options.onExit?.();\n    }\n  };\n\n  /**\n   * <zh/> 请求全屏\n   *\n   * <en/> Request full screen\n   */\n  public request() {\n    if (document.fullscreenElement || !isFullscreenEnabled()) return;\n    this.$el.requestFullscreen().catch((err: Error) => {\n      print.warn(`Error attempting to enable full-screen: ${err.message} (${err.name})`);\n    });\n  }\n\n  /**\n   * <zh/> 退出全屏\n   *\n   * <en/> Exit full screen\n   */\n  public exit() {\n    if (!document.fullscreenElement) return;\n    document.exitFullscreen();\n  }\n\n  /**\n   * <zh/> 更新配置\n   *\n   * <en/> Update options\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  public update(options: Partial<FullscreenOptions>): void {\n    this.unbindEvents();\n    super.update(options);\n    this.bindEvents();\n  }\n\n  public destroy(): void {\n    this.exit();\n    this.style.remove();\n    super.destroy();\n  }\n}\n\n/**\n * <zh/> 判断是否支持全屏\n *\n * <en/> Determine whether full screen is enabled\n * @returns <zh/> 是否支持全屏 | <en/> Whether full screen is enabled\n */\nfunction isFullscreenEnabled() {\n  return (\n    document.fullscreenEnabled ||\n    // <zh/> 使用 Reflect 语法规避 ts 检查 | <en/> use Reflect to avoid ts checking\n    Reflect.get(document, 'webkitFullscreenEnabled') ||\n    Reflect.get(document, 'mozFullscreenEnabled') ||\n    Reflect.get(document, 'msFullscreenEnabled')\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}