{"ast":null,"code":"import { isEqual } from '@antv/util';\n/**\n * <zh/> 比较两个数组的差异\n *\n * <en/> compare the difference between two arrays\n * @param original - <zh/> 原始数组 | <en/> original array\n * @param modified - <zh/> 修改后的数组 | <en/> modified array\n * @param key - <zh/> 比较的 key | <en/> key to compare\n * @param comparator - <zh/> 比较函数 | <en/> compare function\n * @returns <zh/> 数组差异 | <en/> array diff\n */\nexport function arrayDiff(original, modified, key, comparator = isEqual) {\n  const originalMap = new Map(original.map(d => [key(d), d]));\n  const modifiedMap = new Map(modified.map(d => [key(d), d]));\n  const originalSet = new Set(originalMap.keys());\n  const modifiedSet = new Set(modifiedMap.keys());\n  const enter = [];\n  const update = [];\n  const exit = [];\n  const keep = [];\n  modifiedSet.forEach(key => {\n    if (originalSet.has(key)) {\n      if (!comparator(originalMap.get(key), modifiedMap.get(key))) {\n        update.push(modifiedMap.get(key));\n      } else {\n        keep.push(modifiedMap.get(key));\n      }\n    } else {\n      enter.push(modifiedMap.get(key));\n    }\n  });\n  originalSet.forEach(key => {\n    if (!modifiedSet.has(key)) {\n      exit.push(originalMap.get(key));\n    }\n  });\n  return {\n    enter,\n    exit,\n    keep,\n    update\n  };\n}","map":{"version":3,"names":["isEqual","arrayDiff","original","modified","key","comparator","originalMap","Map","map","d","modifiedMap","originalSet","Set","keys","modifiedSet","enter","update","exit","keep","forEach","has","get","push"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/diff.ts"],"sourcesContent":["import { isEqual } from '@antv/util';\n\n/**\n * <zh/> 比较两个数组的差异\n *\n * <en/> compare the difference between two arrays\n * @param original - <zh/> 原始数组 | <en/> original array\n * @param modified - <zh/> 修改后的数组 | <en/> modified array\n * @param key - <zh/> 比较的 key | <en/> key to compare\n * @param comparator - <zh/> 比较函数 | <en/> compare function\n * @returns <zh/> 数组差异 | <en/> array diff\n */\nexport function arrayDiff<T>(\n  original: T[],\n  modified: T[],\n  key: (d: T) => string | number,\n  comparator: (a?: T, b?: T) => boolean = isEqual,\n) {\n  const originalMap = new Map(original.map((d) => [key(d), d]));\n  const modifiedMap = new Map(modified.map((d) => [key(d), d]));\n\n  const originalSet = new Set(originalMap.keys());\n  const modifiedSet = new Set(modifiedMap.keys());\n\n  const enter: T[] = [];\n  const update: T[] = [];\n  const exit: T[] = [];\n  const keep: T[] = [];\n\n  modifiedSet.forEach((key) => {\n    if (originalSet.has(key)) {\n      if (!comparator(originalMap.get(key), modifiedMap.get(key))) {\n        update.push(modifiedMap.get(key)!);\n      } else {\n        keep.push(modifiedMap.get(key)!);\n      }\n    } else {\n      enter.push(modifiedMap.get(key)!);\n    }\n  });\n\n  originalSet.forEach((key) => {\n    if (!modifiedSet.has(key)) {\n      exit.push(originalMap.get(key)!);\n    }\n  });\n\n  return { enter, exit, keep, update };\n}\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC;;;;;;;;;;AAUA,OAAM,SAAUC,SAASA,CACvBC,QAAa,EACbC,QAAa,EACbC,GAA8B,EAC9BC,UAAA,GAAwCL,OAAO;EAE/C,MAAMM,WAAW,GAAG,IAAIC,GAAG,CAACL,QAAQ,CAACM,GAAG,CAAEC,CAAC,IAAK,CAACL,GAAG,CAACK,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC;EAC7D,MAAMC,WAAW,GAAG,IAAIH,GAAG,CAACJ,QAAQ,CAACK,GAAG,CAAEC,CAAC,IAAK,CAACL,GAAG,CAACK,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC;EAE7D,MAAME,WAAW,GAAG,IAAIC,GAAG,CAACN,WAAW,CAACO,IAAI,EAAE,CAAC;EAC/C,MAAMC,WAAW,GAAG,IAAIF,GAAG,CAACF,WAAW,CAACG,IAAI,EAAE,CAAC;EAE/C,MAAME,KAAK,GAAQ,EAAE;EACrB,MAAMC,MAAM,GAAQ,EAAE;EACtB,MAAMC,IAAI,GAAQ,EAAE;EACpB,MAAMC,IAAI,GAAQ,EAAE;EAEpBJ,WAAW,CAACK,OAAO,CAAEf,GAAG,IAAI;IAC1B,IAAIO,WAAW,CAACS,GAAG,CAAChB,GAAG,CAAC,EAAE;MACxB,IAAI,CAACC,UAAU,CAACC,WAAW,CAACe,GAAG,CAACjB,GAAG,CAAC,EAAEM,WAAW,CAACW,GAAG,CAACjB,GAAG,CAAC,CAAC,EAAE;QAC3DY,MAAM,CAACM,IAAI,CAACZ,WAAW,CAACW,GAAG,CAACjB,GAAG,CAAE,CAAC;MACpC,CAAC,MAAM;QACLc,IAAI,CAACI,IAAI,CAACZ,WAAW,CAACW,GAAG,CAACjB,GAAG,CAAE,CAAC;MAClC;IACF,CAAC,MAAM;MACLW,KAAK,CAACO,IAAI,CAACZ,WAAW,CAACW,GAAG,CAACjB,GAAG,CAAE,CAAC;IACnC;EACF,CAAC,CAAC;EAEFO,WAAW,CAACQ,OAAO,CAAEf,GAAG,IAAI;IAC1B,IAAI,CAACU,WAAW,CAACM,GAAG,CAAChB,GAAG,CAAC,EAAE;MACzBa,IAAI,CAACK,IAAI,CAAChB,WAAW,CAACe,GAAG,CAACjB,GAAG,CAAE,CAAC;IAClC;EACF,CAAC,CAAC;EAEF,OAAO;IAAEW,KAAK;IAAEE,IAAI;IAAEC,IAAI;IAAEF;EAAM,CAAE;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}