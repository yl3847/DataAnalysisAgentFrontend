{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { omit } from '@antv/util';\nimport { BasePlugin } from '../base-plugin';\nimport { createPluginContainer } from '../utils/dom';\n/**\n * <zh/> 背景图\n *\n * <en/> Background image\n * @remarks\n * <zh/> 支持为图画布设置一个背景图片，让画布更有层次感、叙事性。\n *\n * <en/> Support setting a background image for the canvas to make the canvas more hierarchical and narrative.\n */\nexport class Background extends BasePlugin {\n  constructor(context, options) {\n    super(context, Object.assign({}, Background.defaultOptions, options));\n    this.$element = createPluginContainer('background');\n    const $container = this.context.canvas.getContainer();\n    $container.prepend(this.$element);\n    this.update(options);\n  }\n  /**\n   * <zh/> 更新背景图配置\n   *\n   * <en/> Update the background image configuration\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  update(options) {\n    const _super = Object.create(null, {\n      update: {\n        get: () => super.update\n      }\n    });\n    return __awaiter(this, void 0, void 0, function* () {\n      _super.update.call(this, options);\n      // Set the background style.\n      Object.assign(this.$element.style, omit(this.options, ['key', 'type']));\n    });\n  }\n  /**\n   * <zh/> 销毁背景图\n   *\n   * <en/> Destroy the background image\n   * @internal\n   */\n  destroy() {\n    super.destroy();\n    // Remove the background dom.\n    this.$element.remove();\n  }\n}\nBackground.defaultOptions = {\n  transition: 'background 0.5s',\n  backgroundSize: 'cover',\n  zIndex: '-1' // aviod to cover the other plugin's dom, eg: grid-line.\n};","map":{"version":3,"names":["omit","BasePlugin","createPluginContainer","Background","constructor","context","options","Object","assign","defaultOptions","$element","$container","canvas","getContainer","prepend","update","_super","call","style","destroy","remove","transition","backgroundSize","zIndex"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/plugins/background/index.ts"],"sourcesContent":["import { omit } from '@antv/util';\nimport type { RuntimeContext } from '../../runtime/types';\nimport type { BasePluginOptions } from '../base-plugin';\nimport { BasePlugin } from '../base-plugin';\nimport { createPluginContainer } from '../utils/dom';\n\n/**\n * <zh/> 背景配置项\n *\n * <en/> Background options\n */\nexport interface BackgroundOptions extends BasePluginOptions, CSSStyleDeclaration {}\n\n/**\n * <zh/> 背景图\n *\n * <en/> Background image\n * @remarks\n * <zh/> 支持为图画布设置一个背景图片，让画布更有层次感、叙事性。\n *\n * <en/> Support setting a background image for the canvas to make the canvas more hierarchical and narrative.\n */\nexport class Background extends BasePlugin<BackgroundOptions> {\n  static defaultOptions: Partial<BackgroundOptions> = {\n    transition: 'background 0.5s',\n    backgroundSize: 'cover',\n    zIndex: '-1', // aviod to cover the other plugin's dom, eg: grid-line.\n  };\n\n  private $element: HTMLElement = createPluginContainer('background');\n\n  constructor(context: RuntimeContext, options: BackgroundOptions) {\n    super(context, Object.assign({}, Background.defaultOptions, options));\n\n    const $container = this.context.canvas.getContainer();\n    $container!.prepend(this.$element);\n\n    this.update(options);\n  }\n\n  /**\n   * <zh/> 更新背景图配置\n   *\n   * <en/> Update the background image configuration\n   * @param options - <zh/> 配置项 | <en/> Options\n   * @internal\n   */\n  public async update(options: Partial<BackgroundOptions>) {\n    super.update(options);\n\n    // Set the background style.\n    Object.assign(this.$element.style, omit(this.options, ['key', 'type']));\n  }\n\n  /**\n   * <zh/> 销毁背景图\n   *\n   * <en/> Destroy the background image\n   * @internal\n   */\n  public destroy(): void {\n    super.destroy();\n    // Remove the background dom.\n    this.$element.remove();\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,IAAI,QAAQ,YAAY;AAGjC,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,qBAAqB,QAAQ,cAAc;AASpD;;;;;;;;;AASA,OAAM,MAAOC,UAAW,SAAQF,UAA6B;EAS3DG,YAAYC,OAAuB,EAAEC,OAA0B;IAC7D,KAAK,CAACD,OAAO,EAAEE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,UAAU,CAACM,cAAc,EAAEH,OAAO,CAAC,CAAC;IAH/D,KAAAI,QAAQ,GAAgBR,qBAAqB,CAAC,YAAY,CAAC;IAKjE,MAAMS,UAAU,GAAG,IAAI,CAACN,OAAO,CAACO,MAAM,CAACC,YAAY,EAAE;IACrDF,UAAW,CAACG,OAAO,CAAC,IAAI,CAACJ,QAAQ,CAAC;IAElC,IAAI,CAACK,MAAM,CAACT,OAAO,CAAC;EACtB;EAEA;;;;;;;EAOaS,MAAMA,CAACT,OAAmC;;;;;;;MACrDU,MAAA,CAAMD,MAAM,CAAAE,IAAA,OAACX,OAAO;MAEpB;MACAC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACE,QAAQ,CAACQ,KAAK,EAAElB,IAAI,CAAC,IAAI,CAACM,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IACzE,CAAC;;EAED;;;;;;EAMOa,OAAOA,CAAA;IACZ,KAAK,CAACA,OAAO,EAAE;IACf;IACA,IAAI,CAACT,QAAQ,CAACU,MAAM,EAAE;EACxB;;AAzCOjB,UAAA,CAAAM,cAAc,GAA+B;EAClDY,UAAU,EAAE,iBAAiB;EAC7BC,cAAc,EAAE,OAAO;EACvBC,MAAM,EAAE,IAAI,CAAE;CACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}