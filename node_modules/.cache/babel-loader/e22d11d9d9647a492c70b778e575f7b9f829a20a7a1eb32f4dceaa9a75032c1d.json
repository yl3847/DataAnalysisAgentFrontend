{"ast":null,"code":"export var CommonEvent;\n(function (CommonEvent) {\n  /**\n   * <zh/> 点击时触发\n   *\n   * <en/> Triggered when click\n   */\n  CommonEvent[\"CLICK\"] = \"click\";\n  /**\n   * <zh/> 双击时触发\n   *\n   * <en/> Triggered when double click\n   */\n  CommonEvent[\"DBLCLICK\"] = \"dblclick\";\n  /**\n   * <zh/> 指针移入时触发\n   *\n   * <en/> Triggered when the pointer enters\n   */\n  CommonEvent[\"POINTER_OVER\"] = \"pointerover\";\n  /**\n   * <zh/> 指针移出时触发\n   *\n   * <en/> Triggered when the pointer leaves\n   */\n  CommonEvent[\"POINTER_LEAVE\"] = \"pointerleave\";\n  /**\n   * <zh/> 指针移入时或移入子元素时触发（不会冒泡）\n   *\n   * <en/> Triggered when the pointer enters or enters a child element (does not bubble)\n   */\n  CommonEvent[\"POINTER_ENTER\"] = \"pointerenter\";\n  /**\n   * <zh/> 指针移动时触发\n   *\n   * <en/> Triggered when the pointer moves\n   */\n  CommonEvent[\"POINTER_MOVE\"] = \"pointermove\";\n  /**\n   * <zh/> 指针移出时触发\n   *\n   * <en/> Triggered when the pointer leaves\n   */\n  CommonEvent[\"POINTER_OUT\"] = \"pointerout\";\n  /**\n   * <zh/> 指针按下时触发\n   *\n   * <en/> Triggered when the pointer is pressed\n   */\n  CommonEvent[\"POINTER_DOWN\"] = \"pointerdown\";\n  /**\n   * <zh/> 指针抬起时触发\n   *\n   * <en/> Triggered when the pointer is lifted\n   */\n  CommonEvent[\"POINTER_UP\"] = \"pointerup\";\n  /**\n   * <zh/> 打开上下文菜单时触发\n   *\n   * <en/> Triggered when the context menu is opened\n   */\n  CommonEvent[\"CONTEXT_MENU\"] = \"contextmenu\";\n  /**\n   * <zh/> 开始拖拽时触发\n   *\n   * <en/> Triggered when dragging starts\n   */\n  CommonEvent[\"DRAG_START\"] = \"dragstart\";\n  /**\n   * <zh/> 拖拽过程中触发\n   *\n   * <en/> Triggered when dragging\n   */\n  CommonEvent[\"DRAG\"] = \"drag\";\n  /**\n   * <zh/> 拖拽结束时触发\n   *\n   * <en/> Triggered when dragging ends\n   */\n  CommonEvent[\"DRAG_END\"] = \"dragend\";\n  /**\n   * <zh/> 拖拽进入时触发\n   *\n   * <en/> Triggered when dragging enters\n   */\n  CommonEvent[\"DRAG_ENTER\"] = \"dragenter\";\n  /**\n   * <zh/> 拖拽经过时触发\n   *\n   * <en/> Triggered when dragging passes\n   */\n  CommonEvent[\"DRAG_OVER\"] = \"dragover\";\n  /**\n   * <zh/> 拖拽离开时触发\n   *\n   * <en/> Triggered when dragging leaves\n   */\n  CommonEvent[\"DRAG_LEAVE\"] = \"dragleave\";\n  /**\n   * <zh/> 拖拽放下时触发\n   *\n   * <en/> Triggered when dragging is dropped\n   */\n  CommonEvent[\"DROP\"] = \"drop\";\n  /**\n   * <zh/> 按下键盘时触发\n   *\n   * <en/> Triggered when the keyboard is pressed\n   */\n  CommonEvent[\"KEY_DOWN\"] = \"keydown\";\n  /**\n   * <zh/> 抬起键盘时触发\n   *\n   * <en/> Triggered when the keyboard is lifted\n   */\n  CommonEvent[\"KEY_UP\"] = \"keyup\";\n  /**\n   * <zh/> 滚动时触发\n   *\n   * <en/> Triggered when scrolling\n   */\n  CommonEvent[\"WHEEL\"] = \"wheel\";\n  /**\n   * <zh/> 双指捏拢或张开时触发\n   *\n   * <en/> Triggered when pinch in and pinch out\n   */\n  CommonEvent[\"PINCH\"] = \"pinch\";\n})(CommonEvent || (CommonEvent = {}));","map":{"version":3,"names":["CommonEvent"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/constants/events/common.ts"],"sourcesContent":["export enum CommonEvent {\n  /**\n   * <zh/> 点击时触发\n   *\n   * <en/> Triggered when click\n   */\n  CLICK = 'click',\n  /**\n   * <zh/> 双击时触发\n   *\n   * <en/> Triggered when double click\n   */\n  DBLCLICK = 'dblclick',\n  /**\n   * <zh/> 指针移入时触发\n   *\n   * <en/> Triggered when the pointer enters\n   */\n  POINTER_OVER = 'pointerover',\n  /**\n   * <zh/> 指针移出时触发\n   *\n   * <en/> Triggered when the pointer leaves\n   */\n  POINTER_LEAVE = 'pointerleave',\n  /**\n   * <zh/> 指针移入时或移入子元素时触发（不会冒泡）\n   *\n   * <en/> Triggered when the pointer enters or enters a child element (does not bubble)\n   */\n  POINTER_ENTER = 'pointerenter',\n  /**\n   * <zh/> 指针移动时触发\n   *\n   * <en/> Triggered when the pointer moves\n   */\n  POINTER_MOVE = 'pointermove',\n  /**\n   * <zh/> 指针移出时触发\n   *\n   * <en/> Triggered when the pointer leaves\n   */\n  POINTER_OUT = 'pointerout',\n  /**\n   * <zh/> 指针按下时触发\n   *\n   * <en/> Triggered when the pointer is pressed\n   */\n  POINTER_DOWN = 'pointerdown',\n  /**\n   * <zh/> 指针抬起时触发\n   *\n   * <en/> Triggered when the pointer is lifted\n   */\n  POINTER_UP = 'pointerup',\n  /**\n   * <zh/> 打开上下文菜单时触发\n   *\n   * <en/> Triggered when the context menu is opened\n   */\n  CONTEXT_MENU = 'contextmenu',\n  /**\n   * <zh/> 开始拖拽时触发\n   *\n   * <en/> Triggered when dragging starts\n   */\n  DRAG_START = 'dragstart',\n  /**\n   * <zh/> 拖拽过程中触发\n   *\n   * <en/> Triggered when dragging\n   */\n  DRAG = 'drag',\n  /**\n   * <zh/> 拖拽结束时触发\n   *\n   * <en/> Triggered when dragging ends\n   */\n  DRAG_END = 'dragend',\n  /**\n   * <zh/> 拖拽进入时触发\n   *\n   * <en/> Triggered when dragging enters\n   */\n  DRAG_ENTER = 'dragenter',\n  /**\n   * <zh/> 拖拽经过时触发\n   *\n   * <en/> Triggered when dragging passes\n   */\n  DRAG_OVER = 'dragover',\n  /**\n   * <zh/> 拖拽离开时触发\n   *\n   * <en/> Triggered when dragging leaves\n   */\n  DRAG_LEAVE = 'dragleave',\n  /**\n   * <zh/> 拖拽放下时触发\n   *\n   * <en/> Triggered when dragging is dropped\n   */\n  DROP = 'drop',\n  /**\n   * <zh/> 按下键盘时触发\n   *\n   * <en/> Triggered when the keyboard is pressed\n   */\n  KEY_DOWN = 'keydown',\n  /**\n   * <zh/> 抬起键盘时触发\n   *\n   * <en/> Triggered when the keyboard is lifted\n   */\n  KEY_UP = 'keyup',\n  /**\n   * <zh/> 滚动时触发\n   *\n   * <en/> Triggered when scrolling\n   */\n  WHEEL = 'wheel',\n  /**\n   * <zh/> 双指捏拢或张开时触发\n   *\n   * <en/> Triggered when pinch in and pinch out\n   */\n  PINCH = 'pinch',\n}\n"],"mappings":"AAAA,WAAYA,WA+HX;AA/HD,WAAYA,WAAW;EACrB;;;;;EAKAA,WAAA,mBAAe;EACf;;;;;EAKAA,WAAA,yBAAqB;EACrB;;;;;EAKAA,WAAA,gCAA4B;EAC5B;;;;;EAKAA,WAAA,kCAA8B;EAC9B;;;;;EAKAA,WAAA,kCAA8B;EAC9B;;;;;EAKAA,WAAA,gCAA4B;EAC5B;;;;;EAKAA,WAAA,8BAA0B;EAC1B;;;;;EAKAA,WAAA,gCAA4B;EAC5B;;;;;EAKAA,WAAA,4BAAwB;EACxB;;;;;EAKAA,WAAA,gCAA4B;EAC5B;;;;;EAKAA,WAAA,4BAAwB;EACxB;;;;;EAKAA,WAAA,iBAAa;EACb;;;;;EAKAA,WAAA,wBAAoB;EACpB;;;;;EAKAA,WAAA,4BAAwB;EACxB;;;;;EAKAA,WAAA,0BAAsB;EACtB;;;;;EAKAA,WAAA,4BAAwB;EACxB;;;;;EAKAA,WAAA,iBAAa;EACb;;;;;EAKAA,WAAA,wBAAoB;EACpB;;;;;EAKAA,WAAA,oBAAgB;EAChB;;;;;EAKAA,WAAA,mBAAe;EACf;;;;;EAKAA,WAAA,mBAAe;AACjB,CAAC,EA/HWA,WAAW,KAAXA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}