{"ast":null,"code":"import { isFunction } from '@antv/util';\nimport { CommonEvent } from '../constants';\nimport { ELEMENT_TYPES } from '../constants/element';\nimport { isToBeDestroyed } from '../utils/element';\nimport { idsOf } from '../utils/id';\nimport { getElementNthDegreeIds } from '../utils/relation';\nimport { BaseBehavior } from './base-behavior';\n/**\n * <zh/> 悬浮元素交互\n *\n * <en/> Hover element behavior\n * @remarks\n * <zh/> 当鼠标悬停在元素上时，可以激活元素的状态，例如高亮节点或边。\n *\n * <en/> When the mouse hovers over an element, you can activate the state of the element, such as highlighting nodes or edges.\n */\nexport class HoverActivate extends BaseBehavior {\n  constructor(context, options) {\n    super(context, Object.assign({}, HoverActivate.defaultOptions, options));\n    this.isFrozen = false;\n    this.toggleFrozen = e => {\n      this.isFrozen = e.type === 'dragstart';\n    };\n    this.hoverElement = event => {\n      if (!this.validate(event)) return;\n      const isEnter = event.type === CommonEvent.POINTER_ENTER;\n      this.updateElementsState(event, isEnter);\n      const {\n        onHover,\n        onHoverEnd\n      } = this.options;\n      if (isEnter) onHover === null || onHover === void 0 ? void 0 : onHover(event);else onHoverEnd === null || onHoverEnd === void 0 ? void 0 : onHoverEnd(event);\n    };\n    this.updateElementsState = (event, add) => {\n      if (!this.options.state && !this.options.inactiveState) return;\n      const {\n        graph\n      } = this.context;\n      const {\n        state,\n        animation,\n        inactiveState\n      } = this.options;\n      const activeIds = this.getActiveIds(event);\n      const states = {};\n      if (state) {\n        Object.assign(states, this.getElementsState(activeIds, state, add));\n      }\n      if (inactiveState) {\n        const inactiveIds = idsOf(graph.getData(), true).filter(id => !activeIds.includes(id));\n        Object.assign(states, this.getElementsState(inactiveIds, inactiveState, add));\n      }\n      graph.setElementState(states, animation);\n    };\n    this.getElementsState = (ids, state, add) => {\n      const {\n        graph\n      } = this.context;\n      const states = {};\n      ids.forEach(id => {\n        const currentState = graph.getElementState(id);\n        if (add) {\n          states[id] = currentState.includes(state) ? currentState : [...currentState, state];\n        } else {\n          states[id] = currentState.filter(s => s !== state);\n        }\n      });\n      return states;\n    };\n    this.bindEvents();\n  }\n  bindEvents() {\n    const {\n      graph\n    } = this.context;\n    this.unbindEvents();\n    ELEMENT_TYPES.forEach(type => {\n      graph.on(`${type}:${CommonEvent.POINTER_ENTER}`, this.hoverElement);\n      graph.on(`${type}:${CommonEvent.POINTER_LEAVE}`, this.hoverElement);\n    });\n    const canvas = this.context.canvas.document;\n    canvas.addEventListener(`${CommonEvent.DRAG_START}`, this.toggleFrozen);\n    canvas.addEventListener(`${CommonEvent.DRAG_END}`, this.toggleFrozen);\n  }\n  getActiveIds(event) {\n    const {\n      graph\n    } = this.context;\n    const {\n      degree,\n      direction\n    } = this.options;\n    const elementId = event.target.id;\n    return degree ? getElementNthDegreeIds(graph, event.targetType, elementId, typeof degree === 'function' ? degree(event) : degree, direction) : [elementId];\n  }\n  validate(event) {\n    if (this.destroyed || this.isFrozen || isToBeDestroyed(event.target) ||\n    // @ts-expect-error private property\n    // 避免动画冲突，在combo/node折叠展开过程中不触发\n    this.context.graph.isCollapsingExpanding) return false;\n    const {\n      enable\n    } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n  unbindEvents() {\n    const {\n      graph\n    } = this.context;\n    ELEMENT_TYPES.forEach(type => {\n      graph.off(`${type}:${CommonEvent.POINTER_ENTER}`, this.hoverElement);\n      graph.off(`${type}:${CommonEvent.POINTER_LEAVE}`, this.hoverElement);\n    });\n    const canvas = this.context.canvas.document;\n    canvas.removeEventListener(`${CommonEvent.DRAG_START}`, this.toggleFrozen);\n    canvas.removeEventListener(`${CommonEvent.DRAG_END}`, this.toggleFrozen);\n  }\n  destroy() {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\nHoverActivate.defaultOptions = {\n  animation: false,\n  enable: true,\n  degree: 0,\n  direction: 'both',\n  state: 'active',\n  inactiveState: undefined\n};","map":{"version":3,"names":["isFunction","CommonEvent","ELEMENT_TYPES","isToBeDestroyed","idsOf","getElementNthDegreeIds","BaseBehavior","HoverActivate","constructor","context","options","Object","assign","defaultOptions","isFrozen","toggleFrozen","e","type","hoverElement","event","validate","isEnter","POINTER_ENTER","updateElementsState","onHover","onHoverEnd","add","state","inactiveState","graph","animation","activeIds","getActiveIds","states","getElementsState","inactiveIds","getData","filter","id","includes","setElementState","ids","forEach","currentState","getElementState","s","bindEvents","unbindEvents","on","POINTER_LEAVE","canvas","document","addEventListener","DRAG_START","DRAG_END","degree","direction","elementId","target","targetType","destroyed","isCollapsingExpanding","enable","off","removeEventListener","destroy","undefined"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/behaviors/hover-activate.ts"],"sourcesContent":["import { isFunction } from '@antv/util';\nimport { CommonEvent } from '../constants';\nimport { ELEMENT_TYPES } from '../constants/element';\nimport type { RuntimeContext } from '../runtime/types';\nimport type { EdgeDirection, Element, ElementType, ID, IDragEvent, IPointerEvent, State } from '../types';\nimport { isToBeDestroyed } from '../utils/element';\nimport { idsOf } from '../utils/id';\nimport { getElementNthDegreeIds } from '../utils/relation';\nimport type { BaseBehaviorOptions } from './base-behavior';\nimport { BaseBehavior } from './base-behavior';\n\n/**\n * <zh/> 悬浮元素交互配置项\n *\n * <en/> Hover element behavior options\n */\nexport interface HoverActivateOptions extends BaseBehaviorOptions {\n  /**\n   * <zh/> 是否启用动画\n   *\n   * <en/> Whether to enable animation\n   * @defaultValue true\n   */\n  animation?: boolean;\n  /**\n   * <zh/> 是否启用悬浮元素的功能\n   *\n   * <en/> Whether to enable hover element function\n   * @defaultValue true\n   */\n  enable?: boolean | ((event: IPointerEvent) => boolean);\n  /**\n   * <zh/> 激活元素的n度关系\n   * - 默认为 `0`，表示只激活当前节点\n   * - `1` 表示激活当前节点及其直接相邻的节点和边，以此类推\n   *\n   * <en/> N-degree relationship of the hovered element\n   * - default to `0`, which means only the current node is activated\n   * - `1` means the current node and its directly adjacent nodes and edges are activated, etc\n   * @defaultValue 0\n   */\n  degree?: number | ((event: IPointerEvent) => number);\n  /**\n   * <zh/> 指定边的方向\n   * - `'both'`: 表示激活当前节点的所有关系\n   * - `'in'`: 表示激活当前节点的入边和入节点\n   * - `'out'`: 表示激活当前节点的出边和出节点\n   *\n   * <en/> Specify the direction of the edge\n   * - `'both'`: Activate all relationships of the current node\n   * - `'in'`: Activate the incoming edges and nodes of the current node\n   * - `'out'`: Activate the outgoing edges and nodes of the current node\n   * @defaultValue 'both'\n   */\n  direction?: EdgeDirection;\n  /**\n   * <zh/> 激活元素的状态，默认为 `active`\n   *\n   * <en/> Active element state, default to`active`\n   * @defaultValue 'active'\n   */\n  state?: State;\n  /**\n   * <zh/> 非激活元素的状态，默认为不改变\n   *\n   * <en/> Inactive element state, default to no change\n   */\n  inactiveState?: State;\n  /**\n   * <zh/> 当元素被悬停时的回调\n   *\n   * <en/> Callback when the element is hovered\n   */\n  onHover?: (event: IPointerEvent) => void;\n  /**\n   * <zh/> 当悬停结束时的回调\n   *\n   * <en/> Callback when the hover ends\n   */\n  onHoverEnd?: (event: IPointerEvent) => void;\n}\n\n/**\n * <zh/> 悬浮元素交互\n *\n * <en/> Hover element behavior\n * @remarks\n * <zh/> 当鼠标悬停在元素上时，可以激活元素的状态，例如高亮节点或边。\n *\n * <en/> When the mouse hovers over an element, you can activate the state of the element, such as highlighting nodes or edges.\n */\nexport class HoverActivate extends BaseBehavior<HoverActivateOptions> {\n  static defaultOptions: Partial<HoverActivateOptions> = {\n    animation: false,\n    enable: true,\n    degree: 0,\n    direction: 'both',\n    state: 'active',\n    inactiveState: undefined,\n  };\n\n  private isFrozen = false;\n\n  constructor(context: RuntimeContext, options: HoverActivateOptions) {\n    super(context, Object.assign({}, HoverActivate.defaultOptions, options));\n    this.bindEvents();\n  }\n\n  private toggleFrozen = (e: IDragEvent) => {\n    this.isFrozen = e.type === 'dragstart';\n  };\n\n  private bindEvents() {\n    const { graph } = this.context;\n    this.unbindEvents();\n\n    ELEMENT_TYPES.forEach((type) => {\n      graph.on(`${type}:${CommonEvent.POINTER_ENTER}`, this.hoverElement);\n      graph.on(`${type}:${CommonEvent.POINTER_LEAVE}`, this.hoverElement);\n    });\n\n    const canvas = this.context.canvas.document;\n    canvas.addEventListener(`${CommonEvent.DRAG_START}`, this.toggleFrozen);\n    canvas.addEventListener(`${CommonEvent.DRAG_END}`, this.toggleFrozen);\n  }\n\n  private hoverElement = (event: IPointerEvent<Element>) => {\n    if (!this.validate(event)) return;\n    const isEnter = event.type === CommonEvent.POINTER_ENTER;\n    this.updateElementsState(event, isEnter);\n\n    const { onHover, onHoverEnd } = this.options;\n    if (isEnter) onHover?.(event);\n    else onHoverEnd?.(event);\n  };\n\n  protected getActiveIds(event: IPointerEvent<Element>) {\n    const { graph } = this.context;\n    const { degree, direction } = this.options;\n    const elementId = event.target.id;\n\n    return degree\n      ? getElementNthDegreeIds(\n          graph,\n          event.targetType as ElementType,\n          elementId,\n          typeof degree === 'function' ? degree(event) : degree,\n          direction,\n        )\n      : [elementId];\n  }\n\n  private updateElementsState = (event: IPointerEvent<Element>, add: boolean) => {\n    if (!this.options.state && !this.options.inactiveState) return;\n\n    const { graph } = this.context;\n    const { state, animation, inactiveState } = this.options;\n\n    const activeIds = this.getActiveIds(event);\n    const states: Record<ID, State[]> = {};\n\n    if (state) {\n      Object.assign(states, this.getElementsState(activeIds, state, add));\n    }\n\n    if (inactiveState) {\n      const inactiveIds = idsOf(graph.getData(), true).filter((id) => !activeIds.includes(id));\n      Object.assign(states, this.getElementsState(inactiveIds, inactiveState, add));\n    }\n    graph.setElementState(states, animation);\n  };\n\n  private getElementsState = (ids: ID[], state: State, add: boolean) => {\n    const { graph } = this.context;\n    const states: Record<ID, State[]> = {};\n    ids.forEach((id) => {\n      const currentState = graph.getElementState(id);\n      if (add) {\n        states[id] = currentState.includes(state) ? currentState : [...currentState, state];\n      } else {\n        states[id] = currentState.filter((s) => s !== state);\n      }\n    });\n    return states;\n  };\n\n  private validate(event: IPointerEvent<Element>) {\n    if (\n      this.destroyed ||\n      this.isFrozen ||\n      isToBeDestroyed(event.target) ||\n      // @ts-expect-error private property\n      // 避免动画冲突，在combo/node折叠展开过程中不触发\n      this.context.graph.isCollapsingExpanding\n    )\n      return false;\n    const { enable } = this.options;\n    if (isFunction(enable)) return enable(event);\n    return !!enable;\n  }\n\n  private unbindEvents() {\n    const { graph } = this.context;\n\n    ELEMENT_TYPES.forEach((type) => {\n      graph.off(`${type}:${CommonEvent.POINTER_ENTER}`, this.hoverElement);\n      graph.off(`${type}:${CommonEvent.POINTER_LEAVE}`, this.hoverElement);\n    });\n\n    const canvas = this.context.canvas.document;\n    canvas.removeEventListener(`${CommonEvent.DRAG_START}`, this.toggleFrozen);\n    canvas.removeEventListener(`${CommonEvent.DRAG_END}`, this.toggleFrozen);\n  }\n\n  public destroy() {\n    this.unbindEvents();\n    super.destroy();\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,YAAY;AACvC,SAASC,WAAW,QAAQ,cAAc;AAC1C,SAASC,aAAa,QAAQ,sBAAsB;AAGpD,SAASC,eAAe,QAAQ,kBAAkB;AAClD,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,sBAAsB,QAAQ,mBAAmB;AAE1D,SAASC,YAAY,QAAQ,iBAAiB;AAyE9C;;;;;;;;;AASA,OAAM,MAAOC,aAAc,SAAQD,YAAkC;EAYnEE,YAAYC,OAAuB,EAAEC,OAA6B;IAChE,KAAK,CAACD,OAAO,EAAEE,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,aAAa,CAACM,cAAc,EAAEH,OAAO,CAAC,CAAC;IAHlE,KAAAI,QAAQ,GAAG,KAAK;IAOhB,KAAAC,YAAY,GAAIC,CAAa,IAAI;MACvC,IAAI,CAACF,QAAQ,GAAGE,CAAC,CAACC,IAAI,KAAK,WAAW;IACxC,CAAC;IAgBO,KAAAC,YAAY,GAAIC,KAA6B,IAAI;MACvD,IAAI,CAAC,IAAI,CAACC,QAAQ,CAACD,KAAK,CAAC,EAAE;MAC3B,MAAME,OAAO,GAAGF,KAAK,CAACF,IAAI,KAAKhB,WAAW,CAACqB,aAAa;MACxD,IAAI,CAACC,mBAAmB,CAACJ,KAAK,EAAEE,OAAO,CAAC;MAExC,MAAM;QAAEG,OAAO;QAAEC;MAAU,CAAE,GAAG,IAAI,CAACf,OAAO;MAC5C,IAAIW,OAAO,EAAEG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAGL,KAAK,CAAC,CAAC,KACzBM,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGN,KAAK,CAAC;IAC1B,CAAC;IAkBO,KAAAI,mBAAmB,GAAG,CAACJ,KAA6B,EAAEO,GAAY,KAAI;MAC5E,IAAI,CAAC,IAAI,CAAChB,OAAO,CAACiB,KAAK,IAAI,CAAC,IAAI,CAACjB,OAAO,CAACkB,aAAa,EAAE;MAExD,MAAM;QAAEC;MAAK,CAAE,GAAG,IAAI,CAACpB,OAAO;MAC9B,MAAM;QAAEkB,KAAK;QAAEG,SAAS;QAAEF;MAAa,CAAE,GAAG,IAAI,CAAClB,OAAO;MAExD,MAAMqB,SAAS,GAAG,IAAI,CAACC,YAAY,CAACb,KAAK,CAAC;MAC1C,MAAMc,MAAM,GAAwB,EAAE;MAEtC,IAAIN,KAAK,EAAE;QACThB,MAAM,CAACC,MAAM,CAACqB,MAAM,EAAE,IAAI,CAACC,gBAAgB,CAACH,SAAS,EAAEJ,KAAK,EAAED,GAAG,CAAC,CAAC;MACrE;MAEA,IAAIE,aAAa,EAAE;QACjB,MAAMO,WAAW,GAAG/B,KAAK,CAACyB,KAAK,CAACO,OAAO,EAAE,EAAE,IAAI,CAAC,CAACC,MAAM,CAAEC,EAAE,IAAK,CAACP,SAAS,CAACQ,QAAQ,CAACD,EAAE,CAAC,CAAC;QACxF3B,MAAM,CAACC,MAAM,CAACqB,MAAM,EAAE,IAAI,CAACC,gBAAgB,CAACC,WAAW,EAAEP,aAAa,EAAEF,GAAG,CAAC,CAAC;MAC/E;MACAG,KAAK,CAACW,eAAe,CAACP,MAAM,EAAEH,SAAS,CAAC;IAC1C,CAAC;IAEO,KAAAI,gBAAgB,GAAG,CAACO,GAAS,EAAEd,KAAY,EAAED,GAAY,KAAI;MACnE,MAAM;QAAEG;MAAK,CAAE,GAAG,IAAI,CAACpB,OAAO;MAC9B,MAAMwB,MAAM,GAAwB,EAAE;MACtCQ,GAAG,CAACC,OAAO,CAAEJ,EAAE,IAAI;QACjB,MAAMK,YAAY,GAAGd,KAAK,CAACe,eAAe,CAACN,EAAE,CAAC;QAC9C,IAAIZ,GAAG,EAAE;UACPO,MAAM,CAACK,EAAE,CAAC,GAAGK,YAAY,CAACJ,QAAQ,CAACZ,KAAK,CAAC,GAAGgB,YAAY,GAAG,CAAC,GAAGA,YAAY,EAAEhB,KAAK,CAAC;QACrF,CAAC,MAAM;UACLM,MAAM,CAACK,EAAE,CAAC,GAAGK,YAAY,CAACN,MAAM,CAAEQ,CAAC,IAAKA,CAAC,KAAKlB,KAAK,CAAC;QACtD;MACF,CAAC,CAAC;MACF,OAAOM,MAAM;IACf,CAAC;IA/EC,IAAI,CAACa,UAAU,EAAE;EACnB;EAMQA,UAAUA,CAAA;IAChB,MAAM;MAAEjB;IAAK,CAAE,GAAG,IAAI,CAACpB,OAAO;IAC9B,IAAI,CAACsC,YAAY,EAAE;IAEnB7C,aAAa,CAACwC,OAAO,CAAEzB,IAAI,IAAI;MAC7BY,KAAK,CAACmB,EAAE,CAAC,GAAG/B,IAAI,IAAIhB,WAAW,CAACqB,aAAa,EAAE,EAAE,IAAI,CAACJ,YAAY,CAAC;MACnEW,KAAK,CAACmB,EAAE,CAAC,GAAG/B,IAAI,IAAIhB,WAAW,CAACgD,aAAa,EAAE,EAAE,IAAI,CAAC/B,YAAY,CAAC;IACrE,CAAC,CAAC;IAEF,MAAMgC,MAAM,GAAG,IAAI,CAACzC,OAAO,CAACyC,MAAM,CAACC,QAAQ;IAC3CD,MAAM,CAACE,gBAAgB,CAAC,GAAGnD,WAAW,CAACoD,UAAU,EAAE,EAAE,IAAI,CAACtC,YAAY,CAAC;IACvEmC,MAAM,CAACE,gBAAgB,CAAC,GAAGnD,WAAW,CAACqD,QAAQ,EAAE,EAAE,IAAI,CAACvC,YAAY,CAAC;EACvE;EAYUiB,YAAYA,CAACb,KAA6B;IAClD,MAAM;MAAEU;IAAK,CAAE,GAAG,IAAI,CAACpB,OAAO;IAC9B,MAAM;MAAE8C,MAAM;MAAEC;IAAS,CAAE,GAAG,IAAI,CAAC9C,OAAO;IAC1C,MAAM+C,SAAS,GAAGtC,KAAK,CAACuC,MAAM,CAACpB,EAAE;IAEjC,OAAOiB,MAAM,GACTlD,sBAAsB,CACpBwB,KAAK,EACLV,KAAK,CAACwC,UAAyB,EAC/BF,SAAS,EACT,OAAOF,MAAM,KAAK,UAAU,GAAGA,MAAM,CAACpC,KAAK,CAAC,GAAGoC,MAAM,EACrDC,SAAS,CACV,GACD,CAACC,SAAS,CAAC;EACjB;EAoCQrC,QAAQA,CAACD,KAA6B;IAC5C,IACE,IAAI,CAACyC,SAAS,IACd,IAAI,CAAC9C,QAAQ,IACbX,eAAe,CAACgB,KAAK,CAACuC,MAAM,CAAC;IAC7B;IACA;IACA,IAAI,CAACjD,OAAO,CAACoB,KAAK,CAACgC,qBAAqB,EAExC,OAAO,KAAK;IACd,MAAM;MAAEC;IAAM,CAAE,GAAG,IAAI,CAACpD,OAAO;IAC/B,IAAIV,UAAU,CAAC8D,MAAM,CAAC,EAAE,OAAOA,MAAM,CAAC3C,KAAK,CAAC;IAC5C,OAAO,CAAC,CAAC2C,MAAM;EACjB;EAEQf,YAAYA,CAAA;IAClB,MAAM;MAAElB;IAAK,CAAE,GAAG,IAAI,CAACpB,OAAO;IAE9BP,aAAa,CAACwC,OAAO,CAAEzB,IAAI,IAAI;MAC7BY,KAAK,CAACkC,GAAG,CAAC,GAAG9C,IAAI,IAAIhB,WAAW,CAACqB,aAAa,EAAE,EAAE,IAAI,CAACJ,YAAY,CAAC;MACpEW,KAAK,CAACkC,GAAG,CAAC,GAAG9C,IAAI,IAAIhB,WAAW,CAACgD,aAAa,EAAE,EAAE,IAAI,CAAC/B,YAAY,CAAC;IACtE,CAAC,CAAC;IAEF,MAAMgC,MAAM,GAAG,IAAI,CAACzC,OAAO,CAACyC,MAAM,CAACC,QAAQ;IAC3CD,MAAM,CAACc,mBAAmB,CAAC,GAAG/D,WAAW,CAACoD,UAAU,EAAE,EAAE,IAAI,CAACtC,YAAY,CAAC;IAC1EmC,MAAM,CAACc,mBAAmB,CAAC,GAAG/D,WAAW,CAACqD,QAAQ,EAAE,EAAE,IAAI,CAACvC,YAAY,CAAC;EAC1E;EAEOkD,OAAOA,CAAA;IACZ,IAAI,CAAClB,YAAY,EAAE;IACnB,KAAK,CAACkB,OAAO,EAAE;EACjB;;AA7HO1D,aAAA,CAAAM,cAAc,GAAkC;EACrDiB,SAAS,EAAE,KAAK;EAChBgC,MAAM,EAAE,IAAI;EACZP,MAAM,EAAE,CAAC;EACTC,SAAS,EAAE,MAAM;EACjB7B,KAAK,EAAE,QAAQ;EACfC,aAAa,EAAEsC;CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}