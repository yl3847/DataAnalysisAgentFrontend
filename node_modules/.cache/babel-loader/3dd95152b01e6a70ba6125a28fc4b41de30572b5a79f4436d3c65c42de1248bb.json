{"ast":null,"code":"import { __extends, __read } from \"tslib\";\nimport { deepAssign, getShapeSpace, hide, show } from '../../util';\nimport { CrosshairBase } from './base';\nimport { LINE_CROSSHAIR_DEFAULT_STYLE } from './constant';\nvar LineCrosshair = /** @class */function (_super) {\n  __extends(LineCrosshair, _super);\n  function LineCrosshair(options) {\n    return _super.call(this, deepAssign({}, LineCrosshair.defaultOptions, options)) || this;\n  }\n  Object.defineProperty(LineCrosshair.prototype, \"crosshairPath\", {\n    get: function () {\n      var _a = this.attributes,\n        _b = __read(_a.startPos, 2),\n        sx = _b[0],\n        sy = _b[1],\n        _c = __read(_a.endPos, 2),\n        ex = _c[0],\n        ey = _c[1];\n      var path = [['M', 0, 0], ['L', ex - sx, ey - sy], ['Z']];\n      return path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineCrosshair.prototype, \"localPointer\", {\n    /**\n     * 获得 pointer 的相对坐标\n     */\n    get: function () {\n      if (!this.pointer) return this.attributes.startPos;\n      var _a = __read(this.getPosition(), 2),\n        bx = _a[0],\n        by = _a[1];\n      var _b = __read(this.pointer, 2),\n        x = _b[0],\n        y = _b[1];\n      return [x - bx, y - by];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineCrosshair.prototype, \"isVertical\", {\n    get: function () {\n      var _a = this.attributes,\n        _b = __read(_a.startPos, 2),\n        x1 = _b[0],\n        y1 = _b[1],\n        _c = __read(_a.endPos, 2),\n        x2 = _c[0],\n        y2 = _c[1];\n      return x1 === x2 && y1 !== y2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(LineCrosshair.prototype, \"tagShapeSpace\", {\n    get: function () {\n      var _a = getShapeSpace(this.tagShape),\n        width = _a.width,\n        height = _a.height;\n      return {\n        width: width,\n        height: height\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  LineCrosshair.prototype.update = function (cfg) {\n    _super.prototype.update.call(this, cfg);\n  };\n  /**\n   * 将线移动至对应位置\n   */\n  LineCrosshair.prototype.setPointer = function (pointer) {\n    _super.prototype.setPointer.call(this, pointer);\n    this.adjustPosition();\n  };\n  LineCrosshair.prototype.setText = function (text) {\n    this.tagShape.update({\n      text: text\n    });\n    this.adjustTag();\n  };\n  LineCrosshair.prototype.adjustLayout = function () {\n    this.adjustPosition();\n    this.adjustTag();\n  };\n  /**\n   * 调整this位置\n   */\n  LineCrosshair.prototype.adjustPosition = function () {\n    var _a = __read(this.localPointer, 2),\n      lx = _a[0],\n      ly = _a[1];\n    var _b = __read(this.attributes.startPos, 2),\n      sx = _b[0],\n      sy = _b[1];\n    var targetPos = this.getOrientVal([sx, ly], [lx, sy]);\n    this.shapesGroup.setLocalPosition(targetPos);\n  };\n  /**\n   * 调整tag位置\n   */\n  LineCrosshair.prototype.adjustTag = function () {\n    var _a = this.attributes,\n      tagText = _a.tagText,\n      tagPosition = _a.tagPosition,\n      _b = __read(_a.startPos, 2),\n      x1 = _b[0],\n      y1 = _b[1],\n      _c = __read(_a.endPos, 2),\n      x2 = _c[0],\n      y2 = _c[1];\n    if (!tagText || tagText === '') {\n      hide(this.tagShape);\n      return;\n    }\n    show(this.tagShape);\n    var _d = this.tagShapeSpace,\n      width = _d.width,\n      height = _d.height;\n    // 偏移量\n    var _e = __read(this.getOrientVal({\n        start: [-width / 2, height / 2],\n        end: [x2 - x1 + width / 2, height / 2]\n      }, {\n        start: [0, 0],\n        end: [0, y2 - y1 + height]\n      })[tagPosition], 2),\n      xOffset = _e[0],\n      yOffset = _e[1];\n    this.tagShape.setLocalPosition(xOffset, yOffset);\n  };\n  LineCrosshair.prototype.getOrientVal = function (v1, v2) {\n    return this.isVertical ? v2 : v1;\n  };\n  LineCrosshair.tag = 'line-crosshair';\n  LineCrosshair.defaultOptions = {\n    style: LINE_CROSSHAIR_DEFAULT_STYLE\n  };\n  return LineCrosshair;\n}(CrosshairBase);\nexport { LineCrosshair };","map":{"version":3,"names":["deepAssign","getShapeSpace","hide","show","CrosshairBase","LINE_CROSSHAIR_DEFAULT_STYLE","LineCrosshair","_super","__extends","options","call","defaultOptions","Object","defineProperty","prototype","get","_a","attributes","_b","__read","startPos","sx","sy","_c","endPos","ex","ey","path","pointer","getPosition","bx","by","x","y","x1","y1","x2","y2","tagShape","width","height","update","cfg","setPointer","adjustPosition","setText","text","adjustTag","adjustLayout","localPointer","lx","ly","targetPos","getOrientVal","shapesGroup","setLocalPosition","tagText","tagPosition","_d","tagShapeSpace","_e","start","end","xOffset","yOffset","v1","v2","isVertical","tag","style"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/ui/crosshair/line.ts"],"sourcesContent":["import type { Point } from '../../types';\nimport { deepAssign, getShapeSpace, hide, show } from '../../util';\nimport { CrosshairBase } from './base';\nimport { LINE_CROSSHAIR_DEFAULT_STYLE } from './constant';\nimport type { LineCrosshairOptions, LineCrosshairStyleProps } from './types';\n\nexport type { LineCrosshairStyleProps, LineCrosshairOptions };\n\nexport class LineCrosshair extends CrosshairBase<Required<LineCrosshairStyleProps>> {\n  static tag = 'line-crosshair';\n\n  protected static defaultOptions = {\n    style: LINE_CROSSHAIR_DEFAULT_STYLE,\n  };\n\n  protected get crosshairPath() {\n    const {\n      startPos: [sx, sy],\n      endPos: [ex, ey],\n    } = this.attributes;\n    const path = [['M', 0, 0], ['L', ex - sx, ey - sy], ['Z']] as any[];\n    return path;\n  }\n\n  /**\n   * 获得 pointer 的相对坐标\n   */\n  protected get localPointer() {\n    if (!this.pointer) return this.attributes.startPos;\n    const [bx, by] = this.getPosition();\n    const [x, y] = this.pointer;\n    return [x - bx, y - by];\n  }\n\n  private get isVertical() {\n    const {\n      startPos: [x1, y1],\n      endPos: [x2, y2],\n    } = this.attributes;\n    return x1 === x2 && y1 !== y2;\n  }\n\n  private get tagShapeSpace() {\n    const { width, height } = getShapeSpace(this.tagShape);\n    return { width, height };\n  }\n\n  constructor(options: LineCrosshairOptions) {\n    super(deepAssign({}, LineCrosshair.defaultOptions, options));\n  }\n\n  public update(cfg: Partial<LineCrosshairStyleProps>) {\n    super.update(cfg);\n  }\n\n  /**\n   * 将线移动至对应位置\n   */\n  public setPointer(pointer: Point) {\n    super.setPointer(pointer);\n    this.adjustPosition();\n  }\n\n  public setText(text: string) {\n    this.tagShape.update({ text });\n    this.adjustTag();\n  }\n\n  protected adjustLayout() {\n    this.adjustPosition();\n    this.adjustTag();\n  }\n\n  /**\n   * 调整this位置\n   */\n  private adjustPosition() {\n    const [lx, ly] = this.localPointer;\n    const {\n      startPos: [sx, sy],\n    } = this.attributes;\n    const targetPos = this.getOrientVal<[number, number]>([sx, ly], [lx, sy]);\n    this.shapesGroup.setLocalPosition(targetPos);\n  }\n\n  /**\n   * 调整tag位置\n   */\n  private adjustTag() {\n    const {\n      tagText,\n      tagPosition,\n      startPos: [x1, y1],\n      endPos: [x2, y2],\n    } = this.attributes;\n\n    if (!tagText || tagText === '') {\n      hide(this.tagShape);\n      return;\n    }\n    show(this.tagShape);\n\n    const { width, height } = this.tagShapeSpace;\n    // 偏移量\n    const [xOffset, yOffset] = this.getOrientVal(\n      {\n        start: [-width / 2, height / 2],\n        end: [x2 - x1 + width / 2, height / 2],\n      },\n      {\n        start: [0, 0],\n        end: [0, y2 - y1 + height],\n      }\n    )[tagPosition];\n    this.tagShape.setLocalPosition(xOffset, yOffset);\n  }\n\n  private getOrientVal<T>(v1: T, v2: T): T {\n    return this.isVertical ? v2 : v1;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}