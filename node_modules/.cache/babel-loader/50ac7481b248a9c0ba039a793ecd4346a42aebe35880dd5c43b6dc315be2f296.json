{"ast":null,"code":"import { Matrix as MLMatrix, SingularValueDecomposition } from 'ml-matrix';\nexport const mds = (dimension, distances, linkDistance) => {\n  try {\n    // square distances\n    const M = MLMatrix.mul(MLMatrix.pow(distances, 2), -0.5);\n    // double centre the rows/columns\n    const rowMeans = M.mean('row');\n    const colMeans = M.mean('column');\n    const totalMean = M.mean();\n    M.add(totalMean).subRowVector(rowMeans).subColumnVector(colMeans);\n    // take the SVD of the double centred matrix, and return the\n    // points from it\n    const ret = new SingularValueDecomposition(M);\n    const eigenValues = MLMatrix.sqrt(ret.diagonalMatrix).diagonal();\n    return ret.leftSingularVectors.toJSON().map(row => {\n      return MLMatrix.mul([row], [eigenValues]).toJSON()[0].splice(0, dimension);\n    });\n  } catch (_a) {\n    const res = [];\n    for (let i = 0; i < distances.length; i++) {\n      const x = Math.random() * linkDistance;\n      const y = Math.random() * linkDistance;\n      res.push([x, y]);\n    }\n    return res;\n  }\n};","map":{"version":3,"names":["Matrix","MLMatrix","SingularValueDecomposition","mds","dimension","distances","linkDistance","M","mul","pow","rowMeans","mean","colMeans","totalMean","add","subRowVector","subColumnVector","ret","eigenValues","sqrt","diagonalMatrix","diagonal","leftSingularVectors","toJSON","map","row","splice","_a","res","i","length","x","Math","random","y","push"],"sources":["../../src/radial/mds.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,IAAIC,QAAQ,EAAEC,0BAA0B,QAAQ,WAAW;AAG1E,OAAO,MAAMC,GAAG,GAAGA,CACjBC,SAAiB,EACjBC,SAAmB,EACnBC,YAAoB,KACJ;EAChB,IAAI;IACF;IACA,MAAMC,CAAC,GAAGN,QAAQ,CAACO,GAAG,CAACP,QAAQ,CAACQ,GAAG,CAACJ,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;IAExD;IACA,MAAMK,QAAQ,GAAGH,CAAC,CAACI,IAAI,CAAC,KAAK,CAAC;IAC9B,MAAMC,QAAQ,GAAGL,CAAC,CAACI,IAAI,CAAC,QAAQ,CAAC;IACjC,MAAME,SAAS,GAAGN,CAAC,CAACI,IAAI,EAAE;IAC1BJ,CAAC,CAACO,GAAG,CAACD,SAAS,CAAC,CAACE,YAAY,CAACL,QAAQ,CAAC,CAACM,eAAe,CAACJ,QAAQ,CAAC;IAEjE;IACA;IACA,MAAMK,GAAG,GAAG,IAAIf,0BAA0B,CAACK,CAAC,CAAC;IAC7C,MAAMW,WAAW,GAAGjB,QAAQ,CAACkB,IAAI,CAACF,GAAG,CAACG,cAAc,CAAC,CAACC,QAAQ,EAAE;IAChE,OAAOJ,GAAG,CAACK,mBAAmB,CAACC,MAAM,EAAE,CAACC,GAAG,CAAEC,GAAa,IAAI;MAC5D,OAAOxB,QAAQ,CAACO,GAAG,CAAC,CAACiB,GAAG,CAAC,EAAE,CAACP,WAAW,CAAC,CAAC,CACtCK,MAAM,EAAE,CAAC,CAAC,CAAC,CACXG,MAAM,CAAC,CAAC,EAAEtB,SAAS,CAAe;IACvC,CAAC,CAAC;GACH,CAAC,OAAAuB,EAAA,EAAM;IACN,MAAMC,GAAG,GAAiB,EAAE;IAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxB,SAAS,CAACyB,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC,MAAME,CAAC,GAAGC,IAAI,CAACC,MAAM,EAAE,GAAG3B,YAAY;MACtC,MAAM4B,CAAC,GAAGF,IAAI,CAACC,MAAM,EAAE,GAAG3B,YAAY;MACtCsB,GAAG,CAACO,IAAI,CAAC,CAACJ,CAAC,EAAEG,CAAC,CAAC,CAAC;;IAElB,OAAON,GAAG;;AAEd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}