{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/**\n * <zh/> 计算支持回调的动态样式\n *\n * <en/> compute dynamic style that supports callback\n * @param callableStyle - <zh/> 动态样式 | <en/> dynamic style\n * @param context - <zh/> 样式计算迭代上下文 | <en/> style iteration context\n * @returns <zh/> 静态样式 | <en/> static style\n */\nexport function computeElementCallbackStyle(callableStyle, context) {\n  const {\n    datum,\n    graph\n  } = context;\n  if (typeof callableStyle === 'function') return callableStyle.call(graph, datum);\n  return Object.fromEntries(Object.entries(callableStyle).map(([key, style]) => {\n    if (typeof style === 'function') return [key, style.call(graph, datum)];\n    return [key, style];\n  }));\n}\n/**\n * <zh/> 合并图形配置项\n *\n * <en/> Merge shape configuration\n * @param defaultOptions - <zh/> 配置项1 | <en/> configuration 1\n * @param modifiedOptions - <zh/> 配置项2 | <en/> configuration 2\n * @returns <zh/> 合并后的配置项 | <en/> merged configuration\n */\nexport function mergeOptions(defaultOptions, modifiedOptions) {\n  const s1 = (defaultOptions === null || defaultOptions === void 0 ? void 0 : defaultOptions.style) || {};\n  const s2 = (modifiedOptions === null || modifiedOptions === void 0 ? void 0 : modifiedOptions.style) || {};\n  for (const key in s1) {\n    if (!(key in s2)) s2[key] = s1[key];\n  }\n  return Object.assign({}, defaultOptions, modifiedOptions, {\n    style: s2\n  });\n}\n/**\n * <zh/> 获取图形子图形样式\n *\n * <en/> Get the style of the sub-shape of the shape\n * @param style - <zh/> 图形样式 | <en/> shape style\n * @returns <zh/> 子图形样式 | <en/> sub-shape style\n * @remarks\n * <zh/> 从给定的属性对象中提取图形样式属性。删除特定的属性，如位置、变换和类名\n *\n * <en/> Extracts the shape styles from a given attribute object.\n * Removes specific styles like position, transformation, and class name.\n */\nexport function getSubShapeStyle(style) {\n  const {\n      x,\n      y,\n      z,\n      class: cls,\n      className,\n      transform,\n      transformOrigin,\n      zIndex,\n      visibility\n    } = style,\n    rest = __rest(style, [\"x\", \"y\", \"z\", \"class\", \"className\", \"transform\", \"transformOrigin\", \"zIndex\", \"visibility\"]);\n  return rest;\n}","map":{"version":3,"names":["computeElementCallbackStyle","callableStyle","context","datum","graph","call","Object","fromEntries","entries","map","key","style","mergeOptions","defaultOptions","modifiedOptions","s1","s2","assign","getSubShapeStyle","x","y","z","class","cls","className","transform","transformOrigin","zIndex","visibility","rest","__rest"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g6/src/utils/style.ts"],"sourcesContent":["import type { DisplayObjectConfig } from '@antv/g';\nimport type { Graph } from '../runtime/graph';\nimport type { ElementDatum, StyleIterationContext } from '../types';\n\n/**\n * <zh/> 计算支持回调的动态样式\n *\n * <en/> compute dynamic style that supports callback\n * @param callableStyle - <zh/> 动态样式 | <en/> dynamic style\n * @param context - <zh/> 样式计算迭代上下文 | <en/> style iteration context\n * @returns <zh/> 静态样式 | <en/> static style\n */\nexport function computeElementCallbackStyle(\n  callableStyle:\n    | Record<string, unknown>\n    | ((this: Graph, datum: ElementDatum) => Record<string, unknown>)\n    | {\n        [key: string]: (this: Graph, datum: ElementDatum) => unknown;\n      },\n  context: StyleIterationContext,\n) {\n  const { datum, graph } = context;\n\n  if (typeof callableStyle === 'function') return callableStyle.call(graph, datum);\n\n  return Object.fromEntries(\n    Object.entries(callableStyle).map(([key, style]) => {\n      if (typeof style === 'function') return [key, style.call(graph, datum)];\n      return [key, style];\n    }),\n  );\n}\n\n/**\n * <zh/> 合并图形配置项\n *\n * <en/> Merge shape configuration\n * @param defaultOptions - <zh/> 配置项1 | <en/> configuration 1\n * @param modifiedOptions - <zh/> 配置项2 | <en/> configuration 2\n * @returns <zh/> 合并后的配置项 | <en/> merged configuration\n */\nexport function mergeOptions(\n  defaultOptions: DisplayObjectConfig<any>,\n  modifiedOptions: DisplayObjectConfig<any>,\n): DisplayObjectConfig<any> {\n  const s1 = defaultOptions?.style || {};\n  const s2 = modifiedOptions?.style || {};\n  for (const key in s1) {\n    if (!(key in s2)) s2[key] = s1[key];\n  }\n\n  return Object.assign({}, defaultOptions, modifiedOptions, {\n    style: s2,\n  });\n}\n\n/**\n * <zh/> 获取图形子图形样式\n *\n * <en/> Get the style of the sub-shape of the shape\n * @param style - <zh/> 图形样式 | <en/> shape style\n * @returns <zh/> 子图形样式 | <en/> sub-shape style\n * @remarks\n * <zh/> 从给定的属性对象中提取图形样式属性。删除特定的属性，如位置、变换和类名\n *\n * <en/> Extracts the shape styles from a given attribute object.\n * Removes specific styles like position, transformation, and class name.\n */\nexport function getSubShapeStyle<T extends Record<string, any>>(\n  style: T,\n): Omit<T, 'x' | 'y' | 'z' | 'transform' | 'transformOrigin' | 'className' | 'class' | 'zIndex' | 'visibility'> {\n  const { x, y, z, class: cls, className, transform, transformOrigin, zIndex, visibility, ...rest } = style;\n  return rest;\n}\n"],"mappings":";;;;;;;;AAIA;;;;;;;;AAQA,OAAM,SAAUA,2BAA2BA,CACzCC,aAKK,EACLC,OAA8B;EAE9B,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAE,GAAGF,OAAO;EAEhC,IAAI,OAAOD,aAAa,KAAK,UAAU,EAAE,OAAOA,aAAa,CAACI,IAAI,CAACD,KAAK,EAAED,KAAK,CAAC;EAEhF,OAAOG,MAAM,CAACC,WAAW,CACvBD,MAAM,CAACE,OAAO,CAACP,aAAa,CAAC,CAACQ,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAI;IACjD,IAAI,OAAOA,KAAK,KAAK,UAAU,EAAE,OAAO,CAACD,GAAG,EAAEC,KAAK,CAACN,IAAI,CAACD,KAAK,EAAED,KAAK,CAAC,CAAC;IACvE,OAAO,CAACO,GAAG,EAAEC,KAAK,CAAC;EACrB,CAAC,CAAC,CACH;AACH;AAEA;;;;;;;;AAQA,OAAM,SAAUC,YAAYA,CAC1BC,cAAwC,EACxCC,eAAyC;EAEzC,MAAMC,EAAE,GAAG,CAAAF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEF,KAAK,KAAI,EAAE;EACtC,MAAMK,EAAE,GAAG,CAAAF,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEH,KAAK,KAAI,EAAE;EACvC,KAAK,MAAMD,GAAG,IAAIK,EAAE,EAAE;IACpB,IAAI,EAAEL,GAAG,IAAIM,EAAE,CAAC,EAAEA,EAAE,CAACN,GAAG,CAAC,GAAGK,EAAE,CAACL,GAAG,CAAC;EACrC;EAEA,OAAOJ,MAAM,CAACW,MAAM,CAAC,EAAE,EAAEJ,cAAc,EAAEC,eAAe,EAAE;IACxDH,KAAK,EAAEK;GACR,CAAC;AACJ;AAEA;;;;;;;;;;;;AAYA,OAAM,SAAUE,gBAAgBA,CAC9BP,KAAQ;EAER,MAAM;MAAEQ,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,KAAK,EAAEC,GAAG;MAAEC,SAAS;MAAEC,SAAS;MAAEC,eAAe;MAAEC,MAAM;MAAEC;IAAU,IAAcjB,KAAK;IAAdkB,IAAI,GAAAC,MAAA,CAAKnB,KAAK,EAAnG,6FAA2F,CAAQ;EACzG,OAAOkB,IAAI;AACb","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}