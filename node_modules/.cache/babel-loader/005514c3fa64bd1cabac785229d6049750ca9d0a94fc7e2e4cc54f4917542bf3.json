{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { deepMix } from '@antv/util';\nimport { Container } from '../utils/container';\nimport { calcBBox } from '../utils/vector';\nimport { indexOf } from '../utils/array';\nimport { createInnerGuide, inferColor, setAnimation, setStyle, toCell } from './facetRect';\nimport { useDefaultAdaptor, useOverrideAdaptor } from './utils';\nconst setScale = useDefaultAdaptor(options => {\n  return {\n    scale: {\n      x: {\n        guide: null,\n        paddingOuter: 0,\n        paddingInner: 0.1\n      },\n      y: {\n        guide: null,\n        range: [0, 1],\n        paddingOuter: 0,\n        paddingInner: 0.1\n      }\n    }\n  };\n});\nconst setChildren = useOverrideAdaptor(options => {\n  const {\n    data,\n    children,\n    x: originX = 0,\n    y: originY = 0,\n    key: viewKey\n  } = options;\n  const createChildren = (visualData, scale, layout) => {\n    const {\n      x: scaleX,\n      y: scaleY\n    } = scale;\n    const {\n      paddingLeft,\n      paddingTop,\n      marginLeft,\n      marginTop\n    } = layout;\n    const {\n      domain: domainX\n    } = scaleX.getOptions();\n    const {\n      domain: domainY\n    } = scaleY.getOptions();\n    const index = indexOf(visualData);\n    const bboxs = visualData.map(({\n      points\n    }) => calcBBox(points));\n    const values = visualData.map(({\n      x,\n      y\n    }) => [scaleX.invert(x), scaleY.invert(y)]);\n    const facets = values.map(([fx, fy]) => ({\n      columnField: fx,\n      columnIndex: domainX.indexOf(fx),\n      columnValue: fx,\n      columnValuesLength: domainX.length,\n      rowField: fy,\n      rowIndex: domainY.indexOf(fy),\n      rowValue: fy,\n      rowValuesLength: domainY.length\n    }));\n    const normalizedChildren = facets.map(facet => {\n      if (Array.isArray(children)) return children;\n      return [children(facet)].flat(1);\n    });\n    return index.flatMap(i => {\n      const [left, top, width, height] = bboxs[i];\n      const [fx, fy] = values[i];\n      const facet = facets[i];\n      const children = normalizedChildren[i];\n      return children.map(d => {\n        var _a, _b;\n        const {\n            scale,\n            key,\n            encode,\n            axis,\n            interaction\n          } = d,\n          rest = __rest(d, [\"scale\", \"key\", \"encode\", \"axis\", \"interaction\"]);\n        const guideY = (_a = scale === null || scale === void 0 ? void 0 : scale.y) === null || _a === void 0 ? void 0 : _a.guide;\n        const guideX = (_b = scale === null || scale === void 0 ? void 0 : scale.x) === null || _b === void 0 ? void 0 : _b.guide;\n        const defaultScale = {\n          // Do not sync position scales among facets by default.\n          x: {\n            facet: false\n          },\n          // Do not sync position scales among facets by default.\n          y: {\n            facet: false\n          }\n        };\n        const newAxis = {\n          x: createGuideX(guideX)(facet, data),\n          y: createGuideY(guideY)(facet, data)\n        };\n        const defaultAxis = {\n          x: {\n            tickCount: 5\n          },\n          y: {\n            tickCount: 5\n          }\n        };\n        return Object.assign({\n          data,\n          parentKey: viewKey,\n          key: `${key}-${i}`,\n          x: left + paddingLeft + originX + marginLeft,\n          y: top + paddingTop + originY + marginTop,\n          width,\n          height,\n          margin: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          frame: true,\n          scale: deepMix(defaultScale, scale),\n          axis: deepMix(defaultAxis, axis, newAxis),\n          // Hide all legends for child mark by default,\n          // they are displayed in the top-level.\n          legend: false,\n          encode: deepMix({}, encode, {\n            x: fx,\n            y: fy\n          }),\n          interaction: deepMix({}, interaction, {\n            // Register this interaction in parent node.\n            legendFilter: false\n          })\n        }, rest);\n      });\n    });\n  };\n  return {\n    children: createChildren\n  };\n});\n/**\n * @todo Use transform instead of override data directly.\n */\nconst setData = useOverrideAdaptor(options => {\n  const {\n      encode\n    } = options,\n    rest = __rest(options, [\"encode\"]);\n  const {\n      position: P = [],\n      x: X = P,\n      y: Y = [...P].reverse()\n    } = encode,\n    restEncode = __rest(encode, [\"position\", \"x\", \"y\"]);\n  const data = [];\n  for (const $x of [X].flat(1)) {\n    for (const $y of [Y].flat(1)) {\n      data.push({\n        $x,\n        $y\n      });\n    }\n  }\n  return Object.assign(Object.assign({}, rest), {\n    data,\n    encode: Object.assign(Object.assign({}, restEncode), {\n      x: '$x',\n      y: '$y'\n    }),\n    scale: Object.assign(Object.assign({}, [X].flat(1).length === 1 && {\n      x: {\n        paddingInner: 0\n      }\n    }), [Y].flat(1).length === 1 && {\n      y: {\n        paddingInner: 0\n      }\n    })\n  });\n});\nfunction createGuideX(guideX) {\n  if (typeof guideX === 'function') return guideX;\n  if (guideX === null) return () => null;\n  return (facet, data) => {\n    const {\n      rowIndex,\n      rowValuesLength\n    } = facet;\n    // Only the bottom-most facet show axisX.\n    if (rowIndex !== rowValuesLength - 1) return createInnerGuide(guideX, data);\n  };\n}\nfunction createGuideY(guideY) {\n  if (typeof guideY === 'function') return guideY;\n  if (guideY === null) return () => null;\n  return (facet, data) => {\n    const {\n      columnIndex\n    } = facet;\n    // Only the left-most facet show axisY.\n    if (columnIndex !== 0) return createInnerGuide(guideY, data);\n  };\n}\n/**\n * @todo Layout mode: layer, row, col...\n * @todo Specify show axis or not.\n */\nexport const RepeatMatrix = () => {\n  return options => {\n    const newOptions = Container.of(options).call(toCell).call(inferColor).call(setChildren).call(setData).call(setAnimation).call(setStyle).call(setScale).value();\n    return [newOptions];\n  };\n};","map":{"version":3,"names":["deepMix","Container","calcBBox","indexOf","createInnerGuide","inferColor","setAnimation","setStyle","toCell","useDefaultAdaptor","useOverrideAdaptor","setScale","options","scale","x","guide","paddingOuter","paddingInner","y","range","setChildren","data","children","originX","originY","key","viewKey","createChildren","visualData","layout","scaleX","scaleY","paddingLeft","paddingTop","marginLeft","marginTop","domain","domainX","getOptions","domainY","index","bboxs","map","points","values","invert","facets","fx","fy","columnField","columnIndex","columnValue","columnValuesLength","length","rowField","rowIndex","rowValue","rowValuesLength","normalizedChildren","facet","Array","isArray","flat","flatMap","i","left","top","width","height","d","encode","axis","interaction","rest","__rest","guideY","_a","guideX","_b","defaultScale","newAxis","createGuideX","createGuideY","defaultAxis","tickCount","Object","assign","parentKey","margin","paddingRight","paddingBottom","frame","legend","legendFilter","setData","position","P","X","Y","reverse","restEncode","$x","$y","push","RepeatMatrix","newOptions","of","call","value"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/g2/src/composition/repeatMatrix.ts"],"sourcesContent":["import { deepMix } from '@antv/util';\nimport {\n  CompositionComponent as CC,\n  G2View,\n  G2ViewTree,\n  Node,\n} from '../runtime';\nimport { RepeatMatrixComposition } from '../spec';\nimport { Container } from '../utils/container';\nimport { calcBBox } from '../utils/vector';\nimport { indexOf } from '../utils/array';\nimport {\n  createInnerGuide,\n  inferColor,\n  setAnimation,\n  setStyle,\n  toCell,\n} from './facetRect';\nimport { useDefaultAdaptor, useOverrideAdaptor } from './utils';\n\nexport type RepeatMatrixOptions = Omit<RepeatMatrixComposition, 'type'>;\n\nconst setScale = useDefaultAdaptor<G2ViewTree>((options) => {\n  return {\n    scale: {\n      x: { guide: null, paddingOuter: 0, paddingInner: 0.1 },\n      y: { guide: null, range: [0, 1], paddingOuter: 0, paddingInner: 0.1 },\n    },\n  };\n});\n\nconst setChildren = useOverrideAdaptor<G2ViewTree>((options) => {\n  const {\n    data,\n    children,\n    x: originX = 0,\n    y: originY = 0,\n    key: viewKey,\n  } = options;\n  const createChildren = (visualData, scale, layout) => {\n    const { x: scaleX, y: scaleY } = scale;\n    const { paddingLeft, paddingTop, marginLeft, marginTop } = layout;\n    const { domain: domainX } = scaleX.getOptions();\n    const { domain: domainY } = scaleY.getOptions();\n    const index = indexOf(visualData);\n    const bboxs = visualData.map(({ points }) => calcBBox(points));\n    const values = visualData.map(({ x, y }) => [\n      scaleX.invert(x),\n      scaleY.invert(y),\n    ]);\n    const facets = values.map(([fx, fy]) => ({\n      columnField: fx,\n      columnIndex: domainX.indexOf(fx),\n      columnValue: fx,\n      columnValuesLength: domainX.length,\n      rowField: fy,\n      rowIndex: domainY.indexOf(fy),\n      rowValue: fy,\n      rowValuesLength: domainY.length,\n    }));\n    const normalizedChildren: Node[][] = facets.map((facet) => {\n      if (Array.isArray(children)) return children;\n      return [children(facet)].flat(1);\n    });\n    return index.flatMap((i) => {\n      const [left, top, width, height] = bboxs[i];\n      const [fx, fy] = values[i];\n      const facet = facets[i];\n      const children = normalizedChildren[i];\n      return children.map((d) => {\n        const { scale, key, encode, axis, interaction, ...rest } = d;\n        const guideY = scale?.y?.guide;\n        const guideX = scale?.x?.guide;\n        const defaultScale = {\n          // Do not sync position scales among facets by default.\n          x: { facet: false },\n          // Do not sync position scales among facets by default.\n          y: { facet: false },\n        };\n        const newAxis = {\n          x: createGuideX(guideX)(facet, data),\n          y: createGuideY(guideY)(facet, data),\n        };\n        const defaultAxis = {\n          x: { tickCount: 5 },\n          y: { tickCount: 5 },\n        };\n        return {\n          data,\n          parentKey: viewKey,\n          key: `${key}-${i}`,\n          x: left + paddingLeft + originX + marginLeft,\n          y: top + paddingTop + originY + marginTop,\n          width,\n          height,\n          margin: 0,\n          paddingLeft: 0,\n          paddingRight: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          frame: true,\n          scale: deepMix(defaultScale, scale),\n          axis: deepMix(defaultAxis, axis, newAxis),\n          // Hide all legends for child mark by default,\n          // they are displayed in the top-level.\n          legend: false,\n          encode: deepMix({}, encode, {\n            x: fx,\n            y: fy,\n          }),\n          interaction: deepMix({}, interaction, {\n            // Register this interaction in parent node.\n            legendFilter: false,\n          }),\n          ...rest,\n        };\n      });\n    });\n  };\n  return {\n    children: createChildren,\n  };\n});\n\n/**\n * @todo Use transform instead of override data directly.\n */\nconst setData = useOverrideAdaptor<G2ViewTree>((options: G2ViewTree) => {\n  const { encode, ...rest } = options;\n  const {\n    position: P = [],\n    x: X = P,\n    y: Y = [...P].reverse(),\n    ...restEncode\n  } = encode;\n  const data = [];\n  for (const $x of [X].flat(1)) {\n    for (const $y of [Y].flat(1)) {\n      data.push({ $x, $y });\n    }\n  }\n  return {\n    ...rest,\n    data,\n    encode: { ...restEncode, x: '$x', y: '$y' },\n    scale: {\n      ...([X].flat(1).length === 1 && { x: { paddingInner: 0 } }),\n      ...([Y].flat(1).length === 1 && { y: { paddingInner: 0 } }),\n    },\n  };\n});\n\nfunction createGuideX(guideX) {\n  if (typeof guideX === 'function') return guideX;\n  if (guideX === null) return () => null;\n  return (facet, data) => {\n    const { rowIndex, rowValuesLength } = facet;\n    // Only the bottom-most facet show axisX.\n    if (rowIndex !== rowValuesLength - 1) return createInnerGuide(guideX, data);\n  };\n}\n\nfunction createGuideY(guideY) {\n  if (typeof guideY === 'function') return guideY;\n  if (guideY === null) return () => null;\n  return (facet, data) => {\n    const { columnIndex } = facet;\n    // Only the left-most facet show axisY.\n    if (columnIndex !== 0) return createInnerGuide(guideY, data);\n  };\n}\n\n/**\n * @todo Layout mode: layer, row, col...\n * @todo Specify show axis or not.\n */\nexport const RepeatMatrix: CC<RepeatMatrixComposition> = () => {\n  return (options) => {\n    const newOptions = Container.of<G2ViewTree>(options)\n      .call(toCell)\n      .call(inferColor)\n      .call(setChildren)\n      .call(setData)\n      .call(setAnimation)\n      .call(setStyle)\n      .call(setScale)\n      .value();\n    return [newOptions];\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}