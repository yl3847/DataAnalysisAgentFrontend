{"ast":null,"code":"import { applyToText } from './text';\nexport function ellipsisIt(node, w, suffix) {\n  if (suffix === void 0) {\n    suffix = '...';\n  }\n  applyToText(node, {\n    wordWrap: true,\n    wordWrapWidth: w,\n    maxLines: 1,\n    textOverflow: suffix\n  });\n}","map":{"version":3,"names":["applyToText","ellipsisIt","node","w","suffix","wordWrap","wordWrapWidth","maxLines","textOverflow"],"sources":["/Users/yizelu/Desktop/mcp/frontend/node_modules/@antv/component/src/util/ellipsis.ts"],"sourcesContent":["import { Text } from '../shapes';\nimport { applyToText } from './text';\n\nexport function ellipsisIt(node: Text, w: number, suffix = '...') {\n  applyToText(node, { wordWrap: true, wordWrapWidth: w, maxLines: 1, textOverflow: suffix });\n}\n"],"mappings":"AACA,SAASA,WAAW,QAAQ,QAAQ;AAEpC,OAAM,SAAUC,UAAUA,CAACC,IAAU,EAAEC,CAAS,EAAEC,MAAc;EAAd,IAAAA,MAAA;IAAAA,MAAA,QAAc;EAAA;EAC9DJ,WAAW,CAACE,IAAI,EAAE;IAAEG,QAAQ,EAAE,IAAI;IAAEC,aAAa,EAAEH,CAAC;IAAEI,QAAQ,EAAE,CAAC;IAAEC,YAAY,EAAEJ;EAAM,CAAE,CAAC;AAC5F","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}