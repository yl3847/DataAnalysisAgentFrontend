{"version":3,"file":"index.esm.js","sources":["../src/SVGContextService.ts","../src/ContextRegisterPlugin.ts","../src/index.ts"],"sourcesContent":["import type {\n  CanvasContext,\n  DataURLOptions,\n  GlobalRuntime,\n  CanvasConfig,\n  ContextService,\n  DisplayObject,\n} from '@antv/g-lite';\nimport { propertyMetadataCache } from '@antv/g-lite';\nimport { createSVGElement } from '@antv/g-plugin-svg-renderer';\nimport { isString } from '@antv/util';\n\nexport class SVGContextService implements ContextService<SVGElement> {\n  private $container: HTMLElement | null;\n  private $namespace: SVGElement | null;\n  private dpr: number;\n\n  private canvasConfig: Partial<CanvasConfig>;\n\n  constructor(public context: GlobalRuntime & CanvasContext) {\n    this.canvasConfig = context.config;\n  }\n\n  init() {\n    const {\n      container,\n      document: doc,\n      devicePixelRatio: dpr,\n    } = this.canvasConfig;\n\n    // create container\n    this.$container = isString(container)\n      ? (doc || document).getElementById(container)\n      : container;\n    if (this.$container) {\n      if (!this.$container.style.position) {\n        this.$container.style.position = 'relative';\n      }\n      const $namespace = createSVGElement('svg', doc);\n      $namespace.setAttribute('width', `${this.canvasConfig.width}`);\n      $namespace.setAttribute('height', `${this.canvasConfig.height}`);\n\n      this.$container.appendChild($namespace);\n\n      this.$namespace = $namespace;\n    }\n\n    this.dpr = dpr;\n  }\n\n  // @ts-ignore\n  getDomElement() {\n    return this.$namespace;\n  }\n\n  getContext() {\n    return this.$namespace;\n  }\n\n  getDPR() {\n    return this.dpr;\n  }\n\n  getBoundingClientRect() {\n    return this.$namespace?.getBoundingClientRect();\n  }\n\n  destroy() {\n    // destroy context\n    if (this.$container && this.$namespace && this.$namespace.parentNode) {\n      this.$container.removeChild(this.$namespace);\n    }\n  }\n\n  resize(width: number, height: number) {\n    // SVG should ignore DPR\n    if (this.$namespace) {\n      this.$namespace.setAttribute('width', `${width}`);\n      this.$namespace.setAttribute('height', `${height}`);\n    }\n  }\n\n  applyCursorStyle(cursor: string) {\n    if (this.$container) {\n      this.$container.style.cursor = cursor;\n    }\n  }\n\n  private generateCSSText(\n    animationName: string,\n    selector: string,\n    keyframes: ComputedKeyframe[],\n    timing: ComputedEffectTiming,\n    prefixes: Record<string, string> = {},\n  ) {\n    const { duration, easing, delay, direction, iterations, fill } = timing;\n\n    return (\n      `@keyframes ${animationName}{${keyframes\n        .map((keyframe) => {\n          const { offset, composite, computedOffset, easing, ...rest } =\n            keyframe;\n          const rules = Object.keys(rest)\n            .map((attributeName) => {\n              return `${attributeName}:${prefixes[attributeName] || ''}${\n                rest[attributeName]\n              };`;\n            })\n            .join('');\n          return `${computedOffset * 100}%{${rules}}`;\n        })\n        .join('')}}` +\n      `${selector} {animation: ${animationName} ${duration}ms ${easing} ${delay}ms ${\n        iterations === Infinity ? 'infinite' : iterations\n      } ${direction} ${fill};}`\n    );\n  }\n\n  async toDataURL(options: Partial<DataURLOptions> = {}) {\n    const cloneNode = this.$namespace.cloneNode(true);\n\n    const { document: doc } = this.canvasConfig;\n    let animationCounter = 0;\n    let $style: HTMLStyleElement | null = null;\n\n    this.context.renderingContext.root.forEach((object: DisplayObject) => {\n      const animations = object.getAnimations();\n      if (animations.length) {\n        if (!$style) {\n          // export animations to <style>, using CSS Transformation\n          $style = (doc || document).createElement('style');\n          cloneNode.appendChild($style);\n        }\n\n        // @ts-ignore\n        const svgElement = object.elementSVG;\n        const selfSelector = `#${svgElement.$el.id}`;\n        const groupSelector = `#${svgElement.$groupEl.id}`;\n        let selfCssText = '';\n        let groupCssText = '';\n\n        animations.forEach((animation) => {\n          const keyframes = animation.effect.getKeyframes();\n\n          // split attributes into self and group\n          if (keyframes.length) {\n            const selfAttributes = [];\n            const groupAttributes = [];\n            const {\n              offset,\n              composite,\n              computedOffset,\n              easing,\n              transformOrigin,\n              ...rest\n            } = keyframes[0];\n            Object.keys(rest).forEach((attributeName) => {\n              if (attributeName === 'transform') {\n                groupAttributes.push(attributeName);\n              }\n\n              const inherited = !!propertyMetadataCache[attributeName]?.inh;\n              if (inherited) {\n                groupAttributes.push(attributeName);\n              } else if (attributeName !== 'transform') {\n                selfAttributes.push(attributeName);\n              }\n            });\n\n            if (groupAttributes.length) {\n              const keyframesWithGroup = keyframes.map((keyframe) => {\n                const {\n                  offset,\n                  composite,\n                  computedOffset,\n                  easing,\n                  transformOrigin,\n                  ...rest\n                } = keyframe;\n\n                const ret = { offset, composite, computedOffset, easing };\n                Object.keys(rest).forEach((attributeName) => {\n                  if (groupAttributes.includes(attributeName)) {\n                    ret[attributeName] = keyframe[attributeName];\n                  }\n                });\n                return ret;\n              });\n              groupCssText += this.generateCSSText(\n                `a${animationCounter++}`,\n                groupSelector,\n                keyframesWithGroup,\n                animation.effect.getComputedTiming(),\n                { transform: svgElement.$groupEl.getAttribute('transform') },\n              );\n            }\n\n            if (selfAttributes.length) {\n              const keyframesWithSelf = keyframes.map((keyframe) => {\n                const {\n                  offset,\n                  composite,\n                  computedOffset,\n                  easing,\n                  transformOrigin,\n                  ...rest\n                } = keyframe;\n\n                const ret = { offset, composite, computedOffset, easing };\n                Object.keys(rest).forEach((attributeName) => {\n                  if (selfAttributes.includes(attributeName)) {\n                    ret[attributeName] = keyframe[attributeName];\n                  }\n                });\n                return ret;\n              });\n\n              selfCssText += this.generateCSSText(\n                `a${animationCounter++}`,\n                selfSelector,\n                keyframesWithSelf,\n                animation.effect.getComputedTiming(),\n              );\n            }\n          }\n        });\n\n        $style.textContent += selfCssText + groupCssText;\n      }\n    });\n\n    const svgDocType = document.implementation.createDocumentType(\n      'svg',\n      '-//W3C//DTD SVG 1.1//EN',\n      'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd',\n    );\n    const svgDoc = document.implementation.createDocument(\n      'http://www.w3.org/2000/svg',\n      'svg',\n      svgDocType,\n    );\n    svgDoc.replaceChild(cloneNode, svgDoc.documentElement);\n    return `data:image/svg+xml;charset=utf8,${encodeURIComponent(\n      new XMLSerializer().serializeToString(svgDoc),\n    )}`;\n  }\n}\n","import { AbstractRendererPlugin } from '@antv/g-lite';\nimport { SVGContextService } from './SVGContextService';\n\nexport class ContextRegisterPlugin extends AbstractRendererPlugin {\n  name = 'svg-context-register';\n  init(): void {\n    // @ts-ignore\n    this.context.ContextService = SVGContextService;\n  }\n  destroy(): void {\n    delete this.context.ContextService;\n  }\n}\n","import type { RendererConfig } from '@antv/g-lite';\nimport { AbstractRenderer } from '@antv/g-lite';\nimport * as DomInteraction from '@antv/g-plugin-dom-interaction';\nimport * as SVGPicker from '@antv/g-plugin-svg-picker';\nimport * as SVGRenderer from '@antv/g-plugin-svg-renderer';\nimport { ContextRegisterPlugin } from './ContextRegisterPlugin';\n\nexport { DomInteraction, SVGPicker, SVGRenderer };\n\nexport interface SVGRendererConfig extends RendererConfig {\n  /**\n   * Whether to output id on SVGElement with `setAttribute` like: <circle id=\"g-circle-123\">.\n   */\n  outputSVGElementId: boolean;\n}\n\nexport class Renderer extends AbstractRenderer {\n  constructor(config: Partial<SVGRendererConfig> = {}) {\n    super(config);\n\n    this.registerPlugin(new ContextRegisterPlugin());\n    this.registerPlugin(\n      new SVGRenderer.Plugin({\n        outputSVGElementId: config.outputSVGElementId,\n      }),\n    );\n    this.registerPlugin(new DomInteraction.Plugin());\n    this.registerPlugin(new SVGPicker.Plugin());\n  }\n}\n"],"names":["SVGContextService","context","_classCallCheck","canvasConfig","config","_createClass","key","value","init","_this$canvasConfig","container","doc","document","dpr","devicePixelRatio","$container","isString","getElementById","style","position","$namespace","createSVGElement","setAttribute","concat","width","height","appendChild","getDomElement","getContext","getDPR","getBoundingClientRect","_this$$namespace","destroy","parentNode","removeChild","resize","applyCursorStyle","cursor","generateCSSText","animationName","selector","keyframes","timing","prefixes","arguments","length","undefined","duration","easing","delay","direction","iterations","fill","map","keyframe","offset","composite","computedOffset","rest","_objectWithoutProperties","_excluded","rules","Object","keys","attributeName","join","Infinity","_toDataURL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this","cloneNode","animationCounter","$style","svgDocType","svgDoc","wrap","_context","prev","next","renderingContext","root","forEach","object","animations","getAnimations","createElement","svgElement","elementSVG","selfSelector","$el","id","groupSelector","$groupEl","selfCssText","groupCssText","animation","effect","getKeyframes","selfAttributes","groupAttributes","_keyframes$","transformOrigin","_excluded2","_propertyMetadataCach","push","inherited","propertyMetadataCache","inh","keyframesWithGroup","_excluded3","ret","includes","getComputedTiming","transform","getAttribute","keyframesWithSelf","_excluded4","textContent","implementation","createDocumentType","createDocument","replaceChild","documentElement","abrupt","encodeURIComponent","XMLSerializer","serializeToString","stop","toDataURL","apply","ContextRegisterPlugin","_AbstractRendererPlug","_len","args","Array","_key","_callSuper","name","_inherits","ContextService","AbstractRendererPlugin","Renderer","_AbstractRenderer","registerPlugin","SVGRenderer","Plugin","outputSVGElementId","DomInteraction","SVGPicker","AbstractRenderer"],"mappings":"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"}